!function () {
    "use strict";
    var e = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
        t = function (e) {
            return e && e.Math == Math && e
        },
        i = t("object" == typeof globalThis && globalThis) || t("object" == typeof window && window) || t("object" == typeof self && self) || t("object" == typeof e && e) || function () {
            return this
        }() || Function("return this")(), n = {}, r = function (e) {
            try {
                return !!e()
            } catch (e) {
                return !0
            }
        }, o = !r((function () {
            return 7 != Object.defineProperty({}, 1, {
                get: function () {
                    return 7
                }
            })[1]
        })), a = {}, s = {}.propertyIsEnumerable, c = Object.getOwnPropertyDescriptor, l = c && !s.call({1: 2}, 1);
    a.f = l ? function (e) {
        var t = c(this, e);
        return !!t && t.enumerable
    } : s;
    var d, u, h = function (e, t) {
            return {enumerable: !(1 & e), configurable: !(2 & e), writable: !(4 & e), value: t}
        }, f = {}.toString, A = function (e) {
            return f.call(e).slice(8, -1)
        }, g = A, p = "".split, v = r((function () {
            return !Object("z").propertyIsEnumerable(0)
        })) ? function (e) {
            return "String" == g(e) ? p.call(e, "") : Object(e)
        } : Object, w = function (e) {
            if (null == e) throw TypeError("Can't call method on " + e);
            return e
        }, y = v, m = w, C = function (e) {
            return y(m(e))
        }, I = function (e) {
            return "object" == typeof e ? null !== e : "function" == typeof e
        }, E = i, S = function (e) {
            return "function" == typeof e ? e : void 0
        }, b = function (e, t) {
            return arguments.length < 2 ? S(E[e]) : E[e] && E[e][t]
        }, x = b("navigator", "userAgent") || "", B = i, P = x, Q = B.process, R = B.Deno,
        D = Q && Q.versions || R && R.version, k = D && D.v8;
    k ? u = (d = k.split("."))[0] < 4 ? 1 : d[0] + d[1] : P && (!(d = P.match(/Edge\/(\d+)/)) || d[1] >= 74) && (d = P.match(/Chrome\/(\d+)/)) && (u = d[1]);
    var M = u && +u, H = M, T = r, L = !!Object.getOwnPropertySymbols && !T((function () {
        var e = Symbol();
        return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && H && H < 41
    })), O = L && !Symbol.sham && "symbol" == typeof Symbol.iterator, F = b, X = O ? function (e) {
        return "symbol" == typeof e
    } : function (e) {
        var t = F("Symbol");
        return "function" == typeof t && Object(e) instanceof t
    }, G = I, z = {exports: {}}, j = i, U = function (e, t) {
        try {
            Object.defineProperty(j, e, {value: t, configurable: !0, writable: !0})
        } catch (i) {
            j[e] = t
        }
        return t
    }, N = U, J = "__core-js_shared__", K = i[J] || N(J, {}), V = K;
    (z.exports = function (e, t) {
        return V[e] || (V[e] = void 0 !== t ? t : {})
    })("versions", []).push({version: "3.16.1", mode: "global", copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"});
    var Y = w, W = function (e) {
            return Object(Y(e))
        }, q = W, Z = {}.hasOwnProperty, _ = Object.hasOwn || function (e, t) {
            return Z.call(q(e), t)
        }, $ = 0, ee = Math.random(), te = function (e) {
            return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++$ + ee).toString(36)
        }, ie = i, ne = z.exports, re = _, oe = te, ae = L, se = O, ce = ne("wks"), le = ie.Symbol,
        de = se ? le : le && le.withoutSetter || oe, ue = function (e) {
            return re(ce, e) && (ae || "string" == typeof ce[e]) || (ae && re(le, e) ? ce[e] = le[e] : ce[e] = de("Symbol." + e)), ce[e]
        }, he = I, fe = X, Ae = ue("toPrimitive"), ge = function (e, t) {
            if (!he(e) || fe(e)) return e;
            var i, n = e[Ae];
            if (void 0 !== n) {
                if (void 0 === t && (t = "default"), i = n.call(e, t), !he(i) || fe(i)) return i;
                throw TypeError("Can't convert object to primitive value")
            }
            return void 0 === t && (t = "number"), function (e, t) {
                var i, n;
                if ("string" === t && "function" == typeof (i = e.toString) && !G(n = i.call(e))) return n;
                if ("function" == typeof (i = e.valueOf) && !G(n = i.call(e))) return n;
                if ("string" !== t && "function" == typeof (i = e.toString) && !G(n = i.call(e))) return n;
                throw TypeError("Can't convert object to primitive value")
            }(e, t)
        }, pe = ge, ve = X, we = function (e) {
            var t = pe(e, "string");
            return ve(t) ? t : String(t)
        }, ye = I, me = i.document, Ce = ye(me) && ye(me.createElement), Ie = function (e) {
            return Ce ? me.createElement(e) : {}
        }, Ee = Ie, Se = !o && !r((function () {
            return 7 != Object.defineProperty(Ee("div"), "a", {
                get: function () {
                    return 7
                }
            }).a
        })), be = o, xe = a, Be = h, Pe = C, Qe = we, Re = _, De = Se, ke = Object.getOwnPropertyDescriptor;
    n.f = be ? ke : function (e, t) {
        if (e = Pe(e), t = Qe(t), De) try {
            return ke(e, t)
        } catch (e) {
        }
        if (Re(e, t)) return Be(!xe.f.call(e, t), e[t])
    };
    var Me = {}, He = I, Te = function (e) {
        if (!He(e)) throw TypeError(String(e) + " is not an object");
        return e
    }, Le = o, Oe = Se, Fe = Te, Xe = we, Ge = Object.defineProperty;
    Me.f = Le ? Ge : function (e, t, i) {
        if (Fe(e), t = Xe(t), Fe(i), Oe) try {
            return Ge(e, t, i)
        } catch (e) {
        }
        if ("get" in i || "set" in i) throw TypeError("Accessors not supported");
        return "value" in i && (e[t] = i.value), e
    };
    var ze = Me, je = h, Ue = o ? function (e, t, i) {
        return ze.f(e, t, je(1, i))
    } : function (e, t, i) {
        return e[t] = i, e
    }, Ne = {exports: {}}, Je = K, Ke = Function.toString;
    "function" != typeof Je.inspectSource && (Je.inspectSource = function (e) {
        return Ke.call(e)
    });
    var Ve, Ye, We, qe = Je.inspectSource, Ze = qe, _e = i.WeakMap,
        $e = "function" == typeof _e && /native code/.test(Ze(_e)), et = z.exports, tt = te, it = et("keys"),
        nt = function (e) {
            return it[e] || (it[e] = tt(e))
        }, rt = {}, ot = $e, at = I, st = Ue, ct = _, lt = K, dt = nt, ut = rt, ht = "Object already initialized",
        ft = i.WeakMap;
    if (ot || lt.state) {
        var At = lt.state || (lt.state = new ft), gt = At.get, pt = At.has, vt = At.set;
        Ve = function (e, t) {
            if (pt.call(At, e)) throw new TypeError(ht);
            return t.facade = e, vt.call(At, e, t), t
        }, Ye = function (e) {
            return gt.call(At, e) || {}
        }, We = function (e) {
            return pt.call(At, e)
        }
    } else {
        var wt = dt("state");
        ut[wt] = !0, Ve = function (e, t) {
            if (ct(e, wt)) throw new TypeError(ht);
            return t.facade = e, st(e, wt, t), t
        }, Ye = function (e) {
            return ct(e, wt) ? e[wt] : {}
        }, We = function (e) {
            return ct(e, wt)
        }
    }
    var yt = {
        set: Ve, get: Ye, has: We, enforce: function (e) {
            return We(e) ? Ye(e) : Ve(e, {})
        }, getterFor: function (e) {
            return function (t) {
                var i;
                if (!at(t) || (i = Ye(t)).type !== e) throw TypeError("Incompatible receiver, " + e + " required");
                return i
            }
        }
    }, mt = i, Ct = Ue, It = _, Et = U, St = qe, bt = yt.get, xt = yt.enforce, Bt = String(String).split("String");
    (Ne.exports = function (e, t, i, n) {
        var r, o = !!n && !!n.unsafe, a = !!n && !!n.enumerable, s = !!n && !!n.noTargetGet;
        "function" == typeof i && ("string" != typeof t || It(i, "name") || Ct(i, "name", t), (r = xt(i)).source || (r.source = Bt.join("string" == typeof t ? t : ""))), e !== mt ? (o ? !s && e[t] && (a = !0) : delete e[t], a ? e[t] = i : Ct(e, t, i)) : a ? e[t] = i : Et(t, i)
    })(Function.prototype, "toString", (function () {
        return "function" == typeof this && bt(this).source || St(this)
    }));
    var Pt = {}, Qt = Math.ceil, Rt = Math.floor, Dt = function (e) {
            return isNaN(e = +e) ? 0 : (e > 0 ? Rt : Qt)(e)
        }, kt = Dt, Mt = Math.min, Ht = function (e) {
            return e > 0 ? Mt(kt(e), 9007199254740991) : 0
        }, Tt = Dt, Lt = Math.max, Ot = Math.min, Ft = function (e, t) {
            var i = Tt(e);
            return i < 0 ? Lt(i + t, 0) : Ot(i, t)
        }, Xt = C, Gt = Ht, zt = Ft, jt = function (e) {
            return function (t, i, n) {
                var r, o = Xt(t), a = Gt(o.length), s = zt(n, a);
                if (e && i != i) {
                    for (; a > s;) if ((r = o[s++]) != r) return !0
                } else for (; a > s; s++) if ((e || s in o) && o[s] === i) return e || s || 0;
                return !e && -1
            }
        }, Ut = {includes: jt(!0), indexOf: jt(!1)}, Nt = _, Jt = C, Kt = Ut.indexOf, Vt = rt, Yt = function (e, t) {
            var i, n = Jt(e), r = 0, o = [];
            for (i in n) !Nt(Vt, i) && Nt(n, i) && o.push(i);
            for (; t.length > r;) Nt(n, i = t[r++]) && (~Kt(o, i) || o.push(i));
            return o
        },
        Wt = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"],
        qt = Yt, Zt = Wt.concat("length", "prototype");
    Pt.f = Object.getOwnPropertyNames || function (e) {
        return qt(e, Zt)
    };
    var _t = {};
    _t.f = Object.getOwnPropertySymbols;
    var $t = Pt, ei = _t, ti = Te, ii = b("Reflect", "ownKeys") || function (e) {
            var t = $t.f(ti(e)), i = ei.f;
            return i ? t.concat(i(e)) : t
        }, ni = _, ri = ii, oi = n, ai = Me, si = function (e, t) {
            for (var i = ri(t), n = ai.f, r = oi.f, o = 0; o < i.length; o++) {
                var a = i[o];
                ni(e, a) || n(e, a, r(t, a))
            }
        }, ci = r, li = /#|\.prototype\./, di = function (e, t) {
            var i = hi[ui(e)];
            return i == Ai || i != fi && ("function" == typeof t ? ci(t) : !!t)
        }, ui = di.normalize = function (e) {
            return String(e).replace(li, ".").toLowerCase()
        }, hi = di.data = {}, fi = di.NATIVE = "N", Ai = di.POLYFILL = "P", gi = di, pi = i, vi = n.f, wi = Ue,
        yi = Ne.exports, mi = U, Ci = si, Ii = gi, Ei = function (e, t) {
            var i, n, r, o, a, s = e.target, c = e.global, l = e.stat;
            if (i = c ? pi : l ? pi[s] || mi(s, {}) : (pi[s] || {}).prototype) for (n in t) {
                if (o = t[n], r = e.noTargetGet ? (a = vi(i, n)) && a.value : i[n], !Ii(c ? n : s + (l ? "." : "#") + n, e.forced) && void 0 !== r) {
                    if (typeof o == typeof r) continue;
                    Ci(o, r)
                }
                (e.sham || r && r.sham) && wi(o, "sham", !0), yi(i, n, o, e)
            }
        }, Si = X, bi = function (e) {
            if (Si(e)) throw TypeError("Cannot convert a Symbol value to a string");
            return String(e)
        }, xi = Te, Bi = function () {
            var e = xi(this), t = "";
            return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), e.dotAll && (t += "s"), e.unicode && (t += "u"), e.sticky && (t += "y"), t
        }, Pi = {}, Qi = r, Ri = function (e, t) {
            return RegExp(e, t)
        };
    Pi.UNSUPPORTED_Y = Qi((function () {
        var e = Ri("a", "y");
        return e.lastIndex = 2, null != e.exec("abcd")
    })), Pi.BROKEN_CARET = Qi((function () {
        var e = Ri("^r", "gy");
        return e.lastIndex = 2, null != e.exec("str")
    }));
    var Di, ki = Yt, Mi = Wt, Hi = Object.keys || function (e) {
            return ki(e, Mi)
        }, Ti = Me, Li = Te, Oi = Hi, Fi = o ? Object.defineProperties : function (e, t) {
            Li(e);
            for (var i, n = Oi(t), r = n.length, o = 0; r > o;) Ti.f(e, i = n[o++], t[i]);
            return e
        }, Xi = b("document", "documentElement"), Gi = Te, zi = Fi, ji = Wt, Ui = rt, Ni = Xi, Ji = Ie, Ki = nt("IE_PROTO"),
        Vi = function () {
        }, Yi = function (e) {
            return "<script>" + e + "<\/script>"
        }, Wi = function (e) {
            e.write(Yi("")), e.close();
            var t = e.parentWindow.Object;
            return e = null, t
        }, qi = function () {
            try {
                Di = new ActiveXObject("htmlfile")
            } catch (e) {
            }
            qi = document.domain && Di ? Wi(Di) : function () {
                var e, t = Ji("iframe");
                if (t.style) return t.style.display = "none", Ni.appendChild(t), t.src = String("javascript:"), (e = t.contentWindow.document).open(), e.write(Yi("document.F=Object")), e.close(), e.F
            }() || Wi(Di);
            for (var e = ji.length; e--;) delete qi.prototype[ji[e]];
            return qi()
        };
    Ui[Ki] = !0;
    var Zi = Object.create || function (e, t) {
            var i;
            return null !== e ? (Vi.prototype = Gi(e), i = new Vi, Vi.prototype = null, i[Ki] = e) : i = qi(), void 0 === t ? i : zi(i, t)
        }, _i = r((function () {
            var e = RegExp(".", "string".charAt(0));
            return !(e.dotAll && e.exec("\n") && "s" === e.flags)
        })), $i = r((function () {
            var e = RegExp("(?<a>b)", "string".charAt(5));
            return "b" !== e.exec("b").groups.a || "bc" !== "b".replace(e, "$<a>c")
        })), en = bi, tn = Bi, nn = Pi, rn = z.exports, on = Zi, an = yt.get, sn = _i, cn = $i, ln = RegExp.prototype.exec,
        dn = rn("native-string-replace", String.prototype.replace), un = ln, hn = function () {
            var e = /a/, t = /b*/g;
            return ln.call(e, "a"), ln.call(t, "a"), 0 !== e.lastIndex || 0 !== t.lastIndex
        }(), fn = nn.UNSUPPORTED_Y || nn.BROKEN_CARET, An = void 0 !== /()??/.exec("")[1];
    (hn || An || fn || sn || cn) && (un = function (e) {
        var t, i, n, r, o, a, s, c = this, l = an(c), d = en(e), u = l.raw;
        if (u) return u.lastIndex = c.lastIndex, t = un.call(u, d), c.lastIndex = u.lastIndex, t;
        var h = l.groups, f = fn && c.sticky, A = tn.call(c), g = c.source, p = 0, v = d;
        if (f && (-1 === (A = A.replace("y", "")).indexOf("g") && (A += "g"), v = d.slice(c.lastIndex), c.lastIndex > 0 && (!c.multiline || c.multiline && "\n" !== d.charAt(c.lastIndex - 1)) && (g = "(?: " + g + ")", v = " " + v, p++), i = new RegExp("^(?:" + g + ")", A)), An && (i = new RegExp("^" + g + "$(?!\\s)", A)), hn && (n = c.lastIndex), r = ln.call(f ? i : c, v), f ? r ? (r.input = r.input.slice(p), r[0] = r[0].slice(p), r.index = c.lastIndex, c.lastIndex += r[0].length) : c.lastIndex = 0 : hn && r && (c.lastIndex = c.global ? r.index + r[0].length : n), An && r && r.length > 1 && dn.call(r[0], i, (function () {
            for (o = 1; o < arguments.length - 2; o++) void 0 === arguments[o] && (r[o] = void 0)
        })), r && h) for (r.groups = a = on(null), o = 0; o < h.length; o++) a[(s = h[o])[0]] = r[s[1]];
        return r
    });
    var gn = un;
    Ei({target: "RegExp", proto: !0, forced: /./.exec !== gn}, {exec: gn});
    var pn = Ne.exports, vn = gn, wn = r, yn = ue, mn = Ue, Cn = yn("species"), In = RegExp.prototype,
        En = function (e, t, i, n) {
            var r = yn(e), o = !wn((function () {
                var t = {};
                return t[r] = function () {
                    return 7
                }, 7 != ""[e](t)
            })), a = o && !wn((function () {
                var t = !1, i = /a/;
                return "split" === e && ((i = {}).constructor = {}, i.constructor[Cn] = function () {
                    return i
                }, i.flags = "", i[r] = /./[r]), i.exec = function () {
                    return t = !0, null
                }, i[r](""), !t
            }));
            if (!o || !a || i) {
                var s = /./[r], c = t(r, ""[e], (function (e, t, i, n, r) {
                    var a = t.exec;
                    return a === vn || a === In.exec ? o && !r ? {done: !0, value: s.call(t, i, n)} : {
                        done: !0,
                        value: e.call(i, t, n)
                    } : {done: !1}
                }));
                pn(String.prototype, e, c[0]), pn(In, r, c[1])
            }
            n && mn(In[r], "sham", !0)
        }, Sn = Object.is || function (e, t) {
            return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t
        }, bn = A, xn = gn, Bn = function (e, t) {
            var i = e.exec;
            if ("function" == typeof i) {
                var n = i.call(e, t);
                if ("object" != typeof n) throw TypeError("RegExp exec method returned something other than an Object or null");
                return n
            }
            if ("RegExp" !== bn(e)) throw TypeError("RegExp#exec called on incompatible receiver");
            return xn.call(e, t)
        }, Pn = Te, Qn = w, Rn = Sn, Dn = bi, kn = Bn;
    En("search", (function (e, t, i) {
        return [function (t) {
            var i = Qn(this), n = null == t ? void 0 : t[e];
            return void 0 !== n ? n.call(t, i) : new RegExp(t)[e](Dn(i))
        }, function (e) {
            var n = Pn(this), r = Dn(e), o = i(t, n, r);
            if (o.done) return o.value;
            var a = n.lastIndex;
            Rn(a, 0) || (n.lastIndex = 0);
            var s = kn(n, r);
            return Rn(n.lastIndex, a) || (n.lastIndex = a), null === s ? -1 : s.index
        }]
    }));
    var Mn = w, Hn = bi, Tn = /"/g, Ln = function (e, t, i, n) {
        var r = Hn(Mn(e)), o = "<" + t;
        return "" !== i && (o += " " + i + '="' + Hn(n).replace(Tn, "&quot;") + '"'), o + ">" + r + "</" + t + ">"
    }, On = r, Fn = function (e) {
        return On((function () {
            var t = ""[e]('"');
            return t !== t.toLowerCase() || t.split('"').length > 3
        }))
    }, Xn = Ln;
    Ei({target: "String", proto: !0, forced: Fn("blink")}, {
        blink: function () {
            return Xn(this, "blink", "", "")
        }
    });
    var Gn = A, zn = Array.isArray || function (e) {
            return "Array" == Gn(e)
        }, jn = I, Un = zn, Nn = ue("species"), Jn = function (e, t) {
            return new (function (e) {
                var t;
                return Un(e) && ("function" != typeof (t = e.constructor) || t !== Array && !Un(t.prototype) ? jn(t) && null === (t = t[Nn]) && (t = void 0) : t = void 0), void 0 === t ? Array : t
            }(e))(0 === t ? 0 : t)
        }, Kn = we, Vn = Me, Yn = h, Wn = function (e, t, i) {
            var n = Kn(t);
            n in e ? Vn.f(e, n, Yn(0, i)) : e[n] = i
        }, qn = r, Zn = M, _n = ue("species"), $n = function (e) {
            return Zn >= 51 || !qn((function () {
                var t = [];
                return (t.constructor = {})[_n] = function () {
                    return {foo: 1}
                }, 1 !== t[e](Boolean).foo
            }))
        }, er = Ei, tr = Ft, ir = Dt, nr = Ht, rr = W, or = Jn, ar = Wn, sr = $n("splice"), cr = Math.max, lr = Math.min,
        dr = 9007199254740991, ur = "Maximum allowed length exceeded";
    er({target: "Array", proto: !0, forced: !sr}, {
        splice: function (e, t) {
            var i, n, r, o, a, s, c = rr(this), l = nr(c.length), d = tr(e, l), u = arguments.length;
            if (0 === u ? i = n = 0 : 1 === u ? (i = 0, n = l - d) : (i = u - 2, n = lr(cr(ir(t), 0), l - d)), l + i - n > dr) throw TypeError(ur);
            for (r = or(c, n), o = 0; o < n; o++) (a = d + o) in c && ar(r, o, c[a]);
            if (r.length = n, i < n) {
                for (o = d; o < l - n; o++) s = o + i, (a = o + n) in c ? c[s] = c[a] : delete c[s];
                for (o = l; o > l - n + i; o--) delete c[o - 1]
            } else if (i > n) for (o = l - n; o > d; o--) s = o + i - 1, (a = o + n - 1) in c ? c[s] = c[a] : delete c[s];
            for (o = 0; o < i; o++) c[o + d] = arguments[o + 2];
            return c.length = l - n + i, r
        }
    });
    var hr = r, fr = function (e, t) {
        var i = [][e];
        return !!i && hr((function () {
            i.call(null, t || function () {
                throw 1
            }, 1)
        }))
    }, Ar = Ei, gr = Ut.indexOf, pr = fr, vr = [].indexOf, wr = !!vr && 1 / [1].indexOf(1, -0) < 0, yr = pr("indexOf");
    Ar({target: "Array", proto: !0, forced: wr || !yr}, {
        indexOf: function (e) {
            return wr ? vr.apply(this, arguments) || 0 : gr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var mr = Dt, Cr = bi, Ir = w, Er = function (e) {
            return function (t, i) {
                var n, r, o = Cr(Ir(t)), a = mr(i), s = o.length;
                return a < 0 || a >= s ? e ? "" : void 0 : (n = o.charCodeAt(a)) < 55296 || n > 56319 || a + 1 === s || (r = o.charCodeAt(a + 1)) < 56320 || r > 57343 ? e ? o.charAt(a) : n : e ? o.slice(a, a + 2) : r - 56320 + (n - 55296 << 10) + 65536
            }
        }, Sr = {codeAt: Er(!1), charAt: Er(!0)}, br = Sr.charAt, xr = function (e, t, i) {
            return t + (i ? br(e, t).length : 1)
        }, Br = W, Pr = Math.floor, Qr = "".replace, Rr = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, Dr = /\$([$&'`]|\d{1,2})/g,
        kr = En, Mr = r, Hr = Te, Tr = Dt, Lr = Ht, Or = bi, Fr = w, Xr = xr, Gr = function (e, t, i, n, r, o) {
            var a = i + e.length, s = n.length, c = Dr;
            return void 0 !== r && (r = Br(r), c = Rr), Qr.call(o, c, (function (o, c) {
                var l;
                switch (c.charAt(0)) {
                    case"$":
                        return "$";
                    case"&":
                        return e;
                    case"`":
                        return t.slice(0, i);
                    case"'":
                        return t.slice(a);
                    case"<":
                        l = r[c.slice(1, -1)];
                        break;
                    default:
                        var d = +c;
                        if (0 === d) return o;
                        if (d > s) {
                            var u = Pr(d / 10);
                            return 0 === u ? o : u <= s ? void 0 === n[u - 1] ? c.charAt(1) : n[u - 1] + c.charAt(1) : o
                        }
                        l = n[d - 1]
                }
                return void 0 === l ? "" : l
            }))
        }, zr = Bn, jr = ue("replace"), Ur = Math.max, Nr = Math.min, Jr = "$0" === "a".replace(/./, "$0"),
        Kr = !!/./[jr] && "" === /./[jr]("a", "$0");
    kr("replace", (function (e, t, i) {
        var n = Kr ? "$" : "$0";
        return [function (e, i) {
            var n = Fr(this), r = null == e ? void 0 : e[jr];
            return void 0 !== r ? r.call(e, n, i) : t.call(Or(n), e, i)
        }, function (e, r) {
            var o = Hr(this), a = Or(e);
            if ("string" == typeof r && -1 === r.indexOf(n) && -1 === r.indexOf("$<")) {
                var s = i(t, o, a, r);
                if (s.done) return s.value
            }
            var c = "function" == typeof r;
            c || (r = Or(r));
            var l = o.global;
            if (l) {
                var d = o.unicode;
                o.lastIndex = 0
            }
            for (var u = []; ;) {
                var h = zr(o, a);
                if (null === h) break;
                if (u.push(h), !l) break;
                "" === Or(h[0]) && (o.lastIndex = Xr(a, Lr(o.lastIndex), d))
            }
            for (var f, A = "", g = 0, p = 0; p < u.length; p++) {
                h = u[p];
                for (var v = Or(h[0]), w = Ur(Nr(Tr(h.index), a.length), 0), y = [], m = 1; m < h.length; m++) y.push(void 0 === (f = h[m]) ? f : String(f));
                var C = h.groups;
                if (c) {
                    var I = [v].concat(y, w, a);
                    void 0 !== C && I.push(C);
                    var E = Or(r.apply(void 0, I))
                } else E = Gr(v, a, w, y, C, r);
                w >= g && (A += a.slice(g, w) + E, g = w + v.length)
            }
            return A + a.slice(g)
        }]
    }), !!Mr((function () {
        var e = /./;
        return e.exec = function () {
            var e = [];
            return e.groups = {a: "7"}, e
        }, "7" !== "".replace(e, "$<a>")
    })) || !Jr || Kr);
    var Vr = {};
    Vr[ue("toStringTag")] = "z";
    var Yr = "[object z]" === String(Vr), Wr = Yr, qr = A, Zr = ue("toStringTag"), _r = "Arguments" == qr(function () {
        return arguments
    }()), $r = Wr ? qr : function (e) {
        var t, i, n;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (i = function (e, t) {
            try {
                return e[t]
            } catch (e) {
            }
        }(t = Object(e), Zr)) ? i : _r ? qr(t) : "Object" == (n = qr(t)) && "function" == typeof t.callee ? "Arguments" : n
    }, eo = $r, to = Yr ? {}.toString : function () {
        return "[object " + eo(this) + "]"
    }, io = Yr, no = Ne.exports, ro = to;
    io || no(Object.prototype, "toString", ro, {unsafe: !0});
    var oo = Ne.exports, ao = Te, so = bi, co = r, lo = Bi, uo = "toString", ho = RegExp.prototype, fo = ho.toString,
        Ao = co((function () {
            return "/a/b" != fo.call({source: "a", flags: "b"})
        })), go = fo.name != uo;
    (Ao || go) && oo(RegExp.prototype, uo, (function () {
        var e = ao(this), t = so(e.source), i = e.flags;
        return "/" + t + "/" + so(void 0 === i && e instanceof RegExp && !("flags" in ho) ? lo.call(e) : i)
    }), {unsafe: !0});
    var po = Ei, vo = C, wo = [].join, yo = v != Object, mo = fr("join", ",");
    po({target: "Array", proto: !0, forced: yo || !mo}, {
        join: function (e) {
            return wo.call(vo(this), void 0 === e ? "," : e)
        }
    });
    var Co = "\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff", Io = w, Eo = bi,
        So = "[\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff]", bo = RegExp("^" + So + So + "*"),
        xo = RegExp(So + So + "*$"), Bo = function (e) {
            return function (t) {
                var i = Eo(Io(t));
                return 1 & e && (i = i.replace(bo, "")), 2 & e && (i = i.replace(xo, "")), i
            }
        }, Po = {start: Bo(1), end: Bo(2), trim: Bo(3)}, Qo = bi, Ro = Po.trim, Do = Co, ko = i.parseInt,
        Mo = /^[+-]?0[Xx]/, Ho = 8 !== ko(Do + "08") || 22 !== ko(Do + "0x16") ? function (e, t) {
            var i = Ro(Qo(e));
            return ko(i, t >>> 0 || (Mo.test(i) ? 16 : 10))
        } : ko;
    Ei({global: !0, forced: parseInt != Ho}, {parseInt: Ho});
    var To = Ln;
    Ei({target: "String", proto: !0, forced: Fn("anchor")}, {
        anchor: function (e) {
            return To(this, "a", "name", e)
        }
    });
    var Lo = Zi, Oo = Me, Fo = ue("unscopables"), Xo = Array.prototype;
    null == Xo[Fo] && Oo.f(Xo, Fo, {configurable: !0, value: Lo(null)});
    var Go, zo, jo, Uo = function (e) {
            Xo[Fo][e] = !0
        }, No = {}, Jo = !r((function () {
            function e() {
            }

            return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype
        })), Ko = _, Vo = W, Yo = Jo, Wo = nt("IE_PROTO"), qo = Object.prototype,
        Zo = Yo ? Object.getPrototypeOf : function (e) {
            return e = Vo(e), Ko(e, Wo) ? e[Wo] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? qo : null
        }, _o = r, $o = Zo, ea = Ue, ta = _, ia = ue("iterator"), na = !1;
    [].keys && ("next" in (jo = [].keys()) ? (zo = $o($o(jo))) !== Object.prototype && (Go = zo) : na = !0), (null == Go || _o((function () {
        var e = {};
        return Go[ia].call(e) !== e
    }))) && (Go = {}), ta(Go, ia) || ea(Go, ia, (function () {
        return this
    }));
    var ra = {IteratorPrototype: Go, BUGGY_SAFARI_ITERATORS: na}, oa = Me.f, aa = _, sa = ue("toStringTag"),
        ca = function (e, t, i) {
            e && !aa(e = i ? e : e.prototype, sa) && oa(e, sa, {configurable: !0, value: t})
        }, la = ra.IteratorPrototype, da = Zi, ua = h, ha = ca, fa = No, Aa = function () {
            return this
        }, ga = function (e, t, i) {
            var n = t + " Iterator";
            return e.prototype = da(la, {next: ua(1, i)}), ha(e, n, !1), fa[n] = Aa, e
        }, pa = I, va = Te, wa = Object.setPrototypeOf || ("__proto__" in {} ? function () {
            var e, t = !1, i = {};
            try {
                (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(i, []), t = i instanceof Array
            } catch (e) {
            }
            return function (i, n) {
                return va(i), function (e) {
                    if (!pa(e) && null !== e) throw TypeError("Can't set " + String(e) + " as a prototype")
                }(n), t ? e.call(i, n) : i.__proto__ = n, i
            }
        }() : void 0), ya = Ei, ma = ga, Ca = Zo, Ia = wa, Ea = ca, Sa = Ue, ba = Ne.exports, xa = No,
        Ba = ra.IteratorPrototype, Pa = ra.BUGGY_SAFARI_ITERATORS, Qa = ue("iterator"), Ra = "keys", Da = "values",
        ka = "entries", Ma = function () {
            return this
        }, Ha = function (e, t, i, n, r, o, a) {
            ma(i, t, n);
            var s, c, l, d = function (e) {
                    if (e === r && g) return g;
                    if (!Pa && e in f) return f[e];
                    switch (e) {
                        case Ra:
                        case Da:
                        case ka:
                            return function () {
                                return new i(this, e)
                            }
                    }
                    return function () {
                        return new i(this)
                    }
                }, u = t + " Iterator", h = !1, f = e.prototype, A = f[Qa] || f["@@iterator"] || r && f[r],
                g = !Pa && A || d(r), p = "Array" == t && f.entries || A;
            if (p && (s = Ca(p.call(new e)), Ba !== Object.prototype && s.next && (Ca(s) !== Ba && (Ia ? Ia(s, Ba) : "function" != typeof s[Qa] && Sa(s, Qa, Ma)), Ea(s, u, !0))), r == Da && A && A.name !== Da && (h = !0, g = function () {
                return A.call(this)
            }), f[Qa] !== g && Sa(f, Qa, g), xa[t] = g, r) if (c = {
                values: d(Da),
                keys: o ? g : d(Ra),
                entries: d(ka)
            }, a) for (l in c) (Pa || h || !(l in f)) && ba(f, l, c[l]); else ya({
                target: t,
                proto: !0,
                forced: Pa || h
            }, c);
            return c
        }, Ta = C, La = Uo, Oa = No, Fa = yt, Xa = Ha, Ga = "Array Iterator", za = Fa.set, ja = Fa.getterFor(Ga),
        Ua = Xa(Array, "Array", (function (e, t) {
            za(this, {type: Ga, target: Ta(e), index: 0, kind: t})
        }), (function () {
            var e = ja(this), t = e.target, i = e.kind, n = e.index++;
            return !t || n >= t.length ? (e.target = void 0, {value: void 0, done: !0}) : "keys" == i ? {
                value: n,
                done: !1
            } : "values" == i ? {value: t[n], done: !1} : {value: [n, t[n]], done: !1}
        }), "values");
    Oa.Arguments = Oa.Array, La("keys"), La("values"), La("entries");
    var Na = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
    }, Ja = i, Ka = Na, Va = Ua, Ya = Ue, Wa = ue, qa = Wa("iterator"), Za = Wa("toStringTag"), _a = Va.values;
    for (var $a in Ka) {
        var es = Ja[$a], ts = es && es.prototype;
        if (ts) {
            if (ts[qa] !== _a) try {
                Ya(ts, qa, _a)
            } catch (e) {
                ts[qa] = _a
            }
            if (ts[Za] || Ya(ts, Za, $a), Ka[$a]) for (var is in Va) if (ts[is] !== Va[is]) try {
                Ya(ts, is, Va[is])
            } catch (e) {
                ts[is] = Va[is]
            }
        }
    }
    var ns = {}, rs = C, os = Pt.f, as = {}.toString,
        ss = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
    ns.f = function (e) {
        return ss && "[object Window]" == as.call(e) ? function (e) {
            try {
                return os(e)
            } catch (e) {
                return ss.slice()
            }
        }(e) : os(rs(e))
    };
    var cs = {}, ls = ue;
    cs.f = ls;
    var ds = i, us = _, hs = cs, fs = Me.f, As = function (e) {
            if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
            return e
        }, gs = As, ps = function (e, t, i) {
            if (gs(e), void 0 === t) return e;
            switch (i) {
                case 0:
                    return function () {
                        return e.call(t)
                    };
                case 1:
                    return function (i) {
                        return e.call(t, i)
                    };
                case 2:
                    return function (i, n) {
                        return e.call(t, i, n)
                    };
                case 3:
                    return function (i, n, r) {
                        return e.call(t, i, n, r)
                    }
            }
            return function () {
                return e.apply(t, arguments)
            }
        }, vs = ps, ws = v, ys = W, ms = Ht, Cs = Jn, Is = [].push, Es = function (e) {
            var t = 1 == e, i = 2 == e, n = 3 == e, r = 4 == e, o = 6 == e, a = 7 == e, s = 5 == e || o;
            return function (c, l, d, u) {
                for (var h, f, A = ys(c), g = ws(A), p = vs(l, d, 3), v = ms(g.length), w = 0, y = u || Cs, m = t ? y(c, v) : i || a ? y(c, 0) : void 0; v > w; w++) if ((s || w in g) && (f = p(h = g[w], w, A), e)) if (t) m[w] = f; else if (f) switch (e) {
                    case 3:
                        return !0;
                    case 5:
                        return h;
                    case 6:
                        return w;
                    case 2:
                        Is.call(m, h)
                } else switch (e) {
                    case 4:
                        return !1;
                    case 7:
                        Is.call(m, h)
                }
                return o ? -1 : n || r ? r : m
            }
        }, Ss = {
            forEach: Es(0),
            map: Es(1),
            filter: Es(2),
            some: Es(3),
            every: Es(4),
            find: Es(5),
            findIndex: Es(6),
            filterReject: Es(7)
        }, bs = Ei, xs = i, Bs = b, Ps = o, Qs = L, Rs = r, Ds = _, ks = zn, Ms = I, Hs = X, Ts = Te, Ls = W, Os = C,
        Fs = we, Xs = bi, Gs = h, zs = Zi, js = Hi, Us = Pt, Ns = ns, Js = _t, Ks = n, Vs = Me, Ys = a, Ws = Ue,
        qs = Ne.exports, Zs = z.exports, _s = rt, $s = te, ec = ue, tc = cs, ic = ca, nc = yt, rc = Ss.forEach,
        oc = nt("hidden"), ac = "Symbol", sc = ec("toPrimitive"), cc = nc.set, lc = nc.getterFor(ac),
        dc = Object.prototype, uc = xs.Symbol, hc = Bs("JSON", "stringify"), fc = Ks.f, Ac = Vs.f, gc = Ns.f, pc = Ys.f,
        vc = Zs("symbols"), wc = Zs("op-symbols"), yc = Zs("string-to-symbol-registry"),
        mc = Zs("symbol-to-string-registry"), Cc = Zs("wks"), Ic = xs.QObject,
        Ec = !Ic || !Ic.prototype || !Ic.prototype.findChild, Sc = Ps && Rs((function () {
            return 7 != zs(Ac({}, "a", {
                get: function () {
                    return Ac(this, "a", {value: 7}).a
                }
            })).a
        })) ? function (e, t, i) {
            var n = fc(dc, t);
            n && delete dc[t], Ac(e, t, i), n && e !== dc && Ac(dc, t, n)
        } : Ac, bc = function (e, t) {
            var i = vc[e] = zs(uc.prototype);
            return cc(i, {type: ac, tag: e, description: t}), Ps || (i.description = t), i
        }, xc = function (e, t, i) {
            e === dc && xc(wc, t, i), Ts(e);
            var n = Fs(t);
            return Ts(i), Ds(vc, n) ? (i.enumerable ? (Ds(e, oc) && e[oc][n] && (e[oc][n] = !1), i = zs(i, {enumerable: Gs(0, !1)})) : (Ds(e, oc) || Ac(e, oc, Gs(1, {})), e[oc][n] = !0), Sc(e, n, i)) : Ac(e, n, i)
        }, Bc = function (e, t) {
            Ts(e);
            var i = Os(t), n = js(i).concat(Dc(i));
            return rc(n, (function (t) {
                Ps && !Pc.call(i, t) || xc(e, t, i[t])
            })), e
        }, Pc = function (e) {
            var t = Fs(e), i = pc.call(this, t);
            return !(this === dc && Ds(vc, t) && !Ds(wc, t)) && (!(i || !Ds(this, t) || !Ds(vc, t) || Ds(this, oc) && this[oc][t]) || i)
        }, Qc = function (e, t) {
            var i = Os(e), n = Fs(t);
            if (i !== dc || !Ds(vc, n) || Ds(wc, n)) {
                var r = fc(i, n);
                return !r || !Ds(vc, n) || Ds(i, oc) && i[oc][n] || (r.enumerable = !0), r
            }
        }, Rc = function (e) {
            var t = gc(Os(e)), i = [];
            return rc(t, (function (e) {
                Ds(vc, e) || Ds(_s, e) || i.push(e)
            })), i
        }, Dc = function (e) {
            var t = e === dc, i = gc(t ? wc : Os(e)), n = [];
            return rc(i, (function (e) {
                !Ds(vc, e) || t && !Ds(dc, e) || n.push(vc[e])
            })), n
        };
    Qs || (qs((uc = function () {
        if (this instanceof uc) throw TypeError("Symbol is not a constructor");
        var e = arguments.length && void 0 !== arguments[0] ? Xs(arguments[0]) : void 0, t = $s(e), i = function (e) {
            this === dc && i.call(wc, e), Ds(this, oc) && Ds(this[oc], t) && (this[oc][t] = !1), Sc(this, t, Gs(1, e))
        };
        return Ps && Ec && Sc(dc, t, {configurable: !0, set: i}), bc(t, e)
    }).prototype, "toString", (function () {
        return lc(this).tag
    })), qs(uc, "withoutSetter", (function (e) {
        return bc($s(e), e)
    })), Ys.f = Pc, Vs.f = xc, Ks.f = Qc, Us.f = Ns.f = Rc, Js.f = Dc, tc.f = function (e) {
        return bc(ec(e), e)
    }, Ps && (Ac(uc.prototype, "description", {
        configurable: !0, get: function () {
            return lc(this).description
        }
    }), qs(dc, "propertyIsEnumerable", Pc, {unsafe: !0}))), bs({
        global: !0,
        wrap: !0,
        forced: !Qs,
        sham: !Qs
    }, {Symbol: uc}), rc(js(Cc), (function (e) {
        !function (e) {
            var t = ds.Symbol || (ds.Symbol = {});
            us(t, e) || fs(t, e, {value: hs.f(e)})
        }(e)
    })), bs({target: ac, stat: !0, forced: !Qs}, {
        for: function (e) {
            var t = Xs(e);
            if (Ds(yc, t)) return yc[t];
            var i = uc(t);
            return yc[t] = i, mc[i] = t, i
        }, keyFor: function (e) {
            if (!Hs(e)) throw TypeError(e + " is not a symbol");
            if (Ds(mc, e)) return mc[e]
        }, useSetter: function () {
            Ec = !0
        }, useSimple: function () {
            Ec = !1
        }
    }), bs({target: "Object", stat: !0, forced: !Qs, sham: !Ps}, {
        create: function (e, t) {
            return void 0 === t ? zs(e) : Bc(zs(e), t)
        }, defineProperty: xc, defineProperties: Bc, getOwnPropertyDescriptor: Qc
    }), bs({target: "Object", stat: !0, forced: !Qs}, {
        getOwnPropertyNames: Rc,
        getOwnPropertySymbols: Dc
    }), bs({
        target: "Object", stat: !0, forced: Rs((function () {
            Js.f(1)
        }))
    }, {
        getOwnPropertySymbols: function (e) {
            return Js.f(Ls(e))
        }
    }), hc && bs({
        target: "JSON", stat: !0, forced: !Qs || Rs((function () {
            var e = uc();
            return "[null]" != hc([e]) || "{}" != hc({a: e}) || "{}" != hc(Object(e))
        }))
    }, {
        stringify: function (e, t, i) {
            for (var n, r = [e], o = 1; arguments.length > o;) r.push(arguments[o++]);
            if (n = t, (Ms(t) || void 0 !== e) && !Hs(e)) return ks(t) || (t = function (e, t) {
                if ("function" == typeof n && (t = n.call(this, e, t)), !Hs(t)) return t
            }), r[1] = t, hc.apply(null, r)
        }
    }), uc.prototype[sc] || Ws(uc.prototype, sc, uc.prototype.valueOf), ic(uc, ac), _s[oc] = !0;
    var kc = Ei, Mc = o, Hc = i, Tc = _, Lc = I, Oc = Me.f, Fc = si, Xc = Hc.Symbol;
    if (Mc && "function" == typeof Xc && (!("description" in Xc.prototype) || void 0 !== Xc().description)) {
        var Gc = {}, zc = function () {
            var e = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]),
                t = this instanceof zc ? new Xc(e) : void 0 === e ? Xc() : Xc(e);
            return "" === e && (Gc[t] = !0), t
        };
        Fc(zc, Xc);
        var jc = zc.prototype = Xc.prototype;
        jc.constructor = zc;
        var Uc = jc.toString, Nc = "Symbol(test)" == String(Xc("test")), Jc = /^Symbol\((.*)\)[^)]+$/;
        Oc(jc, "description", {
            configurable: !0, get: function () {
                var e = Lc(this) ? this.valueOf() : this, t = Uc.call(e);
                if (Tc(Gc, e)) return "";
                var i = Nc ? t.slice(7, -1) : t.replace(Jc, "$1");
                return "" === i ? void 0 : i
            }
        }), kc({global: !0, forced: !0}, {Symbol: zc})
    }
    !function (e) {
        var t = function (e) {
            var t, i = Object.prototype, n = i.hasOwnProperty, r = "function" == typeof Symbol ? Symbol : {},
                o = r.iterator || "@@iterator", a = r.asyncIterator || "@@asyncIterator",
                s = r.toStringTag || "@@toStringTag";

            function c(e, t, i) {
                return Object.defineProperty(e, t, {value: i, enumerable: !0, configurable: !0, writable: !0}), e[t]
            }

            try {
                c({}, "")
            } catch (e) {
                c = function (e, t, i) {
                    return e[t] = i
                }
            }

            function l(e, t, i, n) {
                var r = t && t.prototype instanceof p ? t : p, o = Object.create(r.prototype), a = new P(n || []);
                return o._invoke = function (e, t, i) {
                    var n = u;
                    return function (r, o) {
                        if (n === f) throw new Error("Generator is already running");
                        if (n === A) {
                            if ("throw" === r) throw o;
                            return R()
                        }
                        for (i.method = r, i.arg = o; ;) {
                            var a = i.delegate;
                            if (a) {
                                var s = b(a, i);
                                if (s) {
                                    if (s === g) continue;
                                    return s
                                }
                            }
                            if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
                                if (n === u) throw n = A, i.arg;
                                i.dispatchException(i.arg)
                            } else "return" === i.method && i.abrupt("return", i.arg);
                            n = f;
                            var c = d(e, t, i);
                            if ("normal" === c.type) {
                                if (n = i.done ? A : h, c.arg === g) continue;
                                return {value: c.arg, done: i.done}
                            }
                            "throw" === c.type && (n = A, i.method = "throw", i.arg = c.arg)
                        }
                    }
                }(e, i, a), o
            }

            function d(e, t, i) {
                try {
                    return {type: "normal", arg: e.call(t, i)}
                } catch (e) {
                    return {type: "throw", arg: e}
                }
            }

            e.wrap = l;
            var u = "suspendedStart", h = "suspendedYield", f = "executing", A = "completed", g = {};

            function p() {
            }

            function v() {
            }

            function w() {
            }

            var y = {};
            c(y, o, (function () {
                return this
            }));
            var m = Object.getPrototypeOf, C = m && m(m(Q([])));
            C && C !== i && n.call(C, o) && (y = C);
            var I = w.prototype = p.prototype = Object.create(y);

            function E(e) {
                ["next", "throw", "return"].forEach((function (t) {
                    c(e, t, (function (e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function S(e, t) {
                function i(r, o, a, s) {
                    var c = d(e[r], e, o);
                    if ("throw" !== c.type) {
                        var l = c.arg, u = l.value;
                        return u && "object" == typeof u && n.call(u, "__await") ? t.resolve(u.__await).then((function (e) {
                            i("next", e, a, s)
                        }), (function (e) {
                            i("throw", e, a, s)
                        })) : t.resolve(u).then((function (e) {
                            l.value = e, a(l)
                        }), (function (e) {
                            return i("throw", e, a, s)
                        }))
                    }
                    s(c.arg)
                }

                var r;
                this._invoke = function (e, n) {
                    function o() {
                        return new t((function (t, r) {
                            i(e, n, t, r)
                        }))
                    }

                    return r = r ? r.then(o, o) : o()
                }
            }

            function b(e, i) {
                var n = e.iterator[i.method];
                if (n === t) {
                    if (i.delegate = null, "throw" === i.method) {
                        if (e.iterator.return && (i.method = "return", i.arg = t, b(e, i), "throw" === i.method)) return g;
                        i.method = "throw", i.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return g
                }
                var r = d(n, e.iterator, i.arg);
                if ("throw" === r.type) return i.method = "throw", i.arg = r.arg, i.delegate = null, g;
                var o = r.arg;
                return o ? o.done ? (i[e.resultName] = o.value, i.next = e.nextLoc, "return" !== i.method && (i.method = "next", i.arg = t), i.delegate = null, g) : o : (i.method = "throw", i.arg = new TypeError("iterator result is not an object"), i.delegate = null, g)
            }

            function x(e) {
                var t = {tryLoc: e[0]};
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function B(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function P(e) {
                this.tryEntries = [{tryLoc: "root"}], e.forEach(x, this), this.reset(!0)
            }

            function Q(e) {
                if (e) {
                    var i = e[o];
                    if (i) return i.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1, a = function i() {
                            for (; ++r < e.length;) if (n.call(e, r)) return i.value = e[r], i.done = !1, i;
                            return i.value = t, i.done = !0, i
                        };
                        return a.next = a
                    }
                }
                return {next: R}
            }

            function R() {
                return {value: t, done: !0}
            }

            return v.prototype = w, c(I, "constructor", w), c(w, "constructor", v), v.displayName = c(w, s, "GeneratorFunction"), e.isGeneratorFunction = function (e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function (e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, w) : (e.__proto__ = w, c(e, s, "GeneratorFunction")), e.prototype = Object.create(I), e
            }, e.awrap = function (e) {
                return {__await: e}
            }, E(S.prototype), c(S.prototype, a, (function () {
                return this
            })), e.AsyncIterator = S, e.async = function (t, i, n, r, o) {
                void 0 === o && (o = Promise);
                var a = new S(l(t, i, n, r), o);
                return e.isGeneratorFunction(i) ? a : a.next().then((function (e) {
                    return e.done ? e.value : a.next()
                }))
            }, E(I), c(I, s, "Generator"), c(I, o, (function () {
                return this
            })), c(I, "toString", (function () {
                return "[object Generator]"
            })), e.keys = function (e) {
                var t = [];
                for (var i in e) t.push(i);
                return t.reverse(), function i() {
                    for (; t.length;) {
                        var n = t.pop();
                        if (n in e) return i.value = n, i.done = !1, i
                    }
                    return i.done = !0, i
                }
            }, e.values = Q, P.prototype = {
                constructor: P, reset: function (e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(B), !e) for (var i in this) "t" === i.charAt(0) && n.call(this, i) && !isNaN(+i.slice(1)) && (this[i] = t)
                }, stop: function () {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                }, dispatchException: function (e) {
                    if (this.done) throw e;
                    var i = this;

                    function r(n, r) {
                        return s.type = "throw", s.arg = e, i.next = n, r && (i.method = "next", i.arg = t), !!r
                    }

                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var a = this.tryEntries[o], s = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var c = n.call(a, "catchLoc"), l = n.call(a, "finallyLoc");
                            if (c && l) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (c) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!l) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                }, abrupt: function (e, t) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var r = this.tryEntries[i];
                        if (r.tryLoc <= this.prev && n.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var o = r;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var a = o ? o.completion : {};
                    return a.type = e, a.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, g) : this.complete(a)
                }, complete: function (e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), g
                }, finish: function (e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var i = this.tryEntries[t];
                        if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), B(i), g
                    }
                }, catch: function (e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var i = this.tryEntries[t];
                        if (i.tryLoc === e) {
                            var n = i.completion;
                            if ("throw" === n.type) {
                                var r = n.arg;
                                B(i)
                            }
                            return r
                        }
                    }
                    throw new Error("illegal catch attempt")
                }, delegateYield: function (e, i, n) {
                    return this.delegate = {
                        iterator: Q(e),
                        resultName: i,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = t), g
                }
            }, e
        }({});
        try {
            regeneratorRuntime = t
        } catch (e) {
            "object" == typeof globalThis ? globalThis.regeneratorRuntime = t : Function("r", "regeneratorRuntime = r")(t)
        }
    }();
    var Kc = o, Vc = Me.f, Yc = Function.prototype, Wc = Yc.toString, qc = /^\s*function ([^ (]*)/, Zc = "name";
    Kc && !(Zc in Yc) && Vc(Yc, Zc, {
        configurable: !0, get: function () {
            try {
                return Wc.call(this).match(qc)[1]
            } catch (e) {
                return ""
            }
        }
    });
    var _c = Ei, $c = I, el = zn, tl = Ft, il = Ht, nl = C, rl = Wn, ol = ue, al = $n("slice"), sl = ol("species"),
        cl = [].slice, ll = Math.max;
    _c({target: "Array", proto: !0, forced: !al}, {
        slice: function (e, t) {
            var i, n, r, o = nl(this), a = il(o.length), s = tl(e, a), c = tl(void 0 === t ? a : t, a);
            if (el(o) && ("function" != typeof (i = o.constructor) || i !== Array && !el(i.prototype) ? $c(i) && null === (i = i[sl]) && (i = void 0) : i = void 0, i === Array || void 0 === i)) return cl.call(o, s, c);
            for (n = new (void 0 === i ? Array : i)(ll(c - s, 0)), r = 0; s < c; s++, r++) s in o && rl(n, r, o[s]);
            return n.length = r, n
        }
    });
    var dl = i.Promise, ul = Ne.exports, hl = function (e, t, i) {
        for (var n in t) ul(e, n, t[n], i);
        return e
    }, fl = b, Al = Me, gl = o, pl = ue("species"), vl = function (e) {
        var t = fl(e), i = Al.f;
        gl && t && !t[pl] && i(t, pl, {
            configurable: !0, get: function () {
                return this
            }
        })
    }, wl = function (e, t, i) {
        if (!(e instanceof t)) throw TypeError("Incorrect " + (i ? i + " " : "") + "invocation");
        return e
    }, yl = No, ml = ue("iterator"), Cl = Array.prototype, Il = function (e) {
        return void 0 !== e && (yl.Array === e || Cl[ml] === e)
    }, El = $r, Sl = No, bl = ue("iterator"), xl = function (e) {
        if (null != e) return e[bl] || e["@@iterator"] || Sl[El(e)]
    }, Bl = Te, Pl = function (e) {
        var t = e.return;
        if (void 0 !== t) return Bl(t.call(e)).value
    }, Ql = Te, Rl = Il, Dl = Ht, kl = ps, Ml = xl, Hl = Pl, Tl = function (e, t) {
        this.stopped = e, this.result = t
    }, Ll = ue("iterator"), Ol = !1;
    try {
        var Fl = 0, Xl = {
            next: function () {
                return {done: !!Fl++}
            }, return: function () {
                Ol = !0
            }
        };
        Xl[Ll] = function () {
            return this
        }, Array.from(Xl, (function () {
            throw 2
        }))
    } catch (e) {
    }
    var Gl, zl, jl, Ul, Nl = function (e, t) {
            if (!t && !Ol) return !1;
            var i = !1;
            try {
                var n = {};
                n[Ll] = function () {
                    return {
                        next: function () {
                            return {done: i = !0}
                        }
                    }
                }, e(n)
            } catch (e) {
            }
            return i
        }, Jl = Te, Kl = As, Vl = ue("species"), Yl = function (e, t) {
            var i, n = Jl(e).constructor;
            return void 0 === n || null == (i = Jl(n)[Vl]) ? t : Kl(i)
        }, Wl = /(?:iphone|ipod|ipad).*applewebkit/i.test(x), ql = "process" == A(i.process), Zl = i, _l = r, $l = ps,
        ed = Xi, td = Ie, id = Wl, nd = ql, rd = Zl.setImmediate, od = Zl.clearImmediate, ad = Zl.process,
        sd = Zl.MessageChannel, cd = Zl.Dispatch, ld = 0, dd = {};
    try {
        Gl = Zl.location
    } catch (e) {
    }
    var ud = function (e) {
        if (dd.hasOwnProperty(e)) {
            var t = dd[e];
            delete dd[e], t()
        }
    }, hd = function (e) {
        return function () {
            ud(e)
        }
    }, fd = function (e) {
        ud(e.data)
    }, Ad = function (e) {
        Zl.postMessage(String(e), Gl.protocol + "//" + Gl.host)
    };
    rd && od || (rd = function (e) {
        for (var t = [], i = arguments.length, n = 1; i > n;) t.push(arguments[n++]);
        return dd[++ld] = function () {
            ("function" == typeof e ? e : Function(e)).apply(void 0, t)
        }, zl(ld), ld
    }, od = function (e) {
        delete dd[e]
    }, nd ? zl = function (e) {
        ad.nextTick(hd(e))
    } : cd && cd.now ? zl = function (e) {
        cd.now(hd(e))
    } : sd && !id ? (Ul = (jl = new sd).port2, jl.port1.onmessage = fd, zl = $l(Ul.postMessage, Ul, 1)) : Zl.addEventListener && "function" == typeof postMessage && !Zl.importScripts && Gl && "file:" !== Gl.protocol && !_l(Ad) ? (zl = Ad, Zl.addEventListener("message", fd, !1)) : zl = "onreadystatechange" in td("script") ? function (e) {
        ed.appendChild(td("script")).onreadystatechange = function () {
            ed.removeChild(this), ud(e)
        }
    } : function (e) {
        setTimeout(hd(e), 0)
    });
    var gd, pd, vd, wd, yd, md, Cd, Id, Ed = {set: rd, clear: od}, Sd = i,
        bd = /iphone|ipod|ipad/i.test(x) && void 0 !== Sd.Pebble, xd = /web0s(?!.*chrome)/i.test(x), Bd = i, Pd = n.f,
        Qd = Ed.set, Rd = Wl, Dd = bd, kd = xd, Md = ql, Hd = Bd.MutationObserver || Bd.WebKitMutationObserver,
        Td = Bd.document, Ld = Bd.process, Od = Bd.Promise, Fd = Pd(Bd, "queueMicrotask"), Xd = Fd && Fd.value;
    Xd || (gd = function () {
        var e, t;
        for (Md && (e = Ld.domain) && e.exit(); pd;) {
            t = pd.fn, pd = pd.next;
            try {
                t()
            } catch (e) {
                throw pd ? wd() : vd = void 0, e
            }
        }
        vd = void 0, e && e.enter()
    }, Rd || Md || kd || !Hd || !Td ? !Dd && Od && Od.resolve ? ((Cd = Od.resolve(void 0)).constructor = Od, Id = Cd.then, wd = function () {
        Id.call(Cd, gd)
    }) : wd = Md ? function () {
        Ld.nextTick(gd)
    } : function () {
        Qd.call(Bd, gd)
    } : (yd = !0, md = Td.createTextNode(""), new Hd(gd).observe(md, {characterData: !0}), wd = function () {
        md.data = yd = !yd
    }));
    var Gd = Xd || function (e) {
        var t = {fn: e, next: void 0};
        vd && (vd.next = t), pd || (pd = t, wd()), vd = t
    }, zd = {}, jd = As, Ud = function (e) {
        var t, i;
        this.promise = new e((function (e, n) {
            if (void 0 !== t || void 0 !== i) throw TypeError("Bad Promise constructor");
            t = e, i = n
        })), this.resolve = jd(t), this.reject = jd(i)
    };
    zd.f = function (e) {
        return new Ud(e)
    };
    var Nd, Jd, Kd, Vd, Yd = Te, Wd = I, qd = zd, Zd = i, _d = "object" == typeof window, $d = Ei, eu = i, tu = b,
        iu = dl, nu = Ne.exports, ru = hl, ou = wa, au = ca, su = vl, cu = I, lu = As, du = wl, uu = qe,
        hu = function (e, t, i) {
            var n, r, o, a, s, c, l, d = i && i.that, u = !(!i || !i.AS_ENTRIES), h = !(!i || !i.IS_ITERATOR),
                f = !(!i || !i.INTERRUPTED), A = kl(t, d, 1 + u + f), g = function (e) {
                    return n && Hl(n), new Tl(!0, e)
                }, p = function (e) {
                    return u ? (Ql(e), f ? A(e[0], e[1], g) : A(e[0], e[1])) : f ? A(e, g) : A(e)
                };
            if (h) n = e; else {
                if ("function" != typeof (r = Ml(e))) throw TypeError("Target is not iterable");
                if (Rl(r)) {
                    for (o = 0, a = Dl(e.length); a > o; o++) if ((s = p(e[o])) && s instanceof Tl) return s;
                    return new Tl(!1)
                }
                n = r.call(e)
            }
            for (c = n.next; !(l = c.call(n)).done;) {
                try {
                    s = p(l.value)
                } catch (e) {
                    throw Hl(n), e
                }
                if ("object" == typeof s && s && s instanceof Tl) return s
            }
            return new Tl(!1)
        }, fu = Nl, Au = Yl, gu = Ed.set, pu = Gd, vu = zd, wu = function (e) {
            try {
                return {error: !1, value: e()}
            } catch (e) {
                return {error: !0, value: e}
            }
        }, yu = yt, mu = gi, Cu = _d, Iu = ql, Eu = M, Su = ue("species"), bu = "Promise", xu = yu.get, Bu = yu.set,
        Pu = yu.getterFor(bu), Qu = iu && iu.prototype, Ru = iu, Du = Qu, ku = eu.TypeError, Mu = eu.document,
        Hu = eu.process, Tu = vu.f, Lu = Tu, Ou = !!(Mu && Mu.createEvent && eu.dispatchEvent),
        Fu = "function" == typeof PromiseRejectionEvent, Xu = "unhandledrejection", Gu = !1, zu = mu(bu, (function () {
            var e = uu(Ru), t = e !== String(Ru);
            if (!t && 66 === Eu) return !0;
            if (Eu >= 51 && /native code/.test(e)) return !1;
            var i = new Ru((function (e) {
                e(1)
            })), n = function (e) {
                e((function () {
                }), (function () {
                }))
            };
            return (i.constructor = {})[Su] = n, !(Gu = i.then((function () {
            })) instanceof n) || !t && Cu && !Fu
        })), ju = zu || !fu((function (e) {
            Ru.all(e).catch((function () {
            }))
        })), Uu = function (e) {
            var t;
            return !(!cu(e) || "function" != typeof (t = e.then)) && t
        }, Nu = function (e, t) {
            if (!e.notified) {
                e.notified = !0;
                var i = e.reactions;
                pu((function () {
                    for (var n = e.value, r = 1 == e.state, o = 0; i.length > o;) {
                        var a, s, c, l = i[o++], d = r ? l.ok : l.fail, u = l.resolve, h = l.reject, f = l.domain;
                        try {
                            d ? (r || (2 === e.rejection && Yu(e), e.rejection = 1), !0 === d ? a = n : (f && f.enter(), a = d(n), f && (f.exit(), c = !0)), a === l.promise ? h(ku("Promise-chain cycle")) : (s = Uu(a)) ? s.call(a, u, h) : u(a)) : h(n)
                        } catch (e) {
                            f && !c && f.exit(), h(e)
                        }
                    }
                    e.reactions = [], e.notified = !1, t && !e.rejection && Ku(e)
                }))
            }
        }, Ju = function (e, t, i) {
            var n, r;
            Ou ? ((n = Mu.createEvent("Event")).promise = t, n.reason = i, n.initEvent(e, !1, !0), eu.dispatchEvent(n)) : n = {
                promise: t,
                reason: i
            }, !Fu && (r = eu["on" + e]) ? r(n) : e === Xu && function (e, t) {
                var i = Zd.console;
                i && i.error && (1 === arguments.length ? i.error(e) : i.error(e, t))
            }("Unhandled promise rejection", i)
        }, Ku = function (e) {
            gu.call(eu, (function () {
                var t, i = e.facade, n = e.value;
                if (Vu(e) && (t = wu((function () {
                    Iu ? Hu.emit("unhandledRejection", n, i) : Ju(Xu, i, n)
                })), e.rejection = Iu || Vu(e) ? 2 : 1, t.error)) throw t.value
            }))
        }, Vu = function (e) {
            return 1 !== e.rejection && !e.parent
        }, Yu = function (e) {
            gu.call(eu, (function () {
                var t = e.facade;
                Iu ? Hu.emit("rejectionHandled", t) : Ju("rejectionhandled", t, e.value)
            }))
        }, Wu = function (e, t, i) {
            return function (n) {
                e(t, n, i)
            }
        }, qu = function (e, t, i) {
            e.done || (e.done = !0, i && (e = i), e.value = t, e.state = 2, Nu(e, !0))
        }, Zu = function (e, t, i) {
            if (!e.done) {
                e.done = !0, i && (e = i);
                try {
                    if (e.facade === t) throw ku("Promise can't be resolved itself");
                    var n = Uu(t);
                    n ? pu((function () {
                        var i = {done: !1};
                        try {
                            n.call(t, Wu(Zu, i, e), Wu(qu, i, e))
                        } catch (t) {
                            qu(i, t, e)
                        }
                    })) : (e.value = t, e.state = 1, Nu(e, !1))
                } catch (t) {
                    qu({done: !1}, t, e)
                }
            }
        };
    if (zu && (Du = (Ru = function (e) {
        du(this, Ru, bu), lu(e), Nd.call(this);
        var t = xu(this);
        try {
            e(Wu(Zu, t), Wu(qu, t))
        } catch (e) {
            qu(t, e)
        }
    }).prototype, (Nd = function (e) {
        Bu(this, {type: bu, done: !1, notified: !1, parent: !1, reactions: [], rejection: !1, state: 0, value: void 0})
    }).prototype = ru(Du, {
        then: function (e, t) {
            var i = Pu(this), n = Tu(Au(this, Ru));
            return n.ok = "function" != typeof e || e, n.fail = "function" == typeof t && t, n.domain = Iu ? Hu.domain : void 0, i.parent = !0, i.reactions.push(n), 0 != i.state && Nu(i, !1), n.promise
        }, catch: function (e) {
            return this.then(void 0, e)
        }
    }), Jd = function () {
        var e = new Nd, t = xu(e);
        this.promise = e, this.resolve = Wu(Zu, t), this.reject = Wu(qu, t)
    }, vu.f = Tu = function (e) {
        return e === Ru || e === Kd ? new Jd(e) : Lu(e)
    }, "function" == typeof iu && Qu !== Object.prototype)) {
        Vd = Qu.then, Gu || (nu(Qu, "then", (function (e, t) {
            var i = this;
            return new Ru((function (e, t) {
                Vd.call(i, e, t)
            })).then(e, t)
        }), {unsafe: !0}), nu(Qu, "catch", Du.catch, {unsafe: !0}));
        try {
            delete Qu.constructor
        } catch (e) {
        }
        ou && ou(Qu, Du)
    }
    $d({global: !0, wrap: !0, forced: zu}, {Promise: Ru}), au(Ru, bu, !1), su(bu), Kd = tu(bu), $d({
        target: bu,
        stat: !0,
        forced: zu
    }, {
        reject: function (e) {
            var t = Tu(this);
            return t.reject.call(void 0, e), t.promise
        }
    }), $d({target: bu, stat: !0, forced: zu}, {
        resolve: function (e) {
            return function (e, t) {
                if (Yd(e), Wd(t) && t.constructor === e) return t;
                var i = qd.f(e);
                return (0, i.resolve)(t), i.promise
            }(this, e)
        }
    }), $d({target: bu, stat: !0, forced: ju}, {
        all: function (e) {
            var t = this, i = Tu(t), n = i.resolve, r = i.reject, o = wu((function () {
                var i = lu(t.resolve), o = [], a = 0, s = 1;
                hu(e, (function (e) {
                    var c = a++, l = !1;
                    o.push(void 0), s++, i.call(t, e).then((function (e) {
                        l || (l = !0, o[c] = e, --s || n(o))
                    }), r)
                })), --s || n(o)
            }));
            return o.error && r(o.value), i.promise
        }, race: function (e) {
            var t = this, i = Tu(t), n = i.reject, r = wu((function () {
                var r = lu(t.resolve);
                hu(e, (function (e) {
                    r.call(t, e).then(i.resolve, n)
                }))
            }));
            return r.error && n(r.value), i.promise
        }
    });
    var _u = Te, $u = Ht, eh = bi, th = w, ih = xr, nh = Bn;
    En("match", (function (e, t, i) {
        return [function (t) {
            var i = th(this), n = null == t ? void 0 : t[e];
            return void 0 !== n ? n.call(t, i) : new RegExp(t)[e](eh(i))
        }, function (e) {
            var n = _u(this), r = eh(e), o = i(t, n, r);
            if (o.done) return o.value;
            if (!n.global) return nh(n, r);
            var a = n.unicode;
            n.lastIndex = 0;
            for (var s, c = [], l = 0; null !== (s = nh(n, r));) {
                var d = eh(s[0]);
                c[l] = d, "" === d && (n.lastIndex = ih(r, $u(n.lastIndex), a)), l++
            }
            return 0 === l ? null : c
        }]
    }));
    var rh = bi, oh = Po.trim, ah = i.parseFloat,
        sh = 1 / ah("\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff-0") != -1 / 0 ? function (e) {
            var t = oh(rh(e)), i = ah(t);
            return 0 === i && "-" == t.charAt(0) ? -0 : i
        } : ah;
    Ei({global: !0, forced: parseFloat != sh}, {parseFloat: sh});
    var ch = W, lh = Ft, dh = Ht, uh = function (e) {
        for (var t = ch(this), i = dh(t.length), n = arguments.length, r = lh(n > 1 ? arguments[1] : void 0, i), o = n > 2 ? arguments[2] : void 0, a = void 0 === o ? i : lh(o, i); a > r;) t[r++] = e;
        return t
    }, hh = Uo;
    Ei({target: "Array", proto: !0}, {fill: uh}), hh("fill");
    var fh = C, Ah = Dt, gh = Ht, ph = fr, vh = Math.min, wh = [].lastIndexOf,
        yh = !!wh && 1 / [1].lastIndexOf(1, -0) < 0, mh = ph("lastIndexOf"), Ch = yh || !mh ? function (e) {
            if (yh) return wh.apply(this, arguments) || 0;
            var t = fh(this), i = gh(t.length), n = i - 1;
            for (arguments.length > 1 && (n = vh(n, Ah(arguments[1]))), n < 0 && (n = i + n); n >= 0; n--) if (n in t && t[n] === e) return n || 0;
            return -1
        } : wh;
    Ei({target: "Array", proto: !0, forced: Ch !== [].lastIndexOf}, {lastIndexOf: Ch});
    var Ih = I, Eh = A, Sh = ue("match"), bh = function (e) {
            var t;
            return Ih(e) && (void 0 !== (t = e[Sh]) ? !!t : "RegExp" == Eh(e))
        }, xh = En, Bh = bh, Ph = Te, Qh = w, Rh = Yl, Dh = xr, kh = Ht, Mh = bi, Hh = Bn, Th = gn, Lh = r,
        Oh = Pi.UNSUPPORTED_Y, Fh = [].push, Xh = Math.min, Gh = 4294967295;
    xh("split", (function (e, t, i) {
        var n;
        return n = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function (e, i) {
            var n = Mh(Qh(this)), r = void 0 === i ? Gh : i >>> 0;
            if (0 === r) return [];
            if (void 0 === e) return [n];
            if (!Bh(e)) return t.call(n, e, r);
            for (var o, a, s, c = [], l = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), d = 0, u = new RegExp(e.source, l + "g"); (o = Th.call(u, n)) && !((a = u.lastIndex) > d && (c.push(n.slice(d, o.index)), o.length > 1 && o.index < n.length && Fh.apply(c, o.slice(1)), s = o[0].length, d = a, c.length >= r));) u.lastIndex === o.index && u.lastIndex++;
            return d === n.length ? !s && u.test("") || c.push("") : c.push(n.slice(d)), c.length > r ? c.slice(0, r) : c
        } : "0".split(void 0, 0).length ? function (e, i) {
            return void 0 === e && 0 === i ? [] : t.call(this, e, i)
        } : t, [function (t, i) {
            var r = Qh(this), o = null == t ? void 0 : t[e];
            return void 0 !== o ? o.call(t, r, i) : n.call(Mh(r), t, i)
        }, function (e, r) {
            var o = Ph(this), a = Mh(e), s = i(n, o, a, r, n !== t);
            if (s.done) return s.value;
            var c = Rh(o, RegExp), l = o.unicode,
                d = (o.ignoreCase ? "i" : "") + (o.multiline ? "m" : "") + (o.unicode ? "u" : "") + (Oh ? "g" : "y"),
                u = new c(Oh ? "^(?:" + o.source + ")" : o, d), h = void 0 === r ? Gh : r >>> 0;
            if (0 === h) return [];
            if (0 === a.length) return null === Hh(u, a) ? [a] : [];
            for (var f = 0, A = 0, g = []; A < a.length;) {
                u.lastIndex = Oh ? 0 : A;
                var p, v = Hh(u, Oh ? a.slice(A) : a);
                if (null === v || (p = Xh(kh(u.lastIndex + (Oh ? A : 0)), a.length)) === f) A = Dh(a, A, l); else {
                    if (g.push(a.slice(f, A)), g.length === h) return g;
                    for (var w = 1; w <= v.length - 1; w++) if (g.push(v[w]), g.length === h) return g;
                    A = f = p
                }
            }
            return g.push(a.slice(f)), g
        }]
    }), !!Lh((function () {
        var e = /(?:)/, t = e.exec;
        e.exec = function () {
            return t.apply(this, arguments)
        };
        var i = "ab".split(e);
        return 2 !== i.length || "a" !== i[0] || "b" !== i[1]
    })), Oh);
    var zh = W, jh = Hi;
    Ei({
        target: "Object", stat: !0, forced: r((function () {
            jh(1)
        }))
    }, {
        keys: function (e) {
            return jh(zh(e))
        }
    });
    var Uh = Ss.forEach, Nh = i, Jh = Na, Kh = fr("forEach") ? [].forEach : function (e) {
        return Uh(this, e, arguments.length > 1 ? arguments[1] : void 0)
    }, Vh = Ue;
    for (var Yh in Jh) {
        var Wh = Nh[Yh], qh = Wh && Wh.prototype;
        if (qh && qh.forEach !== Kh) try {
            Vh(qh, "forEach", Kh)
        } catch (e) {
            qh.forEach = Kh
        }
    }
    var Zh = Te, _h = Pl, $h = ps, ef = W, tf = function (e, t, i, n) {
        try {
            return n ? t(Zh(i)[0], i[1]) : t(i)
        } catch (t) {
            throw _h(e), t
        }
    }, nf = Il, rf = Ht, of = Wn, af = xl, sf = function (e) {
        var t, i, n, r, o, a, s = ef(e), c = "function" == typeof this ? this : Array, l = arguments.length,
            d = l > 1 ? arguments[1] : void 0, u = void 0 !== d, h = af(s), f = 0;
        if (u && (d = $h(d, l > 2 ? arguments[2] : void 0, 2)), null == h || c == Array && nf(h)) for (i = new c(t = rf(s.length)); t > f; f++) a = u ? d(s[f], f) : s[f], of(i, f, a); else for (o = (r = h.call(s)).next, i = new c; !(n = o.call(r)).done; f++) a = u ? tf(r, d, [n.value, f], !0) : n.value, of(i, f, a);
        return i.length = f, i
    }, cf = sf;
    Ei({
        target: "Array", stat: !0, forced: !Nl((function (e) {
            Array.from(e)
        }))
    }, {from: cf});
    var lf = Sr.charAt, df = bi, uf = yt, hf = Ha, ff = "String Iterator", Af = uf.set, gf = uf.getterFor(ff);
    hf(String, "String", (function (e) {
        Af(this, {type: ff, string: df(e), index: 0})
    }), (function () {
        var e, t = gf(this), i = t.string, n = t.index;
        return n >= i.length ? {value: void 0, done: !0} : (e = lf(i, n), t.index += e.length, {value: e, done: !1})
    }));
    var pf = Ei, vf = Math.hypot, wf = Math.abs, yf = Math.sqrt;
    pf({target: "Math", stat: !0, forced: !!vf && vf(1 / 0, NaN) !== 1 / 0}, {
        hypot: function (e, t) {
            for (var i, n, r = 0, o = 0, a = arguments.length, s = 0; o < a;) s < (i = wf(arguments[o++])) ? (r = r * (n = s / i) * n + 1, s = i) : r += i > 0 ? (n = i / s) * n : i;
            return s === 1 / 0 ? 1 / 0 : s * yf(r)
        }
    });
    var mf = Ss.map;
    Ei({target: "Array", proto: !0, forced: !$n("map")}, {
        map: function (e) {
            return mf(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Cf = Ei, If = r, Ef = zn, Sf = I, bf = W, xf = Ht, Bf = Wn, Pf = Jn, Qf = $n, Rf = M,
        Df = ue("isConcatSpreadable"), kf = 9007199254740991, Mf = "Maximum allowed index exceeded",
        Hf = Rf >= 51 || !If((function () {
            var e = [];
            return e[Df] = !1, e.concat()[0] !== e
        })), Tf = Qf("concat"), Lf = function (e) {
            if (!Sf(e)) return !1;
            var t = e[Df];
            return void 0 !== t ? !!t : Ef(e)
        };
    Cf({target: "Array", proto: !0, forced: !Hf || !Tf}, {
        concat: function (e) {
            var t, i, n, r, o, a = bf(this), s = Pf(a, 0), c = 0;
            for (t = -1, n = arguments.length; t < n; t++) if (Lf(o = -1 === t ? a : arguments[t])) {
                if (c + (r = xf(o.length)) > kf) throw TypeError(Mf);
                for (i = 0; i < r; i++, c++) i in o && Bf(s, c, o[i])
            } else {
                if (c >= kf) throw TypeError(Mf);
                Bf(s, c++, o)
            }
            return s.length = c, s
        }
    });
    var Of = Ln;
    Ei({target: "String", proto: !0, forced: Fn("italics")}, {
        italics: function () {
            return Of(this, "i", "", "")
        }
    });
    var Ff = Math.floor, Xf = function (e, t) {
            var i = e.length, n = Ff(i / 2);
            return i < 8 ? Gf(e, t) : zf(Xf(e.slice(0, n), t), Xf(e.slice(n), t), t)
        }, Gf = function (e, t) {
            for (var i, n, r = e.length, o = 1; o < r;) {
                for (n = o, i = e[o]; n && t(e[n - 1], i) > 0;) e[n] = e[--n];
                n !== o++ && (e[n] = i)
            }
            return e
        }, zf = function (e, t, i) {
            for (var n = e.length, r = t.length, o = 0, a = 0, s = []; o < n || a < r;) o < n && a < r ? s.push(i(e[o], t[a]) <= 0 ? e[o++] : t[a++]) : s.push(o < n ? e[o++] : t[a++]);
            return s
        }, jf = Xf, Uf = x.match(/firefox\/(\d+)/i), Nf = !!Uf && +Uf[1], Jf = /MSIE|Trident/.test(x),
        Kf = x.match(/AppleWebKit\/(\d+)\./), Vf = !!Kf && +Kf[1], Yf = Ei, Wf = As, qf = W, Zf = Ht, _f = bi, $f = r,
        eA = jf, tA = fr, iA = Nf, nA = Jf, rA = M, oA = Vf, aA = [], sA = aA.sort, cA = $f((function () {
            aA.sort(void 0)
        })), lA = $f((function () {
            aA.sort(null)
        })), dA = tA("sort"), uA = !$f((function () {
            if (rA) return rA < 70;
            if (!(iA && iA > 3)) {
                if (nA) return !0;
                if (oA) return oA < 603;
                var e, t, i, n, r = "";
                for (e = 65; e < 76; e++) {
                    switch (t = String.fromCharCode(e), e) {
                        case 66:
                        case 69:
                        case 70:
                        case 72:
                            i = 3;
                            break;
                        case 68:
                        case 71:
                            i = 4;
                            break;
                        default:
                            i = 2
                    }
                    for (n = 0; n < 47; n++) aA.push({k: t + n, v: i})
                }
                for (aA.sort((function (e, t) {
                    return t.v - e.v
                })), n = 0; n < aA.length; n++) t = aA[n].k.charAt(0), r.charAt(r.length - 1) !== t && (r += t);
                return "DGBEFHACIJK" !== r
            }
        }));
    Yf({target: "Array", proto: !0, forced: cA || !lA || !dA || !uA}, {
        sort: function (e) {
            void 0 !== e && Wf(e);
            var t = qf(this);
            if (uA) return void 0 === e ? sA.call(t) : sA.call(t, e);
            var i, n, r = [], o = Zf(t.length);
            for (n = 0; n < o; n++) n in t && r.push(t[n]);
            for (i = (r = eA(r, function (e) {
                return function (t, i) {
                    return void 0 === i ? -1 : void 0 === t ? 1 : void 0 !== e ? +e(t, i) || 0 : _f(t) > _f(i) ? 1 : -1
                }
            }(e))).length, n = 0; n < i;) t[n] = r[n++];
            for (; n < o;) delete t[n++];
            return t
        }
    });
    var hA = As, fA = W, AA = v, gA = Ht, pA = function (e) {
        return function (t, i, n, r) {
            hA(i);
            var o = fA(t), a = AA(o), s = gA(o.length), c = e ? s - 1 : 0, l = e ? -1 : 1;
            if (n < 2) for (; ;) {
                if (c in a) {
                    r = a[c], c += l;
                    break
                }
                if (c += l, e ? c < 0 : s <= c) throw TypeError("Reduce of empty array with no initial value")
            }
            for (; e ? c >= 0 : s > c; c += l) c in a && (r = i(r, a[c], c, o));
            return r
        }
    }, vA = {left: pA(!1), right: pA(!0)}, wA = vA.left, yA = M, mA = ql;
    Ei({target: "Array", proto: !0, forced: !fr("reduce") || !mA && yA > 79 && yA < 83}, {
        reduce: function (e) {
            return wA(this, e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var CA = I, IA = wa, EA = function (e, t, i) {
            var n, r;
            return IA && "function" == typeof (n = t.constructor) && n !== i && CA(r = n.prototype) && r !== i.prototype && IA(e, r), e
        }, SA = o, bA = i, xA = gi, BA = EA, PA = Ue, QA = Me.f, RA = Pt.f, DA = bh, kA = bi, MA = Bi, HA = Pi,
        TA = Ne.exports, LA = r, OA = _, FA = yt.enforce, XA = vl, GA = _i, zA = $i, jA = ue("match"), UA = bA.RegExp,
        NA = UA.prototype, JA = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/, KA = /a/g, VA = /a/g,
        YA = new UA(KA) !== KA, WA = HA.UNSUPPORTED_Y;
    if (xA("RegExp", SA && (!YA || WA || GA || zA || LA((function () {
        return VA[jA] = !1, UA(KA) != KA || UA(VA) == VA || "/a/i" != UA(KA, "i")
    }))))) {
        for (var qA = function (e, t) {
            var i, n, r, o, a, s, c = this instanceof qA, l = DA(e), d = void 0 === t, u = [], h = e;
            if (!c && l && d && e.constructor === qA) return e;
            if ((l || e instanceof qA) && (e = e.source, d && (t = "flags" in h ? h.flags : MA.call(h))), e = void 0 === e ? "" : kA(e), t = void 0 === t ? "" : kA(t), h = e, GA && "dotAll" in KA && (n = !!t && t.indexOf("s") > -1) && (t = t.replace(/s/g, "")), i = t, WA && "sticky" in KA && (r = !!t && t.indexOf("y") > -1) && (t = t.replace(/y/g, "")), zA && (e = (o = function (e) {
                for (var t, i = e.length, n = 0, r = "", o = [], a = {}, s = !1, c = !1, l = 0, d = ""; n <= i; n++) {
                    if ("\\" === (t = e.charAt(n))) t += e.charAt(++n); else if ("]" === t) s = !1; else if (!s) switch (!0) {
                        case"[" === t:
                            s = !0;
                            break;
                        case"(" === t:
                            JA.test(e.slice(n + 1)) && (n += 2, c = !0), r += t, l++;
                            continue;
                        case">" === t && c:
                            if ("" === d || OA(a, d)) throw new SyntaxError("Invalid capture group name");
                            a[d] = !0, o.push([d, l]), c = !1, d = "";
                            continue
                    }
                    c ? d += t : r += t
                }
                return [r, o]
            }(e))[0], u = o[1]), a = BA(UA(e, t), c ? this : NA, qA), (n || r || u.length) && (s = FA(a), n && (s.dotAll = !0, s.raw = qA(function (e) {
                for (var t, i = e.length, n = 0, r = "", o = !1; n <= i; n++) "\\" !== (t = e.charAt(n)) ? o || "." !== t ? ("[" === t ? o = !0 : "]" === t && (o = !1), r += t) : r += "[\\s\\S]" : r += t + e.charAt(++n);
                return r
            }(e), i)), r && (s.sticky = !0), u.length && (s.groups = u)), e !== h) try {
                PA(a, "source", "" === h ? "(?:)" : h)
            } catch (e) {
            }
            return a
        }, ZA = function (e) {
            e in qA || QA(qA, e, {
                configurable: !0, get: function () {
                    return UA[e]
                }, set: function (t) {
                    UA[e] = t
                }
            })
        }, _A = RA(UA), $A = 0; _A.length > $A;) ZA(_A[$A++]);
        NA.constructor = qA, qA.prototype = NA, TA(bA, "RegExp", qA)
    }
    XA("RegExp");
    var eg, tg = bh, ig = function (e) {
            if (tg(e)) throw TypeError("The method doesn't accept regular expressions");
            return e
        }, ng = ue("match"), rg = function (e) {
            var t = /./;
            try {
                "/./"[e](t)
            } catch (i) {
                try {
                    return t[ng] = !1, "/./"[e](t)
                } catch (e) {
                }
            }
            return !1
        }, og = Ei, ag = n.f, sg = Ht, cg = bi, lg = ig, dg = w, ug = rg, hg = "".startsWith, fg = Math.min,
        Ag = ug("startsWith");
    og({
        target: "String",
        proto: !0,
        forced: !(!Ag && (eg = ag(String.prototype, "startsWith"), eg && !eg.writable) || Ag)
    }, {
        startsWith: function (e) {
            var t = cg(dg(this));
            lg(e);
            var i = sg(fg(arguments.length > 1 ? arguments[1] : void 0, t.length)), n = cg(e);
            return hg ? hg.call(t, n, i) : t.slice(i, i + n.length) === n
        }
    });
    var gg = r, pg = Co, vg = Po.trim;
    Ei({
        target: "String", proto: !0, forced: function (e) {
            return gg((function () {
                return !!pg[e]() || "âÂá " != "âÂá "[e]() || pg[e].name !== e
            }))
        }("trim")
    }, {
        trim: function () {
            return vg(this)
        }
    });
    var wg = o, yg = r, mg = Hi, Cg = _t, Ig = a, Eg = W, Sg = v, bg = Object.assign, xg = Object.defineProperty,
        Bg = !bg || yg((function () {
            if (wg && 1 !== bg({b: 1}, bg(xg({}, "a", {
                enumerable: !0, get: function () {
                    xg(this, "b", {value: 3, enumerable: !1})
                }
            }), {b: 2})).b) return !0;
            var e = {}, t = {}, i = Symbol(), n = "abcdefghijklmnopqrst";
            return e[i] = 7, n.split("").forEach((function (e) {
                t[e] = e
            })), 7 != bg({}, e)[i] || mg(bg({}, t)).join("") != n
        })) ? function (e, t) {
            for (var i = Eg(e), n = arguments.length, r = 1, o = Cg.f, a = Ig.f; n > r;) for (var s, c = Sg(arguments[r++]), l = o ? mg(c).concat(o(c)) : mg(c), d = l.length, u = 0; d > u;) s = l[u++], wg && !a.call(c, s) || (i[s] = c[s]);
            return i
        } : bg, Pg = Bg;
    Ei({target: "Object", stat: !0, forced: Object.assign !== Pg}, {assign: Pg});
    var Qg = o, Rg = Hi, Dg = C, kg = a.f, Mg = function (e) {
        return function (t) {
            for (var i, n = Dg(t), r = Rg(n), o = r.length, a = 0, s = []; o > a;) i = r[a++], Qg && !kg.call(n, i) || s.push(e ? [i, n[i]] : n[i]);
            return s
        }
    }, Hg = [Mg(!0), Mg(!1)][0];
    Ei({target: "Object", stat: !0}, {
        entries: function (e) {
            return Hg(e)
        }
    });
    var Tg, Lg, Og, Fg = {exports: {}}, Xg = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView,
        Gg = Xg, zg = o, jg = i, Ug = I, Ng = _, Jg = $r, Kg = Ue, Vg = Ne.exports, Yg = Me.f, Wg = Zo, qg = wa,
        Zg = ue, _g = te, $g = jg.Int8Array, ep = $g && $g.prototype, tp = jg.Uint8ClampedArray,
        ip = tp && tp.prototype, np = $g && Wg($g), rp = ep && Wg(ep), op = Object.prototype, ap = op.isPrototypeOf,
        sp = Zg("toStringTag"), cp = _g("TYPED_ARRAY_TAG"), lp = _g("TYPED_ARRAY_CONSTRUCTOR"),
        dp = Gg && !!qg && "Opera" !== Jg(jg.opera), up = !1, hp = {
            Int8Array: 1,
            Uint8Array: 1,
            Uint8ClampedArray: 1,
            Int16Array: 2,
            Uint16Array: 2,
            Int32Array: 4,
            Uint32Array: 4,
            Float32Array: 4,
            Float64Array: 8
        }, fp = {BigInt64Array: 8, BigUint64Array: 8}, Ap = function (e) {
            if (!Ug(e)) return !1;
            var t = Jg(e);
            return Ng(hp, t) || Ng(fp, t)
        };
    for (Tg in hp) (Og = (Lg = jg[Tg]) && Lg.prototype) ? Kg(Og, lp, Lg) : dp = !1;
    for (Tg in fp) (Og = (Lg = jg[Tg]) && Lg.prototype) && Kg(Og, lp, Lg);
    if ((!dp || "function" != typeof np || np === Function.prototype) && (np = function () {
        throw TypeError("Incorrect invocation")
    }, dp)) for (Tg in hp) jg[Tg] && qg(jg[Tg], np);
    if ((!dp || !rp || rp === op) && (rp = np.prototype, dp)) for (Tg in hp) jg[Tg] && qg(jg[Tg].prototype, rp);
    if (dp && Wg(ip) !== rp && qg(ip, rp), zg && !Ng(rp, sp)) for (Tg in up = !0, Yg(rp, sp, {
        get: function () {
            return Ug(this) ? this[cp] : void 0
        }
    }), hp) jg[Tg] && Kg(jg[Tg], cp, Tg);
    var gp = {
            NATIVE_ARRAY_BUFFER_VIEWS: dp,
            TYPED_ARRAY_CONSTRUCTOR: lp,
            TYPED_ARRAY_TAG: up && cp,
            aTypedArray: function (e) {
                if (Ap(e)) return e;
                throw TypeError("Target is not a typed array")
            },
            aTypedArrayConstructor: function (e) {
                if (qg && !ap.call(np, e)) throw TypeError("Target is not a typed array constructor");
                return e
            },
            exportTypedArrayMethod: function (e, t, i) {
                if (zg) {
                    if (i) for (var n in hp) {
                        var r = jg[n];
                        if (r && Ng(r.prototype, e)) try {
                            delete r.prototype[e]
                        } catch (e) {
                        }
                    }
                    rp[e] && !i || Vg(rp, e, i ? t : dp && ep[e] || t)
                }
            },
            exportTypedArrayStaticMethod: function (e, t, i) {
                var n, r;
                if (zg) {
                    if (qg) {
                        if (i) for (n in hp) if ((r = jg[n]) && Ng(r, e)) try {
                            delete r[e]
                        } catch (e) {
                        }
                        if (np[e] && !i) return;
                        try {
                            return Vg(np, e, i ? t : dp && np[e] || t)
                        } catch (e) {
                        }
                    }
                    for (n in hp) !(r = jg[n]) || r[e] && !i || Vg(r, e, t)
                }
            },
            isView: function (e) {
                if (!Ug(e)) return !1;
                var t = Jg(e);
                return "DataView" === t || Ng(hp, t) || Ng(fp, t)
            },
            isTypedArray: Ap,
            TypedArray: np,
            TypedArrayPrototype: rp
        }, pp = i, vp = r, wp = Nl, yp = gp.NATIVE_ARRAY_BUFFER_VIEWS, mp = pp.ArrayBuffer, Cp = pp.Int8Array,
        Ip = !yp || !vp((function () {
            Cp(1)
        })) || !vp((function () {
            new Cp(-1)
        })) || !wp((function (e) {
            new Cp, new Cp(null), new Cp(1.5), new Cp(e)
        }), !0) || vp((function () {
            return 1 !== new Cp(new mp(2), 1, void 0).length
        })), Ep = Dt, Sp = Ht, bp = function (e) {
            if (void 0 === e) return 0;
            var t = Ep(e), i = Sp(t);
            if (t !== i) throw RangeError("Wrong length or index");
            return i
        }, xp = Math.abs, Bp = Math.pow, Pp = Math.floor, Qp = Math.log, Rp = Math.LN2, Dp = i, kp = o, Mp = Xg, Hp = Ue,
        Tp = hl, Lp = r, Op = wl, Fp = Dt, Xp = Ht, Gp = bp, zp = function (e, t, i) {
            var n, r, o, a = new Array(i), s = 8 * i - t - 1, c = (1 << s) - 1, l = c >> 1,
                d = 23 === t ? Bp(2, -24) - Bp(2, -77) : 0, u = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0, h = 0;
            for ((e = xp(e)) != e || e === 1 / 0 ? (r = e != e ? 1 : 0, n = c) : (n = Pp(Qp(e) / Rp), e * (o = Bp(2, -n)) < 1 && (n--, o *= 2), (e += n + l >= 1 ? d / o : d * Bp(2, 1 - l)) * o >= 2 && (n++, o /= 2), n + l >= c ? (r = 0, n = c) : n + l >= 1 ? (r = (e * o - 1) * Bp(2, t), n += l) : (r = e * Bp(2, l - 1) * Bp(2, t), n = 0)); t >= 8; a[h++] = 255 & r, r /= 256, t -= 8) ;
            for (n = n << t | r, s += t; s > 0; a[h++] = 255 & n, n /= 256, s -= 8) ;
            return a[--h] |= 128 * u, a
        }, jp = function (e, t) {
            var i, n = e.length, r = 8 * n - t - 1, o = (1 << r) - 1, a = o >> 1, s = r - 7, c = n - 1, l = e[c--],
                d = 127 & l;
            for (l >>= 7; s > 0; d = 256 * d + e[c], c--, s -= 8) ;
            for (i = d & (1 << -s) - 1, d >>= -s, s += t; s > 0; i = 256 * i + e[c], c--, s -= 8) ;
            if (0 === d) d = 1 - a; else {
                if (d === o) return i ? NaN : l ? -1 / 0 : 1 / 0;
                i += Bp(2, t), d -= a
            }
            return (l ? -1 : 1) * i * Bp(2, d - t)
        }, Up = Zo, Np = wa, Jp = Pt.f, Kp = Me.f, Vp = uh, Yp = ca, Wp = yt.get, qp = yt.set, Zp = "ArrayBuffer",
        _p = "DataView", $p = "Wrong index", ev = Dp.ArrayBuffer, tv = ev, iv = Dp.DataView, nv = iv && iv.prototype,
        rv = Object.prototype, ov = Dp.RangeError, av = zp, sv = jp, cv = function (e) {
            return [255 & e]
        }, lv = function (e) {
            return [255 & e, e >> 8 & 255]
        }, dv = function (e) {
            return [255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255]
        }, uv = function (e) {
            return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0]
        }, hv = function (e) {
            return av(e, 23, 4)
        }, fv = function (e) {
            return av(e, 52, 8)
        }, Av = function (e, t) {
            Kp(e.prototype, t, {
                get: function () {
                    return Wp(this)[t]
                }
            })
        }, gv = function (e, t, i, n) {
            var r = Gp(i), o = Wp(e);
            if (r + t > o.byteLength) throw ov($p);
            var a = Wp(o.buffer).bytes, s = r + o.byteOffset, c = a.slice(s, s + t);
            return n ? c : c.reverse()
        }, pv = function (e, t, i, n, r, o) {
            var a = Gp(i), s = Wp(e);
            if (a + t > s.byteLength) throw ov($p);
            for (var c = Wp(s.buffer).bytes, l = a + s.byteOffset, d = n(+r), u = 0; u < t; u++) c[l + u] = d[o ? u : t - u - 1]
        };
    if (Mp) {
        if (!Lp((function () {
            ev(1)
        })) || !Lp((function () {
            new ev(-1)
        })) || Lp((function () {
            return new ev, new ev(1.5), new ev(NaN), ev.name != Zp
        }))) {
            for (var vv, wv = (tv = function (e) {
                return Op(this, tv), new ev(Gp(e))
            }).prototype = ev.prototype, yv = Jp(ev), mv = 0; yv.length > mv;) (vv = yv[mv++]) in tv || Hp(tv, vv, ev[vv]);
            wv.constructor = tv
        }
        Np && Up(nv) !== rv && Np(nv, rv);
        var Cv = new iv(new tv(2)), Iv = nv.setInt8;
        Cv.setInt8(0, 2147483648), Cv.setInt8(1, 2147483649), !Cv.getInt8(0) && Cv.getInt8(1) || Tp(nv, {
            setInt8: function (e, t) {
                Iv.call(this, e, t << 24 >> 24)
            }, setUint8: function (e, t) {
                Iv.call(this, e, t << 24 >> 24)
            }
        }, {unsafe: !0})
    } else tv = function (e) {
        Op(this, tv, Zp);
        var t = Gp(e);
        qp(this, {bytes: Vp.call(new Array(t), 0), byteLength: t}), kp || (this.byteLength = t)
    }, iv = function (e, t, i) {
        Op(this, iv, _p), Op(e, tv, _p);
        var n = Wp(e).byteLength, r = Fp(t);
        if (r < 0 || r > n) throw ov("Wrong offset");
        if (r + (i = void 0 === i ? n - r : Xp(i)) > n) throw ov("Wrong length");
        qp(this, {
            buffer: e,
            byteLength: i,
            byteOffset: r
        }), kp || (this.buffer = e, this.byteLength = i, this.byteOffset = r)
    }, kp && (Av(tv, "byteLength"), Av(iv, "buffer"), Av(iv, "byteLength"), Av(iv, "byteOffset")), Tp(iv.prototype, {
        getInt8: function (e) {
            return gv(this, 1, e)[0] << 24 >> 24
        }, getUint8: function (e) {
            return gv(this, 1, e)[0]
        }, getInt16: function (e) {
            var t = gv(this, 2, e, arguments.length > 1 ? arguments[1] : void 0);
            return (t[1] << 8 | t[0]) << 16 >> 16
        }, getUint16: function (e) {
            var t = gv(this, 2, e, arguments.length > 1 ? arguments[1] : void 0);
            return t[1] << 8 | t[0]
        }, getInt32: function (e) {
            return uv(gv(this, 4, e, arguments.length > 1 ? arguments[1] : void 0))
        }, getUint32: function (e) {
            return uv(gv(this, 4, e, arguments.length > 1 ? arguments[1] : void 0)) >>> 0
        }, getFloat32: function (e) {
            return sv(gv(this, 4, e, arguments.length > 1 ? arguments[1] : void 0), 23)
        }, getFloat64: function (e) {
            return sv(gv(this, 8, e, arguments.length > 1 ? arguments[1] : void 0), 52)
        }, setInt8: function (e, t) {
            pv(this, 1, e, cv, t)
        }, setUint8: function (e, t) {
            pv(this, 1, e, cv, t)
        }, setInt16: function (e, t) {
            pv(this, 2, e, lv, t, arguments.length > 2 ? arguments[2] : void 0)
        }, setUint16: function (e, t) {
            pv(this, 2, e, lv, t, arguments.length > 2 ? arguments[2] : void 0)
        }, setInt32: function (e, t) {
            pv(this, 4, e, dv, t, arguments.length > 2 ? arguments[2] : void 0)
        }, setUint32: function (e, t) {
            pv(this, 4, e, dv, t, arguments.length > 2 ? arguments[2] : void 0)
        }, setFloat32: function (e, t) {
            pv(this, 4, e, hv, t, arguments.length > 2 ? arguments[2] : void 0)
        }, setFloat64: function (e, t) {
            pv(this, 8, e, fv, t, arguments.length > 2 ? arguments[2] : void 0)
        }
    });
    Yp(tv, Zp), Yp(iv, _p);
    var Ev = {ArrayBuffer: tv, DataView: iv}, Sv = I, bv = Math.floor, xv = Dt, Bv = function (e, t) {
            var i = function (e) {
                var t = xv(e);
                if (t < 0) throw RangeError("The argument can't be less than 0");
                return t
            }(e);
            if (i % t) throw RangeError("Wrong offset");
            return i
        }, Pv = W, Qv = Ht, Rv = xl, Dv = Il, kv = ps, Mv = gp.aTypedArrayConstructor, Hv = Ei, Tv = i, Lv = o, Ov = Ip,
        Fv = gp, Xv = Ev, Gv = wl, zv = h, jv = Ue, Uv = Ht, Nv = bp, Jv = Bv, Kv = we, Vv = _, Yv = $r, Wv = I, qv = X,
        Zv = Zi, _v = wa, $v = Pt.f, ew = function (e) {
            var t, i, n, r, o, a, s = Pv(e), c = arguments.length, l = c > 1 ? arguments[1] : void 0, d = void 0 !== l,
                u = Rv(s);
            if (null != u && !Dv(u)) for (a = (o = u.call(s)).next, s = []; !(r = a.call(o)).done;) s.push(r.value);
            for (d && c > 2 && (l = kv(l, arguments[2], 2)), i = Qv(s.length), n = new (Mv(this))(i), t = 0; i > t; t++) n[t] = d ? l(s[t], t) : s[t];
            return n
        }, tw = Ss.forEach, iw = vl, nw = Me, rw = n, ow = EA, aw = yt.get, sw = yt.set, cw = nw.f, lw = rw.f,
        dw = Math.round, uw = Tv.RangeError, hw = Xv.ArrayBuffer, fw = Xv.DataView, Aw = Fv.NATIVE_ARRAY_BUFFER_VIEWS,
        gw = Fv.TYPED_ARRAY_CONSTRUCTOR, pw = Fv.TYPED_ARRAY_TAG, vw = Fv.TypedArray, ww = Fv.TypedArrayPrototype,
        yw = Fv.aTypedArrayConstructor, mw = Fv.isTypedArray, Cw = "BYTES_PER_ELEMENT", Iw = "Wrong length",
        Ew = function (e, t) {
            for (var i = 0, n = t.length, r = new (yw(e))(n); n > i;) r[i] = t[i++];
            return r
        }, Sw = function (e, t) {
            cw(e, t, {
                get: function () {
                    return aw(this)[t]
                }
            })
        }, bw = function (e) {
            var t;
            return e instanceof hw || "ArrayBuffer" == (t = Yv(e)) || "SharedArrayBuffer" == t
        }, xw = function (e, t) {
            return mw(e) && !qv(t) && t in e && function (e) {
                return !Sv(e) && isFinite(e) && bv(e) === e
            }(+t) && t >= 0
        }, Bw = function (e, t) {
            return t = Kv(t), xw(e, t) ? zv(2, e[t]) : lw(e, t)
        }, Pw = function (e, t, i) {
            return t = Kv(t), !(xw(e, t) && Wv(i) && Vv(i, "value")) || Vv(i, "get") || Vv(i, "set") || i.configurable || Vv(i, "writable") && !i.writable || Vv(i, "enumerable") && !i.enumerable ? cw(e, t, i) : (e[t] = i.value, e)
        };
    Lv ? (Aw || (rw.f = Bw, nw.f = Pw, Sw(ww, "buffer"), Sw(ww, "byteOffset"), Sw(ww, "byteLength"), Sw(ww, "length")), Hv({
        target: "Object",
        stat: !0,
        forced: !Aw
    }, {getOwnPropertyDescriptor: Bw, defineProperty: Pw}), Fg.exports = function (e, t, i) {
        var n = e.match(/\d+$/)[0] / 8, r = e + (i ? "Clamped" : "") + "Array", o = "get" + e, a = "set" + e, s = Tv[r],
            c = s, l = c && c.prototype, d = {}, u = function (e, t) {
                cw(e, t, {
                    get: function () {
                        return function (e, t) {
                            var i = aw(e);
                            return i.view[o](t * n + i.byteOffset, !0)
                        }(this, t)
                    }, set: function (e) {
                        return function (e, t, r) {
                            var o = aw(e);
                            i && (r = (r = dw(r)) < 0 ? 0 : r > 255 ? 255 : 255 & r), o.view[a](t * n + o.byteOffset, r, !0)
                        }(this, t, e)
                    }, enumerable: !0
                })
            };
        Aw ? Ov && (c = t((function (e, t, i, o) {
            return Gv(e, c, r), ow(Wv(t) ? bw(t) ? void 0 !== o ? new s(t, Jv(i, n), o) : void 0 !== i ? new s(t, Jv(i, n)) : new s(t) : mw(t) ? Ew(c, t) : ew.call(c, t) : new s(Nv(t)), e, c)
        })), _v && _v(c, vw), tw($v(s), (function (e) {
            e in c || jv(c, e, s[e])
        })), c.prototype = l) : (c = t((function (e, t, i, o) {
            Gv(e, c, r);
            var a, s, l, d = 0, h = 0;
            if (Wv(t)) {
                if (!bw(t)) return mw(t) ? Ew(c, t) : ew.call(c, t);
                a = t, h = Jv(i, n);
                var f = t.byteLength;
                if (void 0 === o) {
                    if (f % n) throw uw(Iw);
                    if ((s = f - h) < 0) throw uw(Iw)
                } else if ((s = Uv(o) * n) + h > f) throw uw(Iw);
                l = s / n
            } else l = Nv(t), a = new hw(s = l * n);
            for (sw(e, {buffer: a, byteOffset: h, byteLength: s, length: l, view: new fw(a)}); d < l;) u(e, d++)
        })), _v && _v(c, vw), l = c.prototype = Zv(ww)), l.constructor !== c && jv(l, "constructor", c), jv(l, gw, c), pw && jv(l, pw, r), d[r] = c, Hv({
            global: !0,
            forced: c != s,
            sham: !Aw
        }, d), Cw in c || jv(c, Cw, n), Cw in l || jv(l, Cw, n), iw(r)
    }) : Fg.exports = function () {
    }, (0, Fg.exports)("Float32", (function (e) {
        return function (t, i, n) {
            return e(this, t, i, n)
        }
    }));
    var Qw = W, Rw = Ft, Dw = Ht, kw = Math.min, Mw = [].copyWithin || function (e, t) {
        var i = Qw(this), n = Dw(i.length), r = Rw(e, n), o = Rw(t, n),
            a = arguments.length > 2 ? arguments[2] : void 0, s = kw((void 0 === a ? n : Rw(a, n)) - o, n - r), c = 1;
        for (o < r && r < o + s && (c = -1, o += s - 1, r += s - 1); s-- > 0;) o in i ? i[r] = i[o] : delete i[r], r += c, o += c;
        return i
    }, Hw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("copyWithin", (function (e, t) {
        return Mw.call(Hw(this), e, t, arguments.length > 2 ? arguments[2] : void 0)
    }));
    var Tw = Ss.every, Lw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("every", (function (e) {
        return Tw(Lw(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var Ow = uh, Fw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("fill", (function (e) {
        return Ow.apply(Fw(this), arguments)
    }));
    var Xw = Yl, Gw = gp.TYPED_ARRAY_CONSTRUCTOR, zw = gp.aTypedArrayConstructor, jw = function (e) {
        return zw(Xw(e, e[Gw]))
    }, Uw = jw, Nw = Ss.filter, Jw = function (e, t) {
        return function (e, t) {
            for (var i = 0, n = t.length, r = new e(n); n > i;) r[i] = t[i++];
            return r
        }(Uw(e), t)
    }, Kw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("filter", (function (e) {
        var t = Nw(Kw(this), e, arguments.length > 1 ? arguments[1] : void 0);
        return Jw(this, t)
    }));
    var Vw = Ss.find, Yw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("find", (function (e) {
        return Vw(Yw(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var Ww = Ss.findIndex, qw = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("findIndex", (function (e) {
        return Ww(qw(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var Zw = Ss.forEach, _w = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("forEach", (function (e) {
        Zw(_w(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var $w = Ut.includes, ey = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("includes", (function (e) {
        return $w(ey(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var ty = Ut.indexOf, iy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("indexOf", (function (e) {
        return ty(iy(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var ny = i, ry = gp, oy = Ua, ay = ue("iterator"), sy = ny.Uint8Array, cy = oy.values, ly = oy.keys,
        dy = oy.entries, uy = ry.aTypedArray, hy = ry.exportTypedArrayMethod, fy = sy && sy.prototype[ay],
        Ay = !!fy && ("values" == fy.name || null == fy.name), gy = function () {
            return cy.call(uy(this))
        };
    hy("entries", (function () {
        return dy.call(uy(this))
    })), hy("keys", (function () {
        return ly.call(uy(this))
    })), hy("values", gy, !Ay), hy(ay, gy, !Ay);
    var py = gp.aTypedArray, vy = [].join;
    (0, gp.exportTypedArrayMethod)("join", (function (e) {
        return vy.apply(py(this), arguments)
    }));
    var wy = Ch, yy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("lastIndexOf", (function (e) {
        return wy.apply(yy(this), arguments)
    }));
    var my = Ss.map, Cy = jw, Iy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("map", (function (e) {
        return my(Iy(this), e, arguments.length > 1 ? arguments[1] : void 0, (function (e, t) {
            return new (Cy(e))(t)
        }))
    }));
    var Ey = vA.left, Sy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("reduce", (function (e) {
        return Ey(Sy(this), e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var by = vA.right, xy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("reduceRight", (function (e) {
        return by(xy(this), e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var By = gp.aTypedArray, Py = gp.exportTypedArrayMethod, Qy = Math.floor;
    Py("reverse", (function () {
        for (var e, t = this, i = By(t).length, n = Qy(i / 2), r = 0; r < n;) e = t[r], t[r++] = t[--i], t[i] = e;
        return t
    }));
    var Ry = Ht, Dy = Bv, ky = W, My = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("set", (function (e) {
        My(this);
        var t = Dy(arguments.length > 1 ? arguments[1] : void 0, 1), i = this.length, n = ky(e), r = Ry(n.length),
            o = 0;
        if (r + t > i) throw RangeError("Wrong length");
        for (; o < r;) this[t + o] = n[o++]
    }), r((function () {
        new Int8Array(1).set({})
    })));
    var Hy = jw, Ty = gp.aTypedArray, Ly = [].slice;
    (0, gp.exportTypedArrayMethod)("slice", (function (e, t) {
        for (var i = Ly.call(Ty(this), e, t), n = Hy(this), r = 0, o = i.length, a = new n(o); o > r;) a[r] = i[r++];
        return a
    }), r((function () {
        new Int8Array(1).slice()
    })));
    var Oy = Ss.some, Fy = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("some", (function (e) {
        return Oy(Fy(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }));
    var Xy = r, Gy = As, zy = Ht, jy = jf, Uy = Nf, Ny = Jf, Jy = M, Ky = Vf, Vy = gp.aTypedArray,
        Yy = gp.exportTypedArrayMethod, Wy = i.Uint16Array, qy = Wy && Wy.prototype.sort,
        Zy = !!qy && !Xy((function () {
            var e = new Wy(2);
            e.sort(null), e.sort({})
        })), _y = !!qy && !Xy((function () {
            if (Jy) return Jy < 74;
            if (Uy) return Uy < 67;
            if (Ny) return !0;
            if (Ky) return Ky < 602;
            var e, t, i = new Wy(516), n = Array(516);
            for (e = 0; e < 516; e++) t = e % 4, i[e] = 515 - e, n[e] = e - 2 * t + 3;
            for (i.sort((function (e, t) {
                return (e / 4 | 0) - (t / 4 | 0)
            })), e = 0; e < 516; e++) if (i[e] !== n[e]) return !0
        }));
    Yy("sort", (function (e) {
        var t = this;
        if (void 0 !== e && Gy(e), _y) return qy.call(t, e);
        Vy(t);
        var i, n = zy(t.length), r = Array(n);
        for (i = 0; i < n; i++) r[i] = t[i];
        for (r = jy(t, function (e) {
            return function (t, i) {
                return void 0 !== e ? +e(t, i) || 0 : i != i ? -1 : t != t ? 1 : 0 === t && 0 === i ? 1 / t > 0 && 1 / i < 0 ? 1 : -1 : t > i
            }
        }(e)), i = 0; i < n; i++) t[i] = r[i];
        return t
    }), !_y || Zy);
    var $y = Ht, em = Ft, tm = jw, im = gp.aTypedArray;
    (0, gp.exportTypedArrayMethod)("subarray", (function (e, t) {
        var i = im(this), n = i.length, r = em(e, n);
        return new (tm(i))(i.buffer, i.byteOffset + r * i.BYTES_PER_ELEMENT, $y((void 0 === t ? n : em(t, n)) - r))
    }));
    var nm = gp, rm = r, om = i.Int8Array, am = nm.aTypedArray, sm = nm.exportTypedArrayMethod, cm = [].toLocaleString,
        lm = [].slice, dm = !!om && rm((function () {
            cm.call(new om(1))
        }));
    sm("toLocaleString", (function () {
        return cm.apply(dm ? lm.call(am(this)) : am(this), arguments)
    }), rm((function () {
        return [1, 2].toLocaleString() != new om([1, 2]).toLocaleString()
    })) || !rm((function () {
        om.prototype.toLocaleString.call([1, 2])
    })));
    var um = gp.exportTypedArrayMethod, hm = r, fm = i.Uint8Array, Am = fm && fm.prototype || {}, gm = [].toString,
        pm = [].join;
    hm((function () {
        gm.call({})
    })) && (gm = function () {
        return pm.call(this)
    });
    var vm = Am.toString != gm;
    um("toString", gm, vm), (0, Fg.exports)("Uint16", (function (e) {
        return function (t, i, n) {
            return e(this, t, i, n)
        }
    })), (0, Fg.exports)("Uint32", (function (e) {
        return function (t, i, n) {
            return e(this, t, i, n)
        }
    }));
    var wm = vl, ym = Ev.ArrayBuffer;
    Ei({global: !0, forced: i.ArrayBuffer !== ym}, {ArrayBuffer: ym}), wm("ArrayBuffer");
    var mm = Dt, Cm = bi, Im = w;
    Ei({target: "String", proto: !0}, {
        repeat: function (e) {
            var t = Cm(Im(this)), i = "", n = mm(e);
            if (n < 0 || n == 1 / 0) throw RangeError("Wrong number of repetitions");
            for (; n > 0; (n >>>= 1) && (t += t)) 1 & n && (i += t);
            return i
        }
    });
    var Em = Ei, Sm = r, bm = ns.f;
    Em({
        target: "Object", stat: !0, forced: Sm((function () {
            return !Object.getOwnPropertyNames(1)
        }))
    }, {getOwnPropertyNames: bm});
    var xm = r, Bm = ue("iterator"), Pm = !xm((function () {
            var e = new URL("b?a=1&b=2&c=3", "http://a"), t = e.searchParams, i = "";
            return e.pathname = "c%20d", t.forEach((function (e, n) {
                t.delete("b"), i += n + e
            })), !t.sort || "http://a/c%20d?a=1&c=3" !== e.href || "3" !== t.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !t[Bm] || "a" !== new URL("--https--a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://ÑÐµÑÑ").host || "#%D0%B1" !== new URL("http://a#Ð±").hash || "a1c3" !== i || "x" !== new URL("http://x", void 0).host
        })), Qm = 2147483647, Rm = /[^\0-\u007E]/, Dm = /[.\u3002\uFF0E\uFF61]/g,
        km = "Overflow: input needs wider integers to process", Mm = Math.floor, Hm = String.fromCharCode,
        Tm = function (e) {
            return e + 22 + 75 * (e < 26)
        }, Lm = function (e, t, i) {
            var n = 0;
            for (e = i ? Mm(e / 700) : e >> 1, e += Mm(e / t); e > 455; n += 36) e = Mm(e / 35);
            return Mm(n + 36 * e / (e + 38))
        }, Om = function (e) {
            var t, i, n = [], r = (e = function (e) {
                for (var t = [], i = 0, n = e.length; i < n;) {
                    var r = e.charCodeAt(i++);
                    if (r >= 55296 && r <= 56319 && i < n) {
                        var o = e.charCodeAt(i++);
                        56320 == (64512 & o) ? t.push(((1023 & r) << 10) + (1023 & o) + 65536) : (t.push(r), i--)
                    } else t.push(r)
                }
                return t
            }(e)).length, o = 128, a = 0, s = 72;
            for (t = 0; t < e.length; t++) (i = e[t]) < 128 && n.push(Hm(i));
            var c = n.length, l = c;
            for (c && n.push("-"); l < r;) {
                var d = Qm;
                for (t = 0; t < e.length; t++) (i = e[t]) >= o && i < d && (d = i);
                var u = l + 1;
                if (d - o > Mm((Qm - a) / u)) throw RangeError(km);
                for (a += (d - o) * u, o = d, t = 0; t < e.length; t++) {
                    if ((i = e[t]) < o && ++a > Qm) throw RangeError(km);
                    if (i == o) {
                        for (var h = a, f = 36; ; f += 36) {
                            var A = f <= s ? 1 : f >= s + 26 ? 26 : f - s;
                            if (h < A) break;
                            var g = h - A, p = 36 - A;
                            n.push(Hm(Tm(A + g % p))), h = Mm(g / p)
                        }
                        n.push(Hm(Tm(h))), s = Lm(a, u, l == c), a = 0, ++l
                    }
                }
                ++a, ++o
            }
            return n.join("")
        }, Fm = Te, Xm = xl, Gm = Ei, zm = b, jm = Pm, Um = Ne.exports, Nm = hl, Jm = ca, Km = ga, Vm = yt, Ym = wl, Wm = _,
        qm = ps, Zm = $r, _m = Te, $m = I, eC = bi, tC = Zi, iC = h, nC = function (e) {
            var t = Xm(e);
            if ("function" != typeof t) throw TypeError(String(e) + " is not iterable");
            return Fm(t.call(e))
        }, rC = xl, oC = ue, aC = zm("fetch"), sC = zm("Request"), cC = sC && sC.prototype, lC = zm("Headers"),
        dC = oC("iterator"), uC = "URLSearchParams", hC = "URLSearchParamsIterator", fC = Vm.set, AC = Vm.getterFor(uC),
        gC = Vm.getterFor(hC), pC = /\+/g, vC = Array(4), wC = function (e) {
            return vC[e - 1] || (vC[e - 1] = RegExp("((?:%[\\da-f]{2}){" + e + "})", "gi"))
        }, yC = function (e) {
            try {
                return decodeURIComponent(e)
            } catch (t) {
                return e
            }
        }, mC = function (e) {
            var t = e.replace(pC, " "), i = 4;
            try {
                return decodeURIComponent(t)
            } catch (e) {
                for (; i;) t = t.replace(wC(i--), yC);
                return t
            }
        }, CC = /[!'()~]|%20/g, IC = {"!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+"},
        EC = function (e) {
            return IC[e]
        }, SC = function (e) {
            return encodeURIComponent(e).replace(CC, EC)
        }, bC = function (e, t) {
            if (t) for (var i, n, r = t.split("&"), o = 0; o < r.length;) (i = r[o++]).length && (n = i.split("="), e.push({
                key: mC(n.shift()),
                value: mC(n.join("="))
            }))
        }, xC = function (e) {
            this.entries.length = 0, bC(this.entries, e)
        }, BC = function (e, t) {
            if (e < t) throw TypeError("Not enough arguments")
        }, PC = Km((function (e, t) {
            fC(this, {type: hC, iterator: nC(AC(e).entries), kind: t})
        }), "Iterator", (function () {
            var e = gC(this), t = e.kind, i = e.iterator.next(), n = i.value;
            return i.done || (i.value = "keys" === t ? n.key : "values" === t ? n.value : [n.key, n.value]), i
        })), QC = function () {
            Ym(this, QC, uC);
            var e, t, i, n, r, o, a, s, c, l = arguments.length > 0 ? arguments[0] : void 0, d = this, u = [];
            if (fC(d, {
                type: uC, entries: u, updateURL: function () {
                }, updateSearchParams: xC
            }), void 0 !== l) if ($m(l)) if ("function" == typeof (e = rC(l))) for (i = (t = e.call(l)).next; !(n = i.call(t)).done;) {
                if ((a = (o = (r = nC(_m(n.value))).next).call(r)).done || (s = o.call(r)).done || !o.call(r).done) throw TypeError("Expected sequence with length 2");
                u.push({key: eC(a.value), value: eC(s.value)})
            } else for (c in l) Wm(l, c) && u.push({
                key: c,
                value: eC(l[c])
            }); else bC(u, "string" == typeof l ? "?" === l.charAt(0) ? l.slice(1) : l : eC(l))
        }, RC = QC.prototype;
    if (Nm(RC, {
        append: function (e, t) {
            BC(arguments.length, 2);
            var i = AC(this);
            i.entries.push({key: eC(e), value: eC(t)}), i.updateURL()
        }, delete: function (e) {
            BC(arguments.length, 1);
            for (var t = AC(this), i = t.entries, n = eC(e), r = 0; r < i.length;) i[r].key === n ? i.splice(r, 1) : r++;
            t.updateURL()
        }, get: function (e) {
            BC(arguments.length, 1);
            for (var t = AC(this).entries, i = eC(e), n = 0; n < t.length; n++) if (t[n].key === i) return t[n].value;
            return null
        }, getAll: function (e) {
            BC(arguments.length, 1);
            for (var t = AC(this).entries, i = eC(e), n = [], r = 0; r < t.length; r++) t[r].key === i && n.push(t[r].value);
            return n
        }, has: function (e) {
            BC(arguments.length, 1);
            for (var t = AC(this).entries, i = eC(e), n = 0; n < t.length;) if (t[n++].key === i) return !0;
            return !1
        }, set: function (e, t) {
            BC(arguments.length, 1);
            for (var i, n = AC(this), r = n.entries, o = !1, a = eC(e), s = eC(t), c = 0; c < r.length; c++) (i = r[c]).key === a && (o ? r.splice(c--, 1) : (o = !0, i.value = s));
            o || r.push({key: a, value: s}), n.updateURL()
        }, sort: function () {
            var e, t, i, n = AC(this), r = n.entries, o = r.slice();
            for (r.length = 0, i = 0; i < o.length; i++) {
                for (e = o[i], t = 0; t < i; t++) if (r[t].key > e.key) {
                    r.splice(t, 0, e);
                    break
                }
                t === i && r.push(e)
            }
            n.updateURL()
        }, forEach: function (e) {
            for (var t, i = AC(this).entries, n = qm(e, arguments.length > 1 ? arguments[1] : void 0, 3), r = 0; r < i.length;) n((t = i[r++]).value, t.key, this)
        }, keys: function () {
            return new PC(this, "keys")
        }, values: function () {
            return new PC(this, "values")
        }, entries: function () {
            return new PC(this, "entries")
        }
    }, {enumerable: !0}), Um(RC, dC, RC.entries), Um(RC, "toString", (function () {
        for (var e, t = AC(this).entries, i = [], n = 0; n < t.length;) e = t[n++], i.push(SC(e.key) + "=" + SC(e.value));
        return i.join("&")
    }), {enumerable: !0}), Jm(QC, uC), Gm({
        global: !0,
        forced: !jm
    }, {URLSearchParams: QC}), !jm && "function" == typeof lC) {
        var DC = function (e) {
            if ($m(e)) {
                var t, i = e.body;
                if (Zm(i) === uC) return (t = e.headers ? new lC(e.headers) : new lC).has("content-type") || t.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), tC(e, {
                    body: iC(0, String(i)),
                    headers: iC(0, t)
                })
            }
            return e
        };
        if ("function" == typeof aC && Gm({global: !0, enumerable: !0, forced: !0}, {
            fetch: function (e) {
                return aC(e, arguments.length > 1 ? DC(arguments[1]) : {})
            }
        }), "function" == typeof sC) {
            var kC = function (e) {
                return Ym(this, kC, "Request"), new sC(e, arguments.length > 1 ? DC(arguments[1]) : {})
            };
            cC.constructor = kC, kC.prototype = cC, Gm({global: !0, forced: !0}, {Request: kC})
        }
    }
    var MC, HC = {URLSearchParams: QC, getState: AC}, TC = Ei, LC = o, OC = Pm, FC = i, XC = Fi, GC = Ne.exports,
        zC = wl, jC = _, UC = Bg, NC = sf, JC = Sr.codeAt, KC = bi, VC = ca, YC = HC, WC = yt, qC = FC.URL,
        ZC = YC.URLSearchParams, _C = YC.getState, $C = WC.set, eI = WC.getterFor("URL"), tI = Math.floor,
        iI = Math.pow, nI = "Invalid scheme", rI = "Invalid host", oI = "Invalid port", aI = /[A-Za-z]/,
        sI = /[\d+-.A-Za-z]/, cI = /\d/, lI = /^0x/i, dI = /^[0-7]+$/, uI = /^\d+$/, hI = /^[\dA-Fa-f]+$/,
        fI = /[\0\t\n\r #%/:<>?@[\\\]^|]/, AI = /[\0\t\n\r #/:<>?@[\\\]^|]/,
        gI = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g, pI = /[\t\n\r]/g, vI = function (e, t) {
            var i, n, r;
            if ("[" == t.charAt(0)) {
                if ("]" != t.charAt(t.length - 1)) return rI;
                if (!(i = yI(t.slice(1, -1)))) return rI;
                e.host = i
            } else if (BI(e)) {
                if (t = function (e) {
                    var t, i, n = [], r = e.toLowerCase().replace(Dm, ".").split(".");
                    for (t = 0; t < r.length; t++) i = r[t], n.push(Rm.test(i) ? "xn--" + Om(i) : i);
                    return n.join(".")
                }(t), fI.test(t)) return rI;
                if (null === (i = wI(t))) return rI;
                e.host = i
            } else {
                if (AI.test(t)) return rI;
                for (i = "", n = NC(t), r = 0; r < n.length; r++) i += bI(n[r], CI);
                e.host = i
            }
        }, wI = function (e) {
            var t, i, n, r, o, a, s, c = e.split(".");
            if (c.length && "" == c[c.length - 1] && c.pop(), (t = c.length) > 4) return e;
            for (i = [], n = 0; n < t; n++) {
                if ("" == (r = c[n])) return e;
                if (o = 10, r.length > 1 && "0" == r.charAt(0) && (o = lI.test(r) ? 16 : 8, r = r.slice(8 == o ? 1 : 2)), "" === r) a = 0; else {
                    if (!(10 == o ? uI : 8 == o ? dI : hI).test(r)) return e;
                    a = parseInt(r, o)
                }
                i.push(a)
            }
            for (n = 0; n < t; n++) if (a = i[n], n == t - 1) {
                if (a >= iI(256, 5 - t)) return null
            } else if (a > 255) return null;
            for (s = i.pop(), n = 0; n < i.length; n++) s += i[n] * iI(256, 3 - n);
            return s
        }, yI = function (e) {
            var t, i, n, r, o, a, s, c = [0, 0, 0, 0, 0, 0, 0, 0], l = 0, d = null, u = 0, h = function () {
                return e.charAt(u)
            };
            if (":" == h()) {
                if (":" != e.charAt(1)) return;
                u += 2, d = ++l
            }
            for (; h();) {
                if (8 == l) return;
                if (":" != h()) {
                    for (t = i = 0; i < 4 && hI.test(h());) t = 16 * t + parseInt(h(), 16), u++, i++;
                    if ("." == h()) {
                        if (0 == i) return;
                        if (u -= i, l > 6) return;
                        for (n = 0; h();) {
                            if (r = null, n > 0) {
                                if (!("." == h() && n < 4)) return;
                                u++
                            }
                            if (!cI.test(h())) return;
                            for (; cI.test(h());) {
                                if (o = parseInt(h(), 10), null === r) r = o; else {
                                    if (0 == r) return;
                                    r = 10 * r + o
                                }
                                if (r > 255) return;
                                u++
                            }
                            c[l] = 256 * c[l] + r, 2 != ++n && 4 != n || l++
                        }
                        if (4 != n) return;
                        break
                    }
                    if (":" == h()) {
                        if (u++, !h()) return
                    } else if (h()) return;
                    c[l++] = t
                } else {
                    if (null !== d) return;
                    u++, d = ++l
                }
            }
            if (null !== d) for (a = l - d, l = 7; 0 != l && a > 0;) s = c[l], c[l--] = c[d + a - 1], c[d + --a] = s; else if (8 != l) return;
            return c
        }, mI = function (e) {
            var t, i, n, r;
            if ("number" == typeof e) {
                for (t = [], i = 0; i < 4; i++) t.unshift(e % 256), e = tI(e / 256);
                return t.join(".")
            }
            if ("object" == typeof e) {
                for (t = "", n = function (e) {
                    for (var t = null, i = 1, n = null, r = 0, o = 0; o < 8; o++) 0 !== e[o] ? (r > i && (t = n, i = r), n = null, r = 0) : (null === n && (n = o), ++r);
                    return r > i && (t = n, i = r), t
                }(e), i = 0; i < 8; i++) r && 0 === e[i] || (r && (r = !1), n === i ? (t += i ? ":" : "::", r = !0) : (t += e[i].toString(16), i < 7 && (t += ":")));
                return "[" + t + "]"
            }
            return e
        }, CI = {}, II = UC({}, CI, {" ": 1, '"': 1, "<": 1, ">": 1, "`": 1}),
        EI = UC({}, II, {"#": 1, "?": 1, "{": 1, "}": 1}),
        SI = UC({}, EI, {"/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1}),
        bI = function (e, t) {
            var i = JC(e, 0);
            return i > 32 && i < 127 && !jC(t, e) ? e : encodeURIComponent(e)
        }, xI = {ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443}, BI = function (e) {
            return jC(xI, e.scheme)
        }, PI = function (e) {
            return "" != e.username || "" != e.password
        }, QI = function (e) {
            return !e.host || e.cannotBeABaseURL || "file" == e.scheme
        }, RI = function (e, t) {
            var i;
            return 2 == e.length && aI.test(e.charAt(0)) && (":" == (i = e.charAt(1)) || !t && "|" == i)
        }, DI = function (e) {
            var t;
            return e.length > 1 && RI(e.slice(0, 2)) && (2 == e.length || "/" === (t = e.charAt(2)) || "\\" === t || "?" === t || "#" === t)
        }, kI = function (e) {
            var t = e.path, i = t.length;
            !i || "file" == e.scheme && 1 == i && RI(t[0], !0) || t.pop()
        }, MI = function (e) {
            return "." === e || "%2e" === e.toLowerCase()
        }, HI = {}, TI = {}, LI = {}, OI = {}, FI = {}, XI = {}, GI = {}, zI = {}, jI = {}, UI = {}, NI = {}, JI = {},
        KI = {}, VI = {}, YI = {}, WI = {}, qI = {}, ZI = {}, _I = {}, $I = {}, eE = {}, tE = function (e, t, i, n) {
            var r, o, a, s, c, l = i || HI, d = 0, u = "", h = !1, f = !1, A = !1;
            for (i || (e.scheme = "", e.username = "", e.password = "", e.host = null, e.port = null, e.path = [], e.query = null, e.fragment = null, e.cannotBeABaseURL = !1, t = t.replace(gI, "")), t = t.replace(pI, ""), r = NC(t); d <= r.length;) {
                switch (o = r[d], l) {
                    case HI:
                        if (!o || !aI.test(o)) {
                            if (i) return nI;
                            l = LI;
                            continue
                        }
                        u += o.toLowerCase(), l = TI;
                        break;
                    case TI:
                        if (o && (sI.test(o) || "+" == o || "-" == o || "." == o)) u += o.toLowerCase(); else {
                            if (":" != o) {
                                if (i) return nI;
                                u = "", l = LI, d = 0;
                                continue
                            }
                            if (i && (BI(e) != jC(xI, u) || "file" == u && (PI(e) || null !== e.port) || "file" == e.scheme && !e.host)) return;
                            if (e.scheme = u, i) return void (BI(e) && xI[e.scheme] == e.port && (e.port = null));
                            u = "", "file" == e.scheme ? l = VI : BI(e) && n && n.scheme == e.scheme ? l = OI : BI(e) ? l = zI : "/" == r[d + 1] ? (l = FI, d++) : (e.cannotBeABaseURL = !0, e.path.push(""), l = _I)
                        }
                        break;
                    case LI:
                        if (!n || n.cannotBeABaseURL && "#" != o) return nI;
                        if (n.cannotBeABaseURL && "#" == o) {
                            e.scheme = n.scheme, e.path = n.path.slice(), e.query = n.query, e.fragment = "", e.cannotBeABaseURL = !0, l = eE;
                            break
                        }
                        l = "file" == n.scheme ? VI : XI;
                        continue;
                    case OI:
                        if ("/" != o || "/" != r[d + 1]) {
                            l = XI;
                            continue
                        }
                        l = jI, d++;
                        break;
                    case FI:
                        if ("/" == o) {
                            l = UI;
                            break
                        }
                        l = ZI;
                        continue;
                    case XI:
                        if (e.scheme = n.scheme, o == MC) e.username = n.username, e.password = n.password, e.host = n.host, e.port = n.port, e.path = n.path.slice(), e.query = n.query; else if ("/" == o || "\\" == o && BI(e)) l = GI; else if ("?" == o) e.username = n.username, e.password = n.password, e.host = n.host, e.port = n.port, e.path = n.path.slice(), e.query = "", l = $I; else {
                            if ("#" != o) {
                                e.username = n.username, e.password = n.password, e.host = n.host, e.port = n.port, e.path = n.path.slice(), e.path.pop(), l = ZI;
                                continue
                            }
                            e.username = n.username, e.password = n.password, e.host = n.host, e.port = n.port, e.path = n.path.slice(), e.query = n.query, e.fragment = "", l = eE
                        }
                        break;
                    case GI:
                        if (!BI(e) || "/" != o && "\\" != o) {
                            if ("/" != o) {
                                e.username = n.username, e.password = n.password, e.host = n.host, e.port = n.port, l = ZI;
                                continue
                            }
                            l = UI
                        } else l = jI;
                        break;
                    case zI:
                        if (l = jI, "/" != o || "/" != u.charAt(d + 1)) continue;
                        d++;
                        break;
                    case jI:
                        if ("/" != o && "\\" != o) {
                            l = UI;
                            continue
                        }
                        break;
                    case UI:
                        if ("@" == o) {
                            h && (u = "%40" + u), h = !0, a = NC(u);
                            for (var g = 0; g < a.length; g++) {
                                var p = a[g];
                                if (":" != p || A) {
                                    var v = bI(p, SI);
                                    A ? e.password += v : e.username += v
                                } else A = !0
                            }
                            u = ""
                        } else if (o == MC || "/" == o || "?" == o || "#" == o || "\\" == o && BI(e)) {
                            if (h && "" == u) return "Invalid authority";
                            d -= NC(u).length + 1, u = "", l = NI
                        } else u += o;
                        break;
                    case NI:
                    case JI:
                        if (i && "file" == e.scheme) {
                            l = WI;
                            continue
                        }
                        if (":" != o || f) {
                            if (o == MC || "/" == o || "?" == o || "#" == o || "\\" == o && BI(e)) {
                                if (BI(e) && "" == u) return rI;
                                if (i && "" == u && (PI(e) || null !== e.port)) return;
                                if (s = vI(e, u)) return s;
                                if (u = "", l = qI, i) return;
                                continue
                            }
                            "[" == o ? f = !0 : "]" == o && (f = !1), u += o
                        } else {
                            if ("" == u) return rI;
                            if (s = vI(e, u)) return s;
                            if (u = "", l = KI, i == JI) return
                        }
                        break;
                    case KI:
                        if (!cI.test(o)) {
                            if (o == MC || "/" == o || "?" == o || "#" == o || "\\" == o && BI(e) || i) {
                                if ("" != u) {
                                    var w = parseInt(u, 10);
                                    if (w > 65535) return oI;
                                    e.port = BI(e) && w === xI[e.scheme] ? null : w, u = ""
                                }
                                if (i) return;
                                l = qI;
                                continue
                            }
                            return oI
                        }
                        u += o;
                        break;
                    case VI:
                        if (e.scheme = "file", "/" == o || "\\" == o) l = YI; else {
                            if (!n || "file" != n.scheme) {
                                l = ZI;
                                continue
                            }
                            if (o == MC) e.host = n.host, e.path = n.path.slice(), e.query = n.query; else if ("?" == o) e.host = n.host, e.path = n.path.slice(), e.query = "", l = $I; else {
                                if ("#" != o) {
                                    DI(r.slice(d).join("")) || (e.host = n.host, e.path = n.path.slice(), kI(e)), l = ZI;
                                    continue
                                }
                                e.host = n.host, e.path = n.path.slice(), e.query = n.query, e.fragment = "", l = eE
                            }
                        }
                        break;
                    case YI:
                        if ("/" == o || "\\" == o) {
                            l = WI;
                            break
                        }
                        n && "file" == n.scheme && !DI(r.slice(d).join("")) && (RI(n.path[0], !0) ? e.path.push(n.path[0]) : e.host = n.host), l = ZI;
                        continue;
                    case WI:
                        if (o == MC || "/" == o || "\\" == o || "?" == o || "#" == o) {
                            if (!i && RI(u)) l = ZI; else if ("" == u) {
                                if (e.host = "", i) return;
                                l = qI
                            } else {
                                if (s = vI(e, u)) return s;
                                if ("localhost" == e.host && (e.host = ""), i) return;
                                u = "", l = qI
                            }
                            continue
                        }
                        u += o;
                        break;
                    case qI:
                        if (BI(e)) {
                            if (l = ZI, "/" != o && "\\" != o) continue
                        } else if (i || "?" != o) if (i || "#" != o) {
                            if (o != MC && (l = ZI, "/" != o)) continue
                        } else e.fragment = "", l = eE; else e.query = "", l = $I;
                        break;
                    case ZI:
                        if (o == MC || "/" == o || "\\" == o && BI(e) || !i && ("?" == o || "#" == o)) {
                            if (".." === (c = (c = u).toLowerCase()) || "%2e." === c || ".%2e" === c || "%2e%2e" === c ? (kI(e), "/" == o || "\\" == o && BI(e) || e.path.push("")) : MI(u) ? "/" == o || "\\" == o && BI(e) || e.path.push("") : ("file" == e.scheme && !e.path.length && RI(u) && (e.host && (e.host = ""), u = u.charAt(0) + ":"), e.path.push(u)), u = "", "file" == e.scheme && (o == MC || "?" == o || "#" == o)) for (; e.path.length > 1 && "" === e.path[0];) e.path.shift();
                            "?" == o ? (e.query = "", l = $I) : "#" == o && (e.fragment = "", l = eE)
                        } else u += bI(o, EI);
                        break;
                    case _I:
                        "?" == o ? (e.query = "", l = $I) : "#" == o ? (e.fragment = "", l = eE) : o != MC && (e.path[0] += bI(o, CI));
                        break;
                    case $I:
                        i || "#" != o ? o != MC && ("'" == o && BI(e) ? e.query += "%27" : e.query += "#" == o ? "%23" : bI(o, CI)) : (e.fragment = "", l = eE);
                        break;
                    case eE:
                        o != MC && (e.fragment += bI(o, II))
                }
                d++
            }
        }, iE = function (e) {
            var t, i, n = zC(this, iE, "URL"), r = arguments.length > 1 ? arguments[1] : void 0, o = KC(e),
                a = $C(n, {type: "URL"});
            if (void 0 !== r) if (r instanceof iE) t = eI(r); else if (i = tE(t = {}, KC(r))) throw TypeError(i);
            if (i = tE(a, o, null, t)) throw TypeError(i);
            var s = a.searchParams = new ZC, c = _C(s);
            c.updateSearchParams(a.query), c.updateURL = function () {
                a.query = String(s) || null
            }, LC || (n.href = rE.call(n), n.origin = oE.call(n), n.protocol = aE.call(n), n.username = sE.call(n), n.password = cE.call(n), n.host = lE.call(n), n.hostname = dE.call(n), n.port = uE.call(n), n.pathname = hE.call(n), n.search = fE.call(n), n.searchParams = AE.call(n), n.hash = gE.call(n))
        }, nE = iE.prototype, rE = function () {
            var e = eI(this), t = e.scheme, i = e.username, n = e.password, r = e.host, o = e.port, a = e.path, s = e.query,
                c = e.fragment, l = t + ":";
            return null !== r ? (l += "//", PI(e) && (l += i + (n ? ":" + n : "") + "@"), l += mI(r), null !== o && (l += ":" + o)) : "file" == t && (l += "//"), l += e.cannotBeABaseURL ? a[0] : a.length ? "/" + a.join("/") : "", null !== s && (l += "?" + s), null !== c && (l += "#" + c), l
        }, oE = function () {
            var e = eI(this), t = e.scheme, i = e.port;
            if ("blob" == t) try {
                return new iE(t.path[0]).origin
            } catch (e) {
                return "null"
            }
            return "file" != t && BI(e) ? t + "://" + mI(e.host) + (null !== i ? ":" + i : "") : "null"
        }, aE = function () {
            return eI(this).scheme + ":"
        }, sE = function () {
            return eI(this).username
        }, cE = function () {
            return eI(this).password
        }, lE = function () {
            var e = eI(this), t = e.host, i = e.port;
            return null === t ? "" : null === i ? mI(t) : mI(t) + ":" + i
        }, dE = function () {
            var e = eI(this).host;
            return null === e ? "" : mI(e)
        }, uE = function () {
            var e = eI(this).port;
            return null === e ? "" : String(e)
        }, hE = function () {
            var e = eI(this), t = e.path;
            return e.cannotBeABaseURL ? t[0] : t.length ? "/" + t.join("/") : ""
        }, fE = function () {
            var e = eI(this).query;
            return e ? "?" + e : ""
        }, AE = function () {
            return eI(this).searchParams
        }, gE = function () {
            var e = eI(this).fragment;
            return e ? "#" + e : ""
        }, pE = function (e, t) {
            return {get: e, set: t, configurable: !0, enumerable: !0}
        };
    if (LC && XC(nE, {
        href: pE(rE, (function (e) {
            var t = eI(this), i = KC(e), n = tE(t, i);
            if (n) throw TypeError(n);
            _C(t.searchParams).updateSearchParams(t.query)
        })), origin: pE(oE), protocol: pE(aE, (function (e) {
            var t = eI(this);
            tE(t, KC(e) + ":", HI)
        })), username: pE(sE, (function (e) {
            var t = eI(this), i = NC(KC(e));
            if (!QI(t)) {
                t.username = "";
                for (var n = 0; n < i.length; n++) t.username += bI(i[n], SI)
            }
        })), password: pE(cE, (function (e) {
            var t = eI(this), i = NC(KC(e));
            if (!QI(t)) {
                t.password = "";
                for (var n = 0; n < i.length; n++) t.password += bI(i[n], SI)
            }
        })), host: pE(lE, (function (e) {
            var t = eI(this);
            t.cannotBeABaseURL || tE(t, KC(e), NI)
        })), hostname: pE(dE, (function (e) {
            var t = eI(this);
            t.cannotBeABaseURL || tE(t, KC(e), JI)
        })), port: pE(uE, (function (e) {
            var t = eI(this);
            QI(t) || ("" == (e = KC(e)) ? t.port = null : tE(t, e, KI))
        })), pathname: pE(hE, (function (e) {
            var t = eI(this);
            t.cannotBeABaseURL || (t.path = [], tE(t, KC(e), qI))
        })), search: pE(fE, (function (e) {
            var t = eI(this);
            "" == (e = KC(e)) ? t.query = null : ("?" == e.charAt(0) && (e = e.slice(1)), t.query = "", tE(t, e, $I)), _C(t.searchParams).updateSearchParams(t.query)
        })), searchParams: pE(AE), hash: pE(gE, (function (e) {
            var t = eI(this);
            "" != (e = KC(e)) ? ("#" == e.charAt(0) && (e = e.slice(1)), t.fragment = "", tE(t, e, eE)) : t.fragment = null
        }))
    }), GC(nE, "toJSON", (function () {
        return rE.call(this)
    }), {enumerable: !0}), GC(nE, "toString", (function () {
        return rE.call(this)
    }), {enumerable: !0}), qC) {
        var vE = qC.createObjectURL, wE = qC.revokeObjectURL;
        vE && GC(iE, "createObjectURL", (function (e) {
            return vE.apply(qC, arguments)
        })), wE && GC(iE, "revokeObjectURL", (function (e) {
            return wE.apply(qC, arguments)
        }))
    }
    VC(iE, "URL"), TC({global: !0, forced: !OC, sham: !LC}, {URL: iE}), Ei({
        target: "Number",
        stat: !0
    }, {MAX_SAFE_INTEGER: 9007199254740991});
    var yE = o, mE = i, CE = gi, IE = Ne.exports, EE = _, SE = A, bE = EA, xE = X, BE = ge, PE = r, QE = Zi, RE = Pt.f,
        DE = n.f, kE = Me.f, ME = Po.trim, HE = "Number", TE = mE.Number, LE = TE.prototype, OE = SE(QE(LE)) == HE,
        FE = function (e) {
            if (xE(e)) throw TypeError("Cannot convert a Symbol value to a number");
            var t, i, n, r, o, a, s, c, l = BE(e, "number");
            if ("string" == typeof l && l.length > 2) if (43 === (t = (l = ME(l)).charCodeAt(0)) || 45 === t) {
                if (88 === (i = l.charCodeAt(2)) || 120 === i) return NaN
            } else if (48 === t) {
                switch (l.charCodeAt(1)) {
                    case 66:
                    case 98:
                        n = 2, r = 49;
                        break;
                    case 79:
                    case 111:
                        n = 8, r = 55;
                        break;
                    default:
                        return +l
                }
                for (a = (o = l.slice(2)).length, s = 0; s < a; s++) if ((c = o.charCodeAt(s)) < 48 || c > r) return NaN;
                return parseInt(o, n)
            }
            return +l
        };
    if (CE(HE, !TE(" 0o1") || !TE("0b1") || TE("+0x1"))) {
        for (var XE, GE = function (e) {
            var t = arguments.length < 1 ? 0 : e, i = this;
            return i instanceof GE && (OE ? PE((function () {
                LE.valueOf.call(i)
            })) : SE(i) != HE) ? bE(new TE(FE(t)), i, GE) : FE(t)
        }, zE = yE ? RE(TE) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","), jE = 0; zE.length > jE; jE++) EE(TE, XE = zE[jE]) && !EE(GE, XE) && kE(GE, XE, DE(TE, XE));
        GE.prototype = LE, LE.constructor = GE, IE(mE, HE, GE)
    }
    var UE = Ei, NE = n.f, JE = Ht, KE = bi, VE = ig, YE = w, WE = rg, qE = "".endsWith, ZE = Math.min,
        _E = WE("endsWith");
    UE({
        target: "String", proto: !0, forced: !(!_E && function () {
            var e = NE(String.prototype, "endsWith");
            return e && !e.writable
        }() || _E)
    }, {
        endsWith: function (e) {
            var t = KE(YE(this));
            VE(e);
            var i = arguments.length > 1 ? arguments[1] : void 0, n = JE(t.length), r = void 0 === i ? n : ZE(JE(i), n),
                o = KE(e);
            return qE ? qE.call(t, o, r) : t.slice(r - o.length, r) === o
        }
    });
    var $E = Ss.filter;
    Ei({target: "Array", proto: !0, forced: !$n("filter")}, {
        filter: function (e) {
            return $E(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    })
}(), function () {
    function e(e, t) {
        return (t || "") + " (SystemJS --https--git.io/JvFET#" + e + ")"
    }

    function t(e, t) {
        if (-1 !== e.indexOf("\\") && (e = e.replace(/\\/g, "/")), "/" === e[0] && "/" === e[1]) return t.slice(0, t.indexOf(":") + 1) + e;
        if ("." === e[0] && ("/" === e[1] || "." === e[1] && ("/" === e[2] || 2 === e.length && (e += "/")) || 1 === e.length && (e += "/")) || "/" === e[0]) {
            var i, n = t.slice(0, t.indexOf(":") + 1);
            if (i = "/" === t[n.length + 1] ? "file:" !== n ? (i = t.slice(n.length + 2)).slice(i.indexOf("/") + 1) : t.slice(8) : t.slice(n.length + ("/" === t[n.length])), "/" === e[0]) return t.slice(0, t.length - i.length - 1) + e;
            for (var r = i.slice(0, i.lastIndexOf("/") + 1) + e, o = [], a = -1, s = 0; r.length > s; s++) -1 !== a ? "/" === r[s] && (o.push(r.slice(a, s + 1)), a = -1) : "." === r[s] ? "." !== r[s + 1] || "/" !== r[s + 2] && s + 2 !== r.length ? "/" === r[s + 1] || s + 1 === r.length ? s += 1 : a = s : (o.pop(), s += 2) : a = s;
            return -1 !== a && o.push(r.slice(a)), t.slice(0, t.length - i.length) + o.join("")
        }
    }

    function i(e, i) {
        return t(e, i) || (-1 !== e.indexOf(":") ? e : t("./" + e, i))
    }

    function n(e, i, n, r, o) {
        for (var c in e) {
            var l = t(c, n) || c, d = e[c];
            if ("string" == typeof d) {
                var u = s(r, t(d, n) || d, o);
                u ? i[l] = u : a("W1", c, d)
            }
        }
    }

    function r(e, t) {
        if (t[e]) return e;
        var i = e.length;
        do {
            var n = e.slice(0, i + 1);
            if (n in t) return n
        } while (-1 !== (i = e.lastIndexOf("/", i - 1)))
    }

    function o(e, t) {
        var i = r(e, t);
        if (i) {
            var n = t[i];
            if (null === n) return;
            if (i.length >= e.length || "/" === n[n.length - 1]) return n + e.slice(i.length);
            a("W2", i, n)
        }
    }

    function a(t, i, n) {
        console.warn(e(t, [n, i].join(", ")))
    }

    function s(e, t, i) {
        for (var n = e.scopes, a = i && r(i, n); a;) {
            var s = o(t, n[a]);
            if (s) return s;
            a = r(a.slice(0, a.lastIndexOf("/")), n)
        }
        return o(t, e.imports) || -1 !== t.indexOf(":") && t
    }

    function c() {
        this[m] = {}
    }

    function l(t, i, n) {
        var r = t[m][i];
        if (r) return r;
        var o = [], a = Object.create(null);
        y && Object.defineProperty(a, y, {value: "Module"});
        var s = Promise.resolve().then((function () {
            return t.instantiate(i, n)
        })).then((function (n) {
            if (!n) throw Error(e(2, i));
            var s = n[1]((function (e, t) {
                r.h = !0;
                var i = !1;
                if ("string" == typeof e) e in a && a[e] === t || (a[e] = t, i = !0); else {
                    for (var n in e) t = e[n], n in a && a[n] === t || (a[n] = t, i = !0);
                    e.__esModule && (a.__esModule = e.__esModule)
                }
                if (i) for (var s = 0; o.length > s; s++) {
                    var c = o[s];
                    c && c(a)
                }
                return t
            }), 2 === n[1].length ? {
                import: function (e) {
                    return t.import(e, i)
                }, meta: t.createContext(i)
            } : void 0);
            return r.e = s.execute || function () {
            }, [n[0], s.setters || []]
        }), (function (e) {
            throw r.e = null, r.er = e, e
        })), c = s.then((function (e) {
            return Promise.all(e[0].map((function (n, r) {
                var o = e[1][r];
                return Promise.resolve(t.resolve(n, i)).then((function (e) {
                    var n = l(t, e, i);
                    return Promise.resolve(n.I).then((function () {
                        return o && (n.i.push(o), !n.h && n.I || o(n.n)), n
                    }))
                }))
            }))).then((function (e) {
                r.d = e
            }))
        }));
        return r = t[m][i] = {
            id: i,
            i: o,
            n: a,
            I: s,
            L: c,
            h: !1,
            d: void 0,
            e: void 0,
            er: void 0,
            E: void 0,
            C: void 0,
            p: void 0
        }
    }

    function d() {
        [].forEach.call(document.querySelectorAll("script"), (function (t) {
            if (!t.sp) if ("systemjs-module" === t.type) {
                if (t.sp = !0, !t.src) return;
                System.import("import:" === t.src.slice(0, 7) ? t.src.slice(7) : i(t.src, u)).catch((function (e) {
                    if (e.message.indexOf("--https--git.io/JvFET#3") > -1) {
                        var i = document.createEvent("Event");
                        i.initEvent("error", !1, !1), t.dispatchEvent(i)
                    }
                    return Promise.reject(e)
                }))
            } else if ("systemjs-importmap" === t.type) {
                t.sp = !0;
                var r = t.src ? fetch(t.src, {integrity: t.integrity}).then((function (e) {
                    if (!e.ok) throw Error(e.status);
                    return e.text()
                })).catch((function (i) {
                    return i.message = e("W4", t.src) + "\n" + i.message, console.warn(i), "{}"
                })) : t.innerHTML;
                b = b.then((function () {
                    return r
                })).then((function (r) {
                    !function (t, r, o) {
                        var a = {};
                        try {
                            a = JSON.parse(r)
                        } catch (s) {
                            console.warn(Error(e("W5")))
                        }
                        !function (e, t, r) {
                            var o;
                            for (o in e.imports && n(e.imports, r.imports, t, r, null), e.scopes || {}) {
                                var a = i(o, t);
                                n(e.scopes[o], r.scopes[a] || (r.scopes[a] = {}), t, r, a)
                            }
                            for (o in e.depcache || {}) r.depcache[i(o, t)] = e.depcache[o];
                            for (o in e.integrity || {}) r.integrity[i(o, t)] = e.integrity[o]
                        }(a, o, t)
                    }(x, r, t.src || u)
                }))
            }
        }))
    }

    var u, h = "undefined" != typeof Symbol, f = "undefined" != typeof self, A = "undefined" != typeof document,
        g = f ? self : global;
    if (A) {
        var p = document.querySelector("base[href]");
        p && (u = p.href)
    }
    if (!u && "undefined" != typeof location) {
        var v = (u = location.href.split("#")[0].split("?")[0]).lastIndexOf("/");
        -1 !== v && (u = u.slice(0, v + 1))
    }
    var w, y = h && Symbol.toStringTag, m = h ? Symbol() : "@", C = c.prototype;
    C.import = function (e, t) {
        var i = this;
        return Promise.resolve(i.prepareImport()).then((function () {
            return i.resolve(e, t)
        })).then((function (e) {
            var t = l(i, e);
            return t.C || function (e, t) {
                return t.C = function e(t, i, n, r) {
                    if (!r[i.id]) return r[i.id] = !0, Promise.resolve(i.L).then((function () {
                        return i.p && null !== i.p.e || (i.p = n), Promise.all(i.d.map((function (i) {
                            return e(t, i, n, r)
                        })))
                    })).catch((function (e) {
                        if (i.er) throw e;
                        throw i.e = null, e
                    }))
                }(e, t, t, {}).then((function () {
                    return function e(t, i, n) {
                        function r() {
                            try {
                                var e = i.e.call(I);
                                if (e) return e = e.then((function () {
                                    i.C = i.n, i.E = null
                                }), (function (e) {
                                    throw i.er = e, i.E = null, e
                                })), i.E = e;
                                i.C = i.n, i.L = i.I = void 0
                            } catch (t) {
                                throw i.er = t, t
                            } finally {
                                i.e = null
                            }
                        }

                        if (!n[i.id]) {
                            if (n[i.id] = !0, !i.e) {
                                if (i.er) throw i.er;
                                return i.E ? i.E : void 0
                            }
                            var o;
                            return i.d.forEach((function (r) {
                                try {
                                    var a = e(t, r, n);
                                    a && (o = o || []).push(a)
                                } catch (s) {
                                    throw i.e = null, i.er = s, s
                                }
                            })), o ? Promise.all(o).then(r) : r()
                        }
                    }(e, t, {})
                })).then((function () {
                    return t.n
                }))
            }(i, t)
        }))
    }, C.createContext = function (e) {
        var t = this;
        return {
            url: e, resolve: function (i, n) {
                return Promise.resolve(t.resolve(i, n || e))
            }
        }
    }, C.register = function (e, t) {
        w = [e, t]
    }, C.getRegister = function () {
        var e = w;
        return w = void 0, e
    };
    var I = Object.freeze(Object.create(null));
    g.System = new c;
    var E, S, b = Promise.resolve(), x = {imports: {}, scopes: {}, depcache: {}, integrity: {}}, B = A;
    if (C.prepareImport = function (e) {
        return (B || e) && (d(), B = !1), b
    }, A && (d(), window.addEventListener("DOMContentLoaded", d)), A) {
        window.addEventListener("error", (function (e) {
            Q = e.filename, R = e.error
        }));
        var P = location.origin
    }
    C.createScript = function (e) {
        var t = document.createElement("script");
        t.async = !0, e.indexOf(P + "/") && (t.crossOrigin = "anonymous");
        var i = x.integrity[e];
        return i && (t.integrity = i), t.src = e, t
    };
    var Q, R, D = {}, k = C.register;
    C.register = function (e, t) {
        if (A && "loading" === document.readyState && "string" != typeof e) {
            var i = document.querySelectorAll("script[src]"), n = i[i.length - 1];
            if (n) {
                E = e;
                var r = this;
                S = setTimeout((function () {
                    D[n.src] = [e, t], r.import(n.src)
                }))
            }
        } else E = void 0;
        return k.call(this, e, t)
    }, C.instantiate = function (t, i) {
        var n = D[t];
        if (n) return delete D[t], n;
        var r = this;
        return new Promise((function (n, o) {
            var a = C.createScript(t);
            a.addEventListener("error", (function () {
                o(Error(e(3, [t, i].join(", "))))
            })), a.addEventListener("load", (function () {
                if (document.head.removeChild(a), Q === t) o(R); else {
                    var e = r.getRegister();
                    e && e[0] === E && clearTimeout(S), n(e)
                }
            })), document.head.appendChild(a)
        }))
    }, C.shouldFetch = function () {
        return !1
    }, "undefined" != typeof fetch && (C.fetch = fetch);
    var M = C.instantiate, H = /^(text|application)\/(x-)?javascript(;|$)/;
    C.instantiate = function (t, i) {
        var n = this;
        return this.shouldFetch(t) ? this.fetch(t, {
            credentials: "same-origin",
            integrity: x.integrity[t]
        }).then((function (r) {
            if (!r.ok) throw Error(e(7, [r.status, r.statusText, t, i].join(", ")));
            var o = r.headers.get("content-type");
            if (!o || !H.test(o)) throw Error(e(4, o));
            return r.text().then((function (e) {
                return 0 > e.indexOf("//# sourceURL=") && (e += "\n//# sourceURL=" + t), (0, eval)(e), n.getRegister()
            }))
        })) : M.apply(this, arguments)
    }, C.resolve = function (i, n) {
        return s(x, t(i, n = n || u) || i, n) || function (t, i) {
            throw Error(e(8, [t, i].join(", ")))
        }(i, n)
    };
    var T = C.instantiate;
    C.instantiate = function (e, t) {
        var i = x.depcache[e];
        if (i) for (var n = 0; i.length > n; n++) l(this, this.resolve(i[n], e), e);
        return T.call(this, e, t)
    }, f && "function" == typeof importScripts && (C.instantiate = function (e) {
        var t = this;
        return Promise.resolve().then((function () {
            return importScripts(e), t.getRegister()
        }))
    })
}(), System.register([], (function (e, t) {
    return {
        execute: function () {
            function e(e, t) {
                return t && "object" == typeof t || (t = {}), t.eventType && t.eventType in eventTypes || (t.eventType = eventTypes.cached.name, eventTypes.forced.events.indexOf(e) > -1 ? t.eventType = eventTypes.forced.name : eventTypes.transient.events.indexOf(e) > -1 && (t.eventType = eventTypes.transient.name)), t.freezeGroup = t.freezeGroup || window._defFrzGrp, t
            }

            function n(t, i, n) {
                this.emit("eventAttached", {eventName: t}), this.__listeners = this.__listeners || {}, this.__listeners[t] = this.__listeners[t] || [];
                var r = {callback: i, frzGrp: (n = e(t, n)).freezeGroup, eventType: n.eventType, callFrom: n.callFrom};
                return this.__listeners[t].push(r), this
            }

            window.eventTypes = {
                cached: {name: "cached", events: void 0},
                forced: {
                    name: "forced",
                    events: ["resize", "late-resize", "login", "login-error", "save", "logout", "FBInstantStart", "FBInstantComplete", "mutemusic", "mutesound", "dataloaded", "datasaved", "update-image", "addedToStage", "removedFromStage"]
                },
                transient: {
                    name: "transient",
                    events: ["down", "rightdown", "up", "rightup", "move", "tick", "animate", "render"]
                }
            }, Object.defineProperty(Object.prototype, "on", {
                enumerable: !1, get: function () {
                    return void 0 === this.___on ? n : this.___on
                }, set: function (e) {
                    this.___on = e
                }
            }), Object.defineProperty(Object.prototype, "emit", {
                enumerable: !1, value: function (e, t) {
                    var i = (this.__listeners || {})[e];
                    if (i && i.length) {
                        for (var n = [], r = 0; r < i.length; r++) n.push(i[r]);
                        for (r = 0; r < n.length; r++) {
                            var o = n[r].callFrom || this, a = {
                                name: e,
                                cbData: t,
                                frzGrp: n[r].frzGrp,
                                type: n[r].eventType,
                                callback: n[r].callback,
                                callFrom: o,
                                emitter: this
                            };
                            try {
                                void 0 !== this._freezeEmit && this._freezeEmit(a) || n[r].callback.call(o, t)
                            } catch (s) {
                                window.onerror && window.onerror(s.toString(), "Event: " + e, s.line, s.column, ""), console.error(s.toString(), "Event: " + e, s.line, s.column, "Failure in", n[r])
                            }
                        }
                    }
                    return this
                }, writable: !0
            }), Object.defineProperty(Object.prototype, "off", {
                enumerable: !1, value: function (t, i, n) {
                    n = e(t, n);
                    for (var r = (this.__listeners || {})[t] || [], o = 0; o < r.length; o++) (r[o].callback === i && r[o].frzGrp === n.freezeGroup && r[o].callFrom == n.callFrom || void 0 === i) && r.splice(o--, 1);
                    return r.length || delete (this.__listeners || {})[t], this.emit("eventRemoved", {eventName: t}), this
                }, writable: !0
            }), Object.defineProperty(Object.prototype, "once", {
                enumerable: !1, value: function (t, i, n) {
                    return n = e(t, n), this.on(t, (function e(r) {
                        this.off(t, e, n), i.call(this, r)
                    }), n), this
                }, writable: !0
            }), Object.defineProperty(Function.prototype, "expand", {
                enumerable: !1, value: function (e) {
                    return e.prototype = Object.create(this.prototype), e.prototype.constructor = e, e
                }
            }), "function" != typeof Math.seed && (Math.seed = function (e) {
                var t = e || 49734321;
                return function () {
                    return (268435455 & (t = 4294967295 & (3042594569 ^ (t = (t = 4294967295 & ((t = (t = 4294967295 & (3345072700 ^ (t = t + 2127912214 + (t << 12) & 4294967295) ^ t >>> 19)) + 374761393 + (t << 5) & 4294967295) + 3550635116 ^ t << 9)) + 4251993797 + (t << 3) & 4294967295) ^ t >>> 16))) / 268435456
                }
            }), window.__resolvePath = function (e) {
                return "//" != e.substring(0, 2) && "http" != e.substring(0, 4) && ("/" == e[0] && (e = e.slice(1)), e = vpath + e), e
            }, window.ATLUtil = function (e) {
                var t = function (e, t) {
                    this.root = {x: i, y: i, w: e - 2 * i, h: t - 2 * i}
                }, i = 2;
                t.prototype = {
                    fit: function (e, t) {
                        return this.insert(this.root, e, t)
                    }, insert: function (e, t, n) {
                        function r(e) {
                            return t <= e.w && n <= e.h
                        }

                        function o(e, t, n, r) {
                            e.right = {x: e.x + i + t, y: e.y + 0, w: e.w - i - t}, e.down = {
                                x: e.x + 0,
                                y: e.y + i + n,
                                h: e.h - i - n
                            }, e.used = {w: t, h: n};
                            var o = t > n;
                            return (void 0 !== (r = r || {}).strat ? "down" === r.strat : o) ? (e.strat = "down", e.down.w = 0 + t, e.right.h = e.h - 0 + 0) : (e.strat = "side", e.down.w = e.w - 0 + 0, e.right.h = 0 + n), e
                        }

                        if (!e.used) return r(e) && o(e, t, n);
                        return function i(a) {
                            var s, c, l = !e.right.used && r(e.right), d = !e.down.used && r(e.down);
                            return l && d ? o((s = e.right, c = e.down, s.h * s.w < c.h * c.w ? s : c), t, n) : l ? o(e.right, t, n) : d ? o(e.down, t, n) : e.down.used || e.right.used || a ? null : (o(e, e.used.w, e.used.h, {strat: "down" === e.strat ? "side" : "down"}), i(e))
                        }() || this.insert(e.down, t, n) || this.insert(e.right, t, n)
                    }
                };
                var n = [];

                function r() {
                    var e = n.pop();
                    return e || document.createElement("canvas")
                }

                function o(e) {
                    e.getContext("2d").setTransform(1, 0, 0, 1, 0, 0), e.width = e.height = 1, n.push(e)
                }

                var a = [], s = {w: 2048, h: 2048};
                try {
                    var c = navigator.userAgent.toLowerCase().match(/android\s([0-9\.]*)/),
                        l = parseFloat(c ? c[1] : 0);
                    l > 0 && l < 5 && (s = {w: 1024, h: 1024})
                } catch (v) {
                }

                function d(e, t) {
                    return {x: 0, y: 0, canvas: r(), width: e, height: t}
                }

                function u(e) {
                    for (var t = {}, i = 0; i < e.length; i++) t[e[i]] = i;
                    return t
                }

                var h = u("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/!#$&*-,.:;@()<=>?[]^`{|}"),
                    f = u("()<=>?[]^`{|}");

                function A(e, t, i) {
                    this.path = e, this.actions = t, this.coords = i, this.coordOffset = 0, this.assetWidth = this.getCoord(), this.assetHeight = this.getCoord()
                }

                function g(e, t) {
                    this.path = e;
                    var i = t.data, n = t.mimetype;
                    this.imageData = t, this.dataurl = "data:image/" + n + ";base64," + btoa(i), this.assetWidth = t.width, this.assetHeight = t.height
                }

                A.prototype.getCoord = function () {
                    var e, t, i = this.coords, n = i[this.coordOffset++];
                    switch (n) {
                        case"_":
                            e = 0;
                            break;
                        case"~":
                            e = 1;
                            break;
                        case"%":
                            e = 149932;
                            break;
                        case"'":
                            e = -149932;
                            break;
                        case"@":
                            e = (e = h[i[this.coordOffset++]] + 74 * h[i[this.coordOffset++]] + 5476 * h[i[this.coordOffset++]] + 405224 * h[i[this.coordOffset++]]) / 100 - 149932;
                            break;
                        default:
                            e = void 0 !== (t = f[n]) ? 88 * t + h[i[this.coordOffset++]] : (e = h[n] + 74 * h[i[this.coordOffset++]] + 5476 * h[i[this.coordOffset++]]) / 100 - 2026
                    }
                    return e
                }, A.prototype.getColor = function () {
                    return this.getCoord() ? "rgb(" + this.getCoord() + "," + this.getCoord() + "," + this.getCoord() + ")" : "rgba(" + this.getCoord() + "," + this.getCoord() + "," + this.getCoord() + "," + this.getCoord() + ")"
                }, A.prototype.draw = function (e, t) {
                    var i = t.scale || 1, n = t.offset || {x: 0, y: 0};
                    t.autoSizeCanvas && !e.packer && (e.width = Math.ceil(this.assetWidth * i), e.height = Math.ceil(this.assetHeight * i)), e.__atlasBaseTexture && e.__atlasBaseTexture.dirty();
                    var a = e.getContext("2d");
                    n && (a.save(), a.translate(n.x, n.y), a.beginPath(), a.rect(0, 0, n.width, n.height), a.clip()), a.scale(i, i);
                    for (var s, c = [e], l = 0; l < this.actions.length; l++) switch (this.actions[l]) {
                        case"4":
                            var d = r();
                            d.width = this.getCoord(), d.height = this.getCoord(), a = d.getContext("2d"), c.push(d);
                            break;
                        case"b":
                            var u = a.createPattern(a.canvas, "no-repeat");
                            o(c.pop()), (a = c[c.length - 1].getContext("2d")).fillStyle = u;
                            break;
                        case"t":
                            s = a.createLinearGradient(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord());
                            break;
                        case"D":
                            s = a.createRadialGradient(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord());
                            break;
                        case"8":
                            s.addColorStop(this.getCoord(), this.getColor());
                            break;
                        case"F":
                            a.fillStyle = s;
                            break;
                        case"f":
                            a.save();
                            break;
                        case"/":
                            a.bezierCurveTo(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord());
                            break;
                        case"p":
                            a.strokeStyle = this.getColor();
                            break;
                        case"w":
                            a.lineCap = "butt";
                            break;
                        case"y":
                            a.lineJoin = "miter";
                            break;
                        case"9":
                            a.miterLimit = this.getCoord();
                            break;
                        case"6":
                            a.fillStyle = this.getColor();
                            break;
                        case"n":
                            a.beginPath();
                            break;
                        case"q":
                            a.closePath();
                            break;
                        case"o":
                            a.fill();
                            break;
                        case"P":
                            a.stroke();
                            break;
                        case"r":
                            a.restore();
                            break;
                        case"2":
                            a.arc(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), 1 === this.getCoord());
                            break;
                        case"m":
                            a.moveTo(this.getCoord(), this.getCoord());
                            break;
                        case"l":
                            a.lineTo(this.getCoord(), this.getCoord());
                            break;
                        case"5":
                            a.quadraticCurveTo(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord());
                            break;
                        case"C":
                            a.clip();
                            break;
                        case"E":
                            a.lineWidth = this.getCoord();
                            break;
                        case"A":
                            a.transform(this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord(), this.getCoord());
                            break;
                        case"u":
                            a.translate(this.getCoord(), this.getCoord());
                            break;
                        case"V":
                            a.scale(this.getCoord(), this.getCoord());
                            break;
                        case"0":
                            a.rotate(this.getCoord());
                            break;
                        case"K":
                            a.globalAlpha = this.getCoord();
                            break;
                        case"G":
                            a.strokeStyle = s;
                            break;
                        default:
                            console.error("unhandled", this.actions[l])
                    }
                    return this.coordOffset = 0, this.getCoord(), this.getCoord(), n && a.restore(), e
                }, g.prototype.draw = function (e, t) {
                    var i = this.path;

                    function n(n) {
                        e.__outstandingDraws--, e.__atlasBaseTexture && !e.__outstandingDraws && e.__atlasBaseTexture.dirty();
                        var r = e.getContext("2d"), o = t.offset || {x: 0, y: 0};
                        r.drawImage(n, o.x, o.y, o.width, o.height), e[i].drawPending = !1
                    }

                    if (e.__outstandingDraws++, e[i] = {drawPending: !0}, this.img) n(this.img); else {
                        var r = new Image, o = this;
                        r.onerror = function (t) {
                            e.__outstandingDraws--, console.error("Loading this image failed", t, o)
                        };
                        var a = e.packer;
                        r.onload = function () {
                            o.img = r, e.packer == a && n(r)
                        }, r.src = this.dataurl
                    }
                    return e
                };
                var p = {
                    cache: {}, load: function (e, t) {
                        if (p.cache[e]) return p.cache[e];
                        var i = embeddedAssets[e] || t.jsgData, n = i ? new A(e, i[0], i[1]) : new g(e, t);
                        return p.cache[e] = n, n
                    }
                };
                return e.getNewCanvasObject = r, e.releaseCanvas = o, e._textureAtlases = a, e.ATLAS_SIZE = s, e.getDedicatedFit = d, e.getAtlasFit = function (e, n) {
                    if (e > s.w - 2 * i || n > s.h - 2 * i) return console.warn("Falling back to getDedicatedFit  w:" + e + " h:" + n), d(e, n);
                    for (var r = 0; r < a.length; ++r) {
                        var o = a[r], c = o.packer.fit(e, n);
                        if (c) return {canvas: o, x: c.x, y: c.y, width: e, height: n}
                    }
                    var l;
                    if ((l = document.createElement("canvas")).width = s.w, l.height = s.h, l.packer = new t(l.width, l.height), l.id = "atlas_" + a.length, l.reset = function () {
                        var e = l.getContext("2d");
                        e.clearRect(0, 0, l.width, l.height), e.setTransform(1, 0, 0, 1, 0, 0), l.packer = new t(l.width, l.height), l.__outstandingDraws = 0
                    }, l.reset(), l._atlasIndex = a.length, a.push(l), !(o = l).packer.fit(e, n)) throw new Error("Report this bug! w:" + e + " h:" + n);
                    return {canvas: o, x: 0, y: 0, width: e, height: n}
                }, e.ATLImageRenderer = p, window.getNewCanvasObject = r, window.releaseCanvas = o, e
            }({});
            var r = function (e, t) {
                return e()
            };

            function o(e, t, i, n, r, o, a) {
                try {
                    var s = e[o](a), c = s.value
                } catch (l) {
                    return void i(l)
                }
                s.done ? t(c) : Promise.resolve(c).then(n, r)
            }

            function a(e) {
                return function () {
                    var t = this, i = arguments;
                    return new Promise((function (n, r) {
                        var a = e.apply(t, i);

                        function s(e) {
                            o(a, n, r, s, c, "next", e)
                        }

                        function c(e) {
                            o(a, n, r, s, c, "throw", e)
                        }

                        s(void 0)
                    }))
                }
            }

            function s(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
                return n
            }

            function c(e, t) {
                var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (i) return (i = i.call(e)).next.bind(i);
                if (Array.isArray(e) || (i = function (e, t) {
                    if (e) {
                        if ("string" == typeof e) return s(e, t);
                        var i = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === i && e.constructor && (i = e.constructor.name), "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? s(e, t) : void 0
                    }
                }(e)) || t && e && "number" == typeof e.length) {
                    i && (e = i);
                    var n = 0;
                    return function () {
                        return n >= e.length ? {done: !0} : {done: !1, value: e[n++]}
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            !function (e) {
                var i = {}, n = window.Host || {};

                function o(e, t, i, n, r) {
                    var o = new XMLHttpRequest;
                    o.crossOrigin = "anonymous", o.overrideMimeType && o.overrideMimeType("application/json");
                    try {
                        o.open(e, t, !0), "POST" == e && o.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), o.onreadystatechange = function () {
                            if (4 == o.readyState) if ("200" == o.status) {
                                var e = {};
                                try {
                                    e = JSON.parse(o.responseText)
                                } catch (i) {
                                    return window.onerror && window.onerror("Failed to parse JSON return data " + t + "> " + i.message, i.sourceURL, i.line), void r()
                                }
                                n(e)
                            } else o = o.onreadystatechange = null, r && r()
                        }, o.send(i)
                    } catch (a) {
                        window.onerror && window.onerror("Failed to execute JSON load code " + t + "> " + a.message, a.sourceURL, a.line), r()
                    }
                }

                window.Host = n, n.bootstrapper = {loadPromises: []}, n.bootstrapper.hasPreInitializationPromise = !1, n.bootstrapper.start = function () {
                    console.log("Host.bootstrapper.start is no-op, not yet setup!")
                }, n.bootstrapper.preInitializationReady = function () {
                    console.error("Host.bootstrapper.preInitializationReady no-op, not yet setup!")
                }, n.bootstrapper.preInitializationPromise = new Promise((function (e, t) {
                    n.bootstrapper.preInitializationReady = e
                })), n.GameRemoteDataKeys = [], n.bootstrapper.load = function (e, t) {
                    var i, r = new Promise((function (t, i) {
                        try {
                            var n = e(t, i);
                            void 0 !== n && t(n)
                        } catch (r) {
                            i(r)
                        }
                    }));
                    return t ? (n.bootstrapper.loadPromises.push(r.then((function (e) {
                        i = e
                    }))), function () {
                        return i
                    }) : r
                }, n.bootstrapper.mnemonicMap = {}, n.call = function (e, t, r) {
                    if (null != r) {
                        var o = "cb" + Math.round(99999 * Math.random()) + (new Date).getTime();
                        i[o] = r, t._callback = o
                    }
                    t._method = e, n.sendToHost("json1:" + JSON.stringify(t))
                }, n.callResult = function (e) {
                    var t = e.indexOf(":");
                    if (t > 0) {
                        var n = e.substring(0, t), r = e.substring(t + 1);
                        switch (n) {
                            case"json1":
                                var o = JSON.parse(r), a = i[o._callback];
                                a && (delete o._callback, a(o))
                        }
                    }
                }, n.Application = {}, n.Application.SetStatusbarColor = function (e) {
                }, n.onPauseEvent = function () {
                }, n.onResumeEvent = function () {
                }, n.onMarginsChanged = function (e) {
                    n.Log("Margins changed! [t:" + e.top + ", b:" + e.bottom + ", l:" + e.left + ", r:" + e.right + "]"), XS.styles.margins.top = e.top, XS.styles.margins.bottom = e.bottom, XS.styles.margins.left = e.left, XS.styles.margins.right = e.right
                }, n.pauseResizing = function () {
                    XS.skipResizing = !0
                }, n.resumeResizing = function () {
                    XS.skipResizing = !1, window.dispatchEvent(new Event("resize"))
                }, n.onSafeToExitEvent = function () {
                    var e = {type: "ShowModal"};
                    return e.titleTxt = n.Localize.Translate("Progress might be lost if you exit {game_name} now!", {game_name: Config.shortTitle}).toString(), e.msgTxt = n.Localize.Translate("Are you sure you want to close the app?").toString(), e.confirmTxt = n.Localize.Translate("Confirm").toString(), e.confirmCb = function () {
                    }, e.cancelTxt = n.Localize.Translate("Cancel").toString(), e.cancelCb = function () {
                        XS.unfreeze()
                    }, XS.freeze(), e
                }, n.makeGameShareURL = function () {
                    return encodeURI("--https--" + Config.domain + "/alc/")
                }, n.Preferences = {}, n.Preferences.cache = {}, n.Preferences.QuickBool = function (e) {
                    return {
                        get: function () {
                            return n.Preferences.cache[e] || !1
                        }, set: function (t) {
                            n.Preferences.SetBool(e, t)
                        }, remove: function () {
                            n.Preferences.Remove(e)
                        }
                    }
                }, n.Preferences.QuickInt = function (e) {
                    return {
                        get: function () {
                            return parseInt(n.Preferences.cache[e]) || 0
                        }, set: function (t) {
                            n.Preferences.SetInt(e, t)
                        }, remove: function () {
                            n.Preferences.Remove(e)
                        }
                    }
                }, n.Preferences.QuickFloat = function (e) {
                    return {
                        get: function () {
                            return parseFloat(n.Preferences.cache[e]) || 0
                        }, set: function (t) {
                            n.Preferences.SetFloat(e, t)
                        }, remove: function () {
                            n.Preferences.Remove(e)
                        }
                    }
                }, n.Preferences.QuickString = function (e) {
                    return {
                        get: function () {
                            return n.Preferences.cache[e] || ""
                        }, set: function (t) {
                            n.Preferences.SetString(e, t)
                        }, remove: function () {
                            n.Preferences.Remove(e)
                        }
                    }
                }, n.Tools = {}, n.Tools.LoadJSON = function (e, t, i) {
                    o("GET", e, null, t, i)
                }, n.Tools.SendJSON = function (e, t, i, n) {
                    o("POST", e, t, i, n)
                }, n.Tools.PostJSON = function (e, t, i) {
                    var r = new XMLHttpRequest;
                    r.crossOrigin = "anonymous";
                    try {
                        r.onreadystatechange = function () {
                            if (4 == r.readyState) if ("200" == r.status) i && i(!0, r.responseText); else {
                                n.Log("PostJSON Error Status: Response: " + r.responseText);
                                var e = r.responseText;
                                r = r.onreadystatechange = null, i && i(!1, e)
                            }
                        }, r.open("POST", e, !0), r.setRequestHeader("Content-type", "application/json;charset=UTF-8"), r.send("string" == typeof t ? t : JSON.stringify(t))
                    } catch (o) {
                        n.Log("PostJSON Error:", o), i && i(!1, o)
                    }
                },
                    n.Web = {},
                    n.Web.GetQueryString = window.__XYYX.getQueryString,
                    n.Localize = n.Localize || {}, n.Localize.Translations = {
                    en: {},
                    "en-US": {}
                },
                    n.Localize._currentLanguage = "en-US", n.Localize.LocalizedString = function (e, t) {
                    0 === e ? e = "0" : e ? e instanceof n.Localize.LocalizedString && (t = e._replacements || t, e = e._originalTemplate) : e = "", this._originalTemplate = e, this._lang = void 0, this._cached = void 0, this._replacements = t
                }, n.Localize.Translate = function (e, t) {
                    return new n.Localize.LocalizedString(e, t)
                }, n.Localize.LocalizedString.prototype.toString = function () {
                    if (!this._cached || this._lang !== n.Localize._currentLanguage) {
                        this._lang = n.Localize._currentLanguage;
                        var e = n.Localize.Translations[this._lang], t = e && e[this._originalTemplate],
                            i = t && t.translation || this._originalTemplate;
                        for (var r in this._replacements) i = i.split("{" + r + "}").join(this._replacements[r]);
                        this._cached = i
                    }
                    return this._cached
                }, Object.defineProperty(n.Localize.LocalizedString.prototype, "translated", {
                    get: function () {
                        return this.toString()
                    }
                }), n.Localize.UpdateChildren = function (e) {
                    for (var t in e.children) {
                        var i = e.children[t];
                        i instanceof Text2 ? i.onLanguageChange() : i.children && n.Localize.UpdateChildren(i)
                    }
                }, n.Localize.Load = function (e, i) {
                    function o(e) {
                        return n.Localize._currentLanguage = e, n.Localize.UpdateChildren(XS.stageContainer), XS.emit("language-changed", {language: e}), XS.emit("translate"), i && i(e, !0), !0
                    }

                    return n.Localize.Translations[e] ? Promise.resolve(o(e)) : function (e, i, n) {
                        return function (e) {
                            switch (e) {
                                case"../../../game-spacebreaker/game/languages/original.json":
                                    return r((function () {
                                        return t.import("./original.d0c5e039.js")
                                    }));
                                case"../../../game-spacebreaker/game/languages/ru.json":
                                    return r((function () {
                                        return t.import("./ru.87ff7de7.js")
                                    }));
                                default:
                                    return Promise.reject(new Error("Unknown variable dynamic import: " + e))
                            }
                        }("../../../game-spacebreaker/game/languages/" + e + ".json").then((function (e) {
                            return i(e.default), !0
                        })).catch(n)
                    }(e, (function (t) {
                        n.Localize.Translations[e] = function (e) {
                            for (var t in e) {
                                var i = t.replace(/\\n/g, "\n");
                                if (i != t) {
                                    var n = e[t];
                                    delete e[t], n.translation ? (n.translation = n.translation.replace(/\\n/g, "\n"), e[i] = n) : (console.warn('Missing translation: "' + t + '"'), e[i] = t)
                                }
                            }
                            return e
                        }(t), console.log("Loaded", e, "dictionary"), o(e)
                    }), (function () {
                        console.warn("Failed to load language", e), i && i(e, !1)
                    }))
                }, n.Web.GetQueryString("lang") && n.Localize.Load(n.Web.GetQueryString("lang")), n.Localize.CurrentLanguage = function () {
                    return n.Localize._currentLanguage
                }, n.Localize.languages = n.Localize.languages || [], n.Localize.GetLanguage = function () {
                    var e = window.navigator;
                    if (Array.isArray(e.languages)) for (var t = 0; t < e.languages.length; t++) {
                        var i = e.languages[t];
                        if (i && i.length) return i
                    }
                    var n = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
                    for (t = 0; t < n.length; t++) if ((i = e[n[t]]) && i.length) return i;
                    return "en"
                }, n.Type = "undefined", n.supports = {
                    showSidebar: !0,
                    showSidebarSocial: !0,
                    showSidebarMore: !0,
                    showSidebarLegal: !1,
                    showSidebarSaveProgressHeader: !0,
                    showSidebarShare: !0,
                    hideSidebarSoundButton: !1,
                    hideSidebarMusicButton: !1,
                    showModalLoginWithFacebook: !0,
                    showModalShareDialog: !0,
                    showModalCrossPromo: !0,
                    showModalMetaButtonOnGameStart: !0,
                    showModalMetaButtonOnGameEnd: !0,
                    showWebLoginWithFacebook: !0,
                    createWebSocialFrame: !0,
                    useGamepad: !1,
                    showModalPreGame: !1,
                    showCrossPromoBanner: !1,
                    showModalTryAgain: !0
                }
            }(), window.XYYXInterfaceCore && (window.XYYXInstant = new function (e) {
                var t = 0, i = {};

                function n(e, t) {
                    return function (t) {
                        var n = i[t];
                        if (delete i[t], n) {
                            if (clearTimeout(n.timeout), n.type != e) return void n.callback("_2");
                            for (var r = [], o = 1; o < arguments.length; o++) r.push(arguments[o]);
                            n.callback.apply(this, r)
                        } else console.warn("Request handler does not exist ", t)
                    }
                }

                function r(e, t, n, r) {
                    i[t] = {
                        type: e, callback: r, timeout: setTimeout((function () {
                            i[t] && (i[t].callback("_1"), delete i[t])
                        }), n || 5e3)
                    }
                }

                function o(e, t) {
                    switch (e) {
                        case"_1":
                            return new Error("Timeout");
                        case"_2":
                            return new Error("Callback type does not match");
                        default:
                            return new Error(t)
                    }
                }

                window.XYYXInstantCore = {
                    getADIDCallback: n("getADIDCallback"),
                    canCreateShortcutCallback: n("canCreateShortcutCallback"),
                    createShortcutCallback: n("createShortcutCallback"),
                    shareCallback: n("shareCallback")
                };
                var a = this;
                a.getADID = function () {
                    return new Promise((function (e, i) {
                        r("getADIDCallback", t, 5e3, (function (t, n, r) {
                            try {
                                if (0 != t) throw o(t, r);
                                e(n)
                            } catch (a) {
                                i("getADID " + a)
                            }
                        })), XYYXInterfaceCore.getADID(t), t++
                    }))
                }, a.canCreateShortcut = function (e) {
                    return new Promise((function (i, n) {
                        r("canCreateShortcutCallback", t, 5e3, (function (e, t, r) {
                            console.warn("canCreateShortcutCallback", e, t, r);
                            try {
                                if (0 != t) throw o(e, r);
                                i(e)
                            } catch (a) {
                                n("canCreateShortcut statusCode:" + e + " state:" + t + " msg:" + a)
                            }
                        })), XYYXInterfaceCore.canCreateShortcut(t, e), t++
                    }))
                }, a.createShortcut = function (e, i, n, a) {
                    return new Promise((function (s, c) {
                        r("createShortcutCallback", t, 6e4, (function (e, t) {
                            console.warn("createShortcutCallback", e, t);
                            try {
                                if (0 != e) throw o(e, t);
                                s()
                            } catch (i) {
                                c("createShortcut statusCode:" + e + " msg:" + i)
                            }
                        })), console.warn("Trying createShortcut", e, i, n, a), XYYXInterfaceCore.createShortcut(t, e, i, n, a), t++
                    }))
                }, a.share = function (e, i, n) {
                    return new Promise((function (e, a) {
                        r("shareCallback", t, 5e3, (function (t, i) {
                            try {
                                if (0 != t) throw o(t, i);
                                e()
                            } catch (n) {
                                a("share " + n)
                            }
                        })), XYYXInterfaceCore.share(t, i, n), t++
                    }))
                }, a.close = function () {
                    try {
                        XYYXInterfaceCore.close()
                    } catch (e) {
                        window.onerror && window.onerror("Error in XYYXInstant.close: " + (e.message || e.toString()), e)
                    }
                }, a.trackPlay = function (e, t, i, n, r) {
                    console.log("Running track play with", e, t, i, n);
                    try {
                        XYYXInterfaceCore.trackPlay(e, t, i, n, r)
                    } catch (o) {
                        window.onerror && window.onerror("Error in XYYXInstant.trackPlay: " + (o.message || o.toString()), o)
                    }
                }, a.forceReload = function () {
                    try {
                        XYYXInterfaceCore.forceReload()
                    } catch (e) {
                        window.onerror && window.onerror("Error in XYYXInstant.forceReload: " + (e.message || e.toString()), e)
                    }
                }, a.clearCache = function () {
                    try {
                        XYYXInterfaceCore.clearCache()
                    } catch (e) {
                        window.onerror && window.onerror("Error in XYYXInstant.clearCache: " + (e.message || e.toString()), e)
                    }
                }, console.log("XYYX Instant Init Done")
            }(window)), function (e) {
                e.Host = e.Host || {}, Host.Type = "web", Host.Log = function (e) {
                    console.log(e)
                }, Host.WrapperLog = function (e) {
                }, Host.sendToHost = function () {
                };
                var t, i = null, n = (t = {}, function () {
                    try {
                        return "localStorage" in window && null !== window.localStorage
                    } catch (e) {
                        return !1
                    }
                }() ? {
                    set: function (e, i) {
                        t[e] = i;
                        try {
                            localStorage.setItem(gameid + e, i)
                        } catch (n) {
                        }
                    }, get: function (e) {
                        return t[e] || localStorage.getItem(gameid + e)
                    }, remove: function (e) {
                        delete t[e], localStorage.removeItem(gameid + e)
                    }
                } : (i = void 0, {
                    set: function (e, i) {
                        t[e] = i
                    }, get: function (e) {
                        return t[e]
                    }, remove: function (e) {
                        delete t[e]
                    }
                }));
                Host.Preferences = Host.Preferences || {}, Host.Preferences.SetBool = function (e, t) {
                    Host.Preferences.cache[e] = t, n.set(e, t ? "true" : "false")
                }, Host.Preferences.SetInt = function (e, t) {
                    Host.Preferences.cache[e] = t, n.set(e, t)
                }, Host.Preferences.SetFloat = function (e, t) {
                    Host.Preferences.cache[e] = t, n.set(e, t)
                }, Host.Preferences.SetString = function (e, t) {
                    Host.Preferences.cache[e] = t, n.set(e, t)
                }, Host.Preferences.Remove = function (e) {
                    delete Host.Preferences.cache[e], n.remove(e)
                }, Host.Preferences.GetBool = function (e, t) {
                    var r = n.get(e) !== i || Host.Preferences.cache.hasOwnProperty(e), o = "true" == n.get(e);
                    Host.Preferences.cache[e] = o, t && t(o, r)
                }, Host.Preferences.GetInt = function (e, t) {
                    var r = n.get(e) !== i || Host.Preferences.cache.hasOwnProperty(e), o = parseInt(n.get(e));
                    Host.Preferences.cache[e] = o, t && t(o, r)
                }, Host.Preferences.GetFloat = function (e, t) {
                    var r = n.get(e) !== i || Host.Preferences.cache.hasOwnProperty(e), o = parseFloat(n.get(e));
                    Host.Preferences.cache[e] = o, t && t(o, r)
                }, Host.Preferences.GetString = function (e, t) {
                    var r = n.get(e) !== i || Host.Preferences.cache.hasOwnProperty(e), o = n.get(e);
                    Host.Preferences.cache[e] = o, t && t(o, r)
                }, Host.Localize.Translate = Host.Localize.Translate || {}, Host.Localize.Translate.GetString = function (e) {
                    return Lang[e] || "!!No translation found!!"
                }
            }(window), window.getRenderer = function () {
                var e = {
                    XYYXTextureMemoryUsage: 0,
                    XYYXGLErrors: {
                        NO_ERROR: 0,
                        OUT_OF_MEMORY: 0,
                        INVALID_ENUM: 0,
                        INVALID_VALUE: 0,
                        INVALID_OPERATION: 0,
                        INVALID_FRAMEBUFFER_OPERATION: 0,
                        CONTEXT_LOST_WEBGL: 0,
                        TOTAL_ERRORS: 0
                    },
                    XYYXErrorStats: function () {
                        var t = "";
                        for (name in e.XYYXGLErrors) {
                            var i = e.XYYXGLErrors[name];
                            t += name + ": " + i + "\n"
                        }
                        return t
                    },
                    WEBGL_RENDERER: 0,
                    CANVAS_RENDERER: 1,
                    VERSION: "v2.2.3XYYX",
                    blendModes: {NORMAL: 0, ADD: 1, MULTIPLY: 2, SCREEN: 3},
                    scaleModes: {DEFAULT: 0, LINEAR: 0, NEAREST: 1},
                    _UID: 0
                };
                return "undefined" != typeof Float32Array ? (e.Float32Array = Float32Array, e.Uint16Array = Uint16Array, e.Uint32Array = Uint32Array, e.ArrayBuffer = ArrayBuffer) : (e.Float32Array = Array, e.Uint16Array = Array), e.INTERACTION_FREQUENCY = 30, e.AUTO_PREVENT_DEFAULT = !0, e.PI_2 = 2 * Math.PI, e.RAD_TO_DEG = 180 / Math.PI, e.DEG_TO_RAD = Math.PI / 180, e.defaultRenderOptions = {
                    view: null,
                    transparent: !1,
                    antialias: !1,
                    preserveDrawingBuffer: !1,
                    clearBeforeRender: !0,
                    autoResize: !1
                }, e.Point = function (e, t) {
                    this.x = e || 0, this.y = t || 0
                }, e.Point.prototype.clone = function () {
                    return new e.Point(this.x, this.y)
                }, e.Point.prototype.set = function (e, t) {
                    this.x = e || 0, this.y = t || (0 !== t ? this.x : 0)
                }, e.Point.prototype.constructor = e.Point, e.Rectangle = function (e, t, i, n) {
                    this.x = e || 0, this.y = t || 0, this.width = i || 0, this.height = n || 0
                }, e.Rectangle.prototype.clone = function () {
                    return new e.Rectangle(this.x, this.y, this.width, this.height)
                }, e.Rectangle.prototype.contains = function (e, t) {
                    if (this.width <= 0 || this.height <= 0) return !1;
                    var i = this.x;
                    if (e >= i && e <= i + this.width) {
                        var n = this.y;
                        if (t >= n && t <= n + this.height) return !0
                    }
                    return !1
                }, e.Rectangle.prototype.constructor = e.Rectangle, e.EmptyRectangle = new e.Rectangle(0, 0, 0, 0), e.Polygon = function (t) {
                    if (t instanceof Array || (t = Array.prototype.slice.call(arguments)), t[0] instanceof e.Point) {
                        for (var i = [], n = 0, r = t.length; n < r; n++) i.push(t[n].x, t[n].y);
                        t = i
                    }
                    this.closed = !0, this.points = t
                }, e.Polygon.prototype.clone = function () {
                    var t = this.points.slice();
                    return new e.Polygon(t)
                }, e.Polygon.prototype.contains = function (e, t) {
                    for (var i = !1, n = this.points.length / 2, r = 0, o = n - 1; r < n; o = r++) {
                        var a = this.points[2 * r], s = this.points[2 * r + 1], c = this.points[2 * o],
                            l = this.points[2 * o + 1];
                        s > t != l > t && e < (c - a) * (t - s) / (l - s) + a && (i = !i)
                    }
                    return i
                }, e.Polygon.prototype.constructor = e.Polygon, e.Circle = function (e, t, i) {
                    this.x = e || 0, this.y = t || 0, this.radius = i || 0
                }, e.Circle.prototype.clone = function () {
                    return new e.Circle(this.x, this.y, this.radius)
                }, e.Circle.prototype.contains = function (e, t) {
                    if (this.radius <= 0) return !1;
                    var i = this.x - e, n = this.y - t;
                    return (i *= i) + (n *= n) <= this.radius * this.radius
                }, e.Circle.prototype.getBounds = function () {
                    return new e.Rectangle(this.x - this.radius, this.y - this.radius, 2 * this.radius, 2 * this.radius)
                }, e.Circle.prototype.constructor = e.Circle, e.Ellipse = function (e, t, i, n) {
                    this.x = e || 0, this.y = t || 0, this.width = i || 0, this.height = n || 0
                }, e.Ellipse.prototype.clone = function () {
                    return new e.Ellipse(this.x, this.y, this.width, this.height)
                }, e.Ellipse.prototype.contains = function (e, t) {
                    if (this.width <= 0 || this.height <= 0) return !1;
                    var i = (e - this.x) / this.width, n = (t - this.y) / this.height;
                    return (i *= i) + (n *= n) <= 1
                }, e.Ellipse.prototype.getBounds = function () {
                    return new e.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height)
                }, e.Ellipse.prototype.constructor = e.Ellipse, e.RoundedRectangle = function (e, t, i, n, r) {
                    this.x = e || 0, this.y = t || 0, this.width = i || 0, this.height = n || 0, this.radius = r || 20
                }, e.RoundedRectangle.prototype.clone = function () {
                    return new e.RoundedRectangle(this.x, this.y, this.width, this.height, this.radius)
                }, e.RoundedRectangle.prototype.contains = function (e, t) {
                    if (this.width <= 0 || this.height <= 0) return !1;
                    var i = this.x;
                    if (e >= i && e <= i + this.width) {
                        var n = this.y;
                        if (t >= n && t <= n + this.height) return !0
                    }
                    return !1
                }, e.RoundedRectangle.prototype.constructor = e.RoundedRectangle, e.Matrix = function () {
                    this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.tx = 0, this.ty = 0
                }, e.Matrix.prototype.fromArray = function (e) {
                    this.a = e[0], this.b = e[1], this.c = e[3], this.d = e[4], this.tx = e[2], this.ty = e[5]
                }, e.Matrix.prototype.toArray = function (t) {
                    this.array || (this.array = new e.Float32Array(9));
                    var i = this.array;
                    return t ? (i[0] = this.a, i[1] = this.b, i[2] = 0, i[3] = this.c, i[4] = this.d, i[5] = 0, i[6] = this.tx, i[7] = this.ty, i[8] = 1) : (i[0] = this.a, i[1] = this.c, i[2] = this.tx, i[3] = this.b, i[4] = this.d, i[5] = this.ty, i[6] = 0, i[7] = 0, i[8] = 1), i
                }, e.Matrix.prototype.apply = function (t, i) {
                    return (i = i || new e.Point).x = this.a * t.x + this.c * t.y + this.tx, i.y = this.b * t.x + this.d * t.y + this.ty, i
                }, e.Matrix.prototype.applyInverse = function (t, i) {
                    i = i || new e.Point;
                    var n = 1 / (this.a * this.d + this.c * -this.b);
                    return i.x = this.d * n * t.x + -this.c * n * t.y + (this.ty * this.c - this.tx * this.d) * n, i.y = this.a * n * t.y + -this.b * n * t.x + (-this.ty * this.a + this.tx * this.b) * n, i
                }, e.Matrix.prototype.translate = function (e, t) {
                    return this.tx += e, this.ty += t, this
                }, e.Matrix.prototype.scale = function (e, t) {
                    return this.a *= e, this.d *= t, this.c *= e, this.b *= t, this.tx *= e, this.ty *= t, this
                }, e.Matrix.prototype.rotate = function (e) {
                    var t = Math.cos(e), i = Math.sin(e), n = this.a, r = this.c, o = this.tx;
                    return this.a = n * t - this.b * i, this.b = n * i + this.b * t, this.c = r * t - this.d * i, this.d = r * i + this.d * t, this.tx = o * t - this.ty * i, this.ty = o * i + this.ty * t, this
                }, e.Matrix.prototype.append = function (e) {
                    var t = this.a, i = this.b, n = this.c, r = this.d;
                    return this.a = e.a * t + e.b * n, this.b = e.a * i + e.b * r, this.c = e.c * t + e.d * n, this.d = e.c * i + e.d * r, this.tx = e.tx * t + e.ty * n + this.tx, this.ty = e.tx * i + e.ty * r + this.ty, this
                }, e.Matrix.prototype.identity = function () {
                    return this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.tx = 0, this.ty = 0, this
                }, e.identityMatrix = new e.Matrix, e.DisplayObject = function () {
                    this.position = new e.Point, this.scale = new e.Point(1, 1), this.pivot = new e.Point(0, 0), this.rotation = 0, this.alpha = 1, this.visible = !0, this.hitArea = null, this.buttonMode = !1, this.renderable = !1, this.parent = null, this.stage = null, this.worldAlpha = 1, this._interactive = !1, this.defaultCursor = "pointer", this.worldTransform = new e.Matrix, this._sr = 0, this._cr = 1, this.filterArea = null, this._bounds = new e.Rectangle(0, 0, 1, 1), this._currentBounds = null, this._mask = null, this._cacheIsDirty = !1
                }, e.DisplayObject.prototype.constructor = e.DisplayObject, Object.defineProperty(e.DisplayObject.prototype, "interactive", {
                    get: function () {
                        return this._interactive
                    }, set: function (e) {
                        this._interactive = e, this.stage && (this.stage.dirty = !0)
                    }
                }), Object.defineProperty(e.DisplayObject.prototype, "worldVisible", {
                    get: function () {
                        var e = this;
                        do {
                            if (!e.visible) return !1;
                            e = e.parent
                        } while (e);
                        return !0
                    }
                }), Object.defineProperty(e.DisplayObject.prototype, "mask", {
                    get: function () {
                        return this._mask
                    }, set: function (e) {
                        this._mask && (this._mask.isMask = !1), this._mask = e, this._mask && (this._mask.isMask = !0)
                    }
                }), Object.defineProperty(e.DisplayObject.prototype, "filters", {
                    get: function () {
                        return this._filters
                    }, set: function (e) {
                        if (e) {
                            for (var t = [], i = 0; i < e.length; i++) for (var n = e[i].passes, r = 0; r < n.length; r++) t.push(n[r]);
                            this._filterBlock = {target: this, filterPasses: t}
                        }
                        this._filters = e
                    }
                }), e.DisplayObject.prototype.updateTransform = function (t, i, n, r, o, a, s, c) {
                    t = this.parent.worldTransform, i = this.worldTransform, this.rotation % e.PI_2 != 0 ? (this.rotation !== this.rotationCache && (this.rotationCache = this.rotation, this._sr = Math.sin(this.rotation), this._cr = Math.cos(this.rotation)), n = this._cr * this.scale.x, r = this._sr * this.scale.x, o = -this._sr * this.scale.y, a = this._cr * this.scale.y, s = this.position.x, c = this.position.y, (this.pivot.x || this.pivot.y) && (s -= this.pivot.x * n + this.pivot.y * o, c -= this.pivot.x * r + this.pivot.y * a), i.a = n * t.a + r * t.c, i.b = n * t.b + r * t.d, i.c = o * t.a + a * t.c, i.d = o * t.b + a * t.d, i.tx = s * t.a + c * t.c + t.tx, i.ty = s * t.b + c * t.d + t.ty) : (n = this.scale.x, a = this.scale.y, s = this.position.x - this.pivot.x * n, c = this.position.y - this.pivot.y * a, i.a = n * t.a, i.b = n * t.b, i.c = a * t.c, i.d = a * t.d, i.tx = s * t.a + c * t.c + t.tx, i.ty = s * t.b + c * t.d + t.ty), this.worldAlpha = this.alpha * this.parent.worldAlpha
                }, e.DisplayObject.prototype.displayObjectUpdateTransform = e.DisplayObject.prototype.updateTransform, e.DisplayObject.prototype.getBounds = function (t) {
                    return e.EmptyRectangle
                }, e.DisplayObject.prototype.getLocalBounds = function () {
                    return this.getBounds(e.identityMatrix)
                }, e.DisplayObject.prototype.setStageReference = function (e) {
                    this.stage = e, this._interactive && (this.stage.dirty = !0)
                }, e.DisplayObject.prototype.toGlobal = function (e) {
                    return this.displayObjectUpdateTransform(), this.worldTransform.apply(e)
                }, e.DisplayObject.prototype.toGlobalSize = function (e) {
                    return this.displayObjectUpdateTransform(), new Point(e.x * this.worldTransform.a, e.y * this.worldTransform.d)
                }, e.DisplayObject.prototype.toLocalSize = function (e, t) {
                    return t && (e = t.toGlobal(e)), this.displayObjectUpdateTransform(), new Point(e.x / this.worldTransform.a, e.y / this.worldTransform.d)
                }, e.DisplayObject.prototype.toLocal = function (e, t) {
                    return t && (e = t.toGlobal(e)), this.displayObjectUpdateTransform(), this.worldTransform.applyInverse(e)
                }, e.DisplayObject.prototype._renderWebGL = function (e) {
                }, e.DisplayObject.prototype._renderCanvas = function (e) {
                }, e.DisplayObject._tempMatrix = new e.Matrix, Object.defineProperty(e.DisplayObject.prototype, "x", {
                    get: function () {
                        return this.position.x
                    }, set: function (e) {
                        this.position.x = e
                    }
                }), Object.defineProperty(e.DisplayObject.prototype, "y", {
                    get: function () {
                        return this.position.y
                    }, set: function (e) {
                        this.position.y = e
                    }
                }), e.DisplayObjectContainer = function () {
                    e.DisplayObject.call(this), this.children = []
                }, e.DisplayObjectContainer.prototype = Object.create(e.DisplayObject.prototype), e.DisplayObjectContainer.prototype.constructor = e.DisplayObjectContainer, Object.defineProperty(e.DisplayObjectContainer.prototype, "width", {
                    get: function () {
                        return this.scale.x * this.getLocalBounds().width
                    }, set: function (e) {
                        var t = this.getLocalBounds().width;
                        this.scale.x = 0 !== t ? e / t : 1, this._width = e
                    }
                }), Object.defineProperty(e.DisplayObjectContainer.prototype, "height", {
                    get: function () {
                        return this.scale.y * this.getLocalBounds().height
                    }, set: function (e) {
                        var t = this.getLocalBounds().height;
                        this.scale.y = 0 !== t ? e / t : 1, this._height = e
                    }
                }), e.DisplayObjectContainer.prototype.addChild = function (e) {
                    return window.dirtyOnce = !0, this.addChildAt(e, this.children.length)
                }, e.DisplayObjectContainer.prototype.addChildAt = function (e, t) {
                    if (t >= 0 && t <= this.children.length) return window.dirtyOnce = !0, window.Host && Host.Localize.UpdateChildren(e), e.parent && e.parent.removeChild(e), e.parent = this, this.children.splice(t, 0, e), this.stage && e.setStageReference(this.stage), e;
                    throw new Error(e + "addChildAt: The index " + t + " supplied is out of bounds " + this.children.length)
                }, e.DisplayObjectContainer.prototype.getChildIndex = function (e) {
                    var t = this.children.indexOf(e);
                    if (-1 === t) throw new Error("The supplied DisplayObject must be a child of the caller");
                    return t
                }, e.DisplayObjectContainer.prototype.setChildIndex = function (e, t) {
                    if (t < 0 || t >= this.children.length) throw new Error("The supplied index is out of bounds");
                    window.dirtyOnce = !0;
                    var i = this.getChildIndex(e);
                    this.children.splice(i, 1), this.children.splice(t, 0, e)
                }, e.DisplayObjectContainer.prototype.getChildAt = function (e) {
                    if (e < 0 || e >= this.children.length) throw new Error("getChildAt: Supplied index " + e + " does not exist in the child list, or the supplied DisplayObject must be a child of the caller");
                    return this.children[e]
                }, e.DisplayObjectContainer.prototype.removeChild = function (e) {
                    var t = this.children.indexOf(e);
                    if (-1 !== t) return this.removeChildAt(t)
                }, e.DisplayObjectContainer.prototype.removeChildAt = function (e) {
                    var t = this.getChildAt(e);
                    return this.stage && t.removeStageReference(), window.dirtyOnce = !0, t.parent = void 0, this.children.splice(e, 1), t
                }, e.DisplayObjectContainer.prototype.updateTransform = function () {
                    if (this.visible) {
                        this.displayObjectUpdateTransform();
                        for (var e = 0, t = this.children.length; e < t; e++) this.children[e].updateTransform()
                    }
                }, e.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform = e.DisplayObjectContainer.prototype.updateTransform, e.DisplayObjectContainer.prototype.getBounds = function () {
                    if (0 === this.children.length) return e.EmptyRectangle;
                    for (var t, i, n, r = 1 / 0, o = 1 / 0, a = -1 / 0, s = -1 / 0, c = !1, l = 0, d = this.children.length; l < d; l++) this.children[l].visible && (c = !0, r = r < (t = this.children[l].getBounds()).x ? r : t.x, o = o < t.y ? o : t.y, a = a > (i = t.width + t.x) ? a : i, s = s > (n = t.height + t.y) ? s : n);
                    if (!c) return e.EmptyRectangle;
                    var u = this._bounds;
                    return u.x = r, u.y = o, u.width = a - r, u.height = s - o, u
                }, e.DisplayObjectContainer.prototype.getLocalBounds = function () {
                    var t = this.worldTransform;
                    this.worldTransform = e.identityMatrix;
                    for (var i = 0, n = this.children.length; i < n; i++) this.children[i].updateTransform();
                    var r = this.getBounds();
                    for (this.worldTransform = t, i = 0, n = this.children.length; i < n; i++) this.children[i].updateTransform();
                    return r
                }, e.DisplayObjectContainer.prototype.setStageReference = function (e) {
                    if (this.stage !== e) {
                        this.stage = e, this._interactive && (this.stage.dirty = !0);
                        for (var t = 0, i = this.children.length; t < i; t++) this.children[t].setStageReference(e);
                        this.emit("addedToStage")
                    }
                }, e.DisplayObjectContainer.prototype.removeStageReference = function () {
                    for (var e = 0, t = this.children.length; e < t; e++) this.children[e].removeStageReference();
                    this._interactive && (this.stage.dirty = !0), this.stage = null, this.emit("removedFromStage")
                }, e.DisplayObjectContainer.prototype._renderWebGL = function (e) {
                    var t, i;
                    if (this.visible && !(this.alpha <= 0)) if (this._mask || this._filters) {
                        for (this._mask && (e.spriteBatch.stop(), e.maskManager.pushMask(this.mask, e), e.spriteBatch.start()), t = 0, i = this.children.length; t < i; t++) this.children[t]._renderWebGL(e);
                        e.spriteBatch.stop(), this._mask && e.maskManager.popMask(this._mask, e), e.spriteBatch.start()
                    } else for (t = 0, i = this.children.length; t < i; t++) this.children[t]._renderWebGL(e)
                }, e.DisplayObjectContainer.prototype._renderCanvas = function (e) {
                    if (!1 !== this.visible && 0 !== this.alpha) {
                        this._mask && e.maskManager.pushMask(this._mask, e);
                        for (var t = 0, i = this.children.length; t < i; t++) this.children[t]._renderCanvas(e);
                        this._mask && e.maskManager.popMask(e)
                    }
                }, e.Sprite = function (t) {
                    e.DisplayObjectContainer.call(this), this.anchor = new e.Point, this.texture = t || e.Texture.emptyTexture, this._width = 0, this._height = 0, this.tint = 16777215, this.blendMode = e.blendModes.NORMAL, this.shader = null, this.texture.baseTexture.hasLoaded ? this.onTextureUpdate() : this.texture.onPixi("update", this.onTextureUpdate.bind(this)), this.renderable = !0
                }, e.Sprite.prototype = Object.create(e.DisplayObjectContainer.prototype), e.Sprite.prototype.constructor = e.Sprite, Object.defineProperty(e.Sprite.prototype, "width", {
                    get: function () {
                        return this.scale.x * this.texture.frame.width
                    }, set: function (e) {
                        this.scale.x = e / this.texture.frame.width, this._width = e
                    }
                }), Object.defineProperty(e.Sprite.prototype, "height", {
                    get: function () {
                        return this.scale.y * this.texture.frame.height
                    }, set: function (e) {
                        this.scale.y = e / this.texture.frame.height, this._height = e
                    }
                }), e.Sprite.prototype.setTexture = function (e) {
                    this.texture = e, this.cachedTint = 16777215
                }, e.Sprite.prototype.onTextureUpdate = function () {
                    this._width && (this.scale.x = this._width / this.texture.frame.width), this._height && (this.scale.y = this._height / this.texture.frame.height)
                }, e.Sprite.prototype.getBounds = function (e) {
                    var t = this.texture.frame.width, i = this.texture.frame.height;
                    !this.texture.baseTexture.hasLoaded && this.image && this.image.width && (t = this.image.width, i = this.image.height);
                    var n = t * (1 - this.anchor.x), r = t * -this.anchor.x, o = i * (1 - this.anchor.y),
                        a = i * -this.anchor.y, s = e || this.worldTransform, c = s.a, l = s.b, d = s.c, u = s.d,
                        h = s.tx, f = s.ty, A = -1 / 0, g = -1 / 0, p = 1 / 0, v = 1 / 0;
                    if (0 === l && 0 === d) c < 0 && (c *= -1), u < 0 && (u *= -1), p = c * r + h, A = c * n + h, v = u * a + f, g = u * o + f; else {
                        var w = c * r + d * a + h, y = u * a + l * r + f, m = c * n + d * a + h, C = u * a + l * n + f,
                            I = c * n + d * o + h, E = u * o + l * n + f, S = c * r + d * o + h, b = u * o + l * r + f;
                        p = S < (p = I < (p = m < (p = w < p ? w : p) ? m : p) ? I : p) ? S : p, v = b < (v = E < (v = C < (v = y < v ? y : v) ? C : v) ? E : v) ? b : v, A = S > (A = I > (A = m > (A = w > A ? w : A) ? m : A) ? I : A) ? S : A, g = b > (g = E > (g = C > (g = y > g ? y : g) ? C : g) ? E : g) ? b : g
                    }
                    var x = this._bounds;
                    return x.x = p, x.width = A - p, x.y = v, x.height = g - v, this._currentBounds = x, x
                }, e.Sprite.prototype._renderWebGL = function (e) {
                    var t, i;
                    if (this.visible && !(this.alpha <= 0)) if (this._mask || this._filters) {
                        var n = e.spriteBatch;
                        for (this._filters && (n.flush(), e.filterManager.pushFilter(this._filterBlock)), this._mask && (n.stop(), e.maskManager.pushMask(this.mask, e), n.start()), n.render(this), t = 0, i = this.children.length; t < i; t++) this.children[t]._renderWebGL(e);
                        n.stop(), this._mask && e.maskManager.popMask(this._mask, e), this._filters && e.filterManager.popFilter(), n.start()
                    } else for (e.spriteBatch.render(this), t = 0, i = this.children.length; t < i; t++) this.children[t]._renderWebGL(e)
                }, e.Sprite.prototype._renderCanvas = function (t) {
                    if (!(!1 === this.visible || 0 === this.alpha || this.texture.frame.width <= 0 || this.texture.frame.height <= 0)) {
                        if (this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode, t.context.globalCompositeOperation = e.blendModesCanvas[t.currentBlendMode]), this._mask && t.maskManager.pushMask(this._mask, t), this.texture.valid && !this.texture.baseTexture.source.isMock) {
                            t.context.globalAlpha = this.worldAlpha, t.smoothProperty && t.scaleMode !== this.texture.baseTexture.scaleMode && (t.scaleMode = this.texture.baseTexture.scaleMode, t.context[t.smoothProperty] = t.scaleMode === e.scaleModes.LINEAR);
                            var i = this.texture.trim ? this.texture.trim.x - this.anchor.x * this.texture.trim.width : this.anchor.x * -this.texture.frame.width,
                                n = this.texture.trim ? this.texture.trim.y - this.anchor.y * this.texture.trim.height : this.anchor.y * -this.texture.frame.height;
                            t.context.setTransform(this.worldTransform.a, this.worldTransform.b, this.worldTransform.c, this.worldTransform.d, 0 | this.worldTransform.tx, 0 | this.worldTransform.ty), i |= 0, n |= 0;
                            var r = this.texture, o = r.frame,
                                a = !this._image || this._image && (!r.baseTexture.source[this._image.path] || !r.baseTexture.source[this._image.path].drawPending);
                            if (16777215 !== this.tint && a) {
                                var s = e.CanvasTinter.getTintedTexture(this, this.tint);
                                t.context.drawImage(s, 0, 0, o.width * r.resolution << 0, o.height * r.resolution << 0, i, n, o.width, o.height)
                            } else t.context.drawImage(r.baseTexture.source, o.x * r.resolution << 0, o.y * r.resolution << 0, o.width * r.resolution << 0, o.height * r.resolution << 0, i, n, o.width, o.height)
                        }
                        for (var c = 0, l = this.children.length; c < l; c++) this.children[c]._renderCanvas(t);
                        this._mask && t.maskManager.popMask(t)
                    }
                }, e.Sprite.fromFrame = function (t) {
                    var i = e.TextureCache[t];
                    if (!i) throw new Error('The frameId "' + t + '" does not exist in the texture cache' + this);
                    return new e.Sprite(i)
                }, e.Sprite.fromImage = function (t, i, n) {
                    var r = e.Texture.fromImage(t, i, n);
                    return new e.Sprite(r)
                }, e.SpriteBatch = function () {
                    e.DisplayObjectContainer.call(this), this.ready = !1
                }, e.SpriteBatch.prototype = Object.create(e.DisplayObjectContainer.prototype), e.SpriteBatch.prototype.constructor = e.SpriteBatch, e.SpriteBatch.prototype.initWebGL = function (t) {
                    this.fastSpriteBatch = new e.WebGLFastSpriteBatch(t), this.ready = !0
                },e.SpriteBatch.prototype.updateTransform = function () {
                    this.displayObjectUpdateTransform()
                },e.SpriteBatch.prototype._renderWebGL = function (e) {
                    !this.visible || this.alpha <= 0 || !this.children.length || (this.ready || this.initWebGL(e.gl), e.spriteBatch.stop(), e.shaderManager.setShader(e.shaderManager.fastShader), this.fastSpriteBatch.begin(this, e), this.fastSpriteBatch.render(this), e.spriteBatch.start())
                },e.SpriteBatch.prototype._renderCanvas = function (e) {
                    if (this.visible && !(this.alpha <= 0) && this.children.length) {
                        var t = e.context;
                        t.globalAlpha = this.worldAlpha, this.displayObjectUpdateTransform();
                        for (var i = this.worldTransform, n = !0, r = 0; r < this.children.length; r++) {
                            var o = this.children[r];
                            if (o.visible) {
                                var a = o.texture, s = a.frame;
                                if (t.globalAlpha = this.worldAlpha * o.alpha, o.rotation % (2 * Math.PI) == 0) n && (t.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty), n = !1), t.drawImage(a.baseTexture.source, s.x, s.y, s.width, s.height, o.anchor.x * (-s.width * o.scale.x) + o.position.x + .5 | 0, o.anchor.y * (-s.height * o.scale.y) + o.position.y + .5 | 0, s.width * o.scale.x, s.height * o.scale.y); else {
                                    n || (n = !0), o.displayObjectUpdateTransform();
                                    var c = o.worldTransform;
                                    t.setTransform(c.a, c.b, c.c, c.d, 0 | c.tx, 0 | c.ty), t.drawImage(a.baseTexture.source, s.x, s.y, s.width, s.height, o.anchor.x * -s.width + .5 | 0, o.anchor.y * -s.height + .5 | 0, s.width, s.height)
                                }
                            }
                        }
                    }
                },e.Text = function (t, i) {
                    this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), e.Sprite.call(this, e.Texture.fromCanvas(this.canvas)), this.setText(t), this.setStyle(i)
                },e.Text.prototype = Object.create(e.Sprite.prototype),e.Text.prototype.constructor = e.Text,Object.defineProperty(e.Text.prototype, "width", {
                    get: function () {
                        return this.dirty && (this.updateText(), this.dirty = !1), this.scale.x * this.texture.frame.width
                    }, set: function (e) {
                        this.scale.x = e / this.texture.frame.width, this._width = e
                    }
                }),Object.defineProperty(e.Text.prototype, "height", {
                    get: function () {
                        return this.dirty && (this.updateText(), this.dirty = !1), this.scale.y * this.texture.frame.height
                    }, set: function (e) {
                        this.scale.y = e / this.texture.frame.height, this._height = e
                    }
                }),e.Text.prototype.setStyle = function (e) {
                    (e = e || {}).font = e.font || "bold 20pt Arial", e.fill = e.fill || "black", e.align = e.align || "left", e.stroke = e.stroke || "black", e.strokeThickness = e.strokeThickness || 0, e.wordWrap = e.wordWrap || !1, e.wordWrapWidth = e.wordWrapWidth || 100, e.dropShadow = e.dropShadow || !1, e.dropShadowAngle = e.dropShadowAngle || Math.PI / 6, e.dropShadowDistance = e.dropShadowDistance || 4, e.dropShadowColor = e.dropShadowColor || "black", this.style = e, this.dirty = !0
                },e.Text.prototype.setText = function (e) {
                    this.text != e.toString() && (this.text = e.toString() || " ", this.dirty = !0, window.dirtyOnce = !0)
                },e.Text.prototype.updateText = function () {
                    this.context.font = this.style._font || this.style.font;
                    var e = this.text.toString();
                    this.style.wordWrap && (e = this.wordWrap(this.text));
                    for (var t = e ? e.split(/(?:\r\n|\r|\n)/) : [], i = [], n = 0, r = this.determineFontProperties(this.style._font || this.style.font), o = 0; o < t.length; o++) {
                        var a = this.context.measureText(t[o]).width;
                        i[o] = a, n = Math.max(n, a)
                    }
                    var s = n + this.style.strokeThickness;
                    this.style.dropShadow && (s += this.style.dropShadowDistance), this.canvas.width = Math.max(s + this.context.lineWidth, 1);
                    var c, l, d = r.fontSize + this.style.strokeThickness, u = d * t.length;
                    if (this.style.dropShadow && (u += this.style.dropShadowDistance), this.canvas.height = Math.max(u, 1), this.context.scale(1, 1), this.context.font = this.style._font || this.style.font, this.context.strokeStyle = this.style.stroke, this.context.lineWidth = this.style.strokeThickness, this.context.textBaseline = "alphabetic", this.style.dropShadow) {
                        this.context.fillStyle = this.style.dropShadowColor;
                        var h = Math.sin(this.style.dropShadowAngle) * this.style.dropShadowDistance,
                            f = Math.cos(this.style.dropShadowAngle) * this.style.dropShadowDistance;
                        for (o = 0; o < t.length; o++) c = this.style.strokeThickness / 2, l = this.style.strokeThickness / 2 + o * d + r.ascent, "right" === this.style.align ? c += n - i[o] : "center" === this.style.align && (c += (n - i[o]) / 2), this.style.fill && this.context.fillText(t[o], c + h, l + f)
                    }
                    for (this.context.fillStyle = this.style.fill, o = 0; o < t.length; o++) c = this.style.strokeThickness / 2, l = this.style.strokeThickness / 2 + o * d + r.ascent, "right" === this.style.align ? c += n - i[o] : "center" === this.style.align && (c += (n - i[o]) / 2), this.style.stroke && this.style.strokeThickness && this.context.strokeText(t[o], c, l), this.style.fill && this.context.fillText(t[o], c, l);
                    this.updateTexture()
                },e.Text.prototype.updateTexture = function () {
                    try {
                        void 0 !== this._lastSize && (e.XYYXTextureMemoryUsage -= 4 * this._lastSize.w * this._lastSize.h)
                    } catch (t) {
                    }
                    this.texture.baseTexture.width = this.canvas.width, this.texture.baseTexture.height = this.canvas.height, this.texture.frame.width = this.canvas.width, this.texture.frame.height = this.canvas.height, this._width = this.canvas.width, this._height = this.canvas.height;
                    try {
                        e.XYYXTextureMemoryUsage += 4 * this.texture.baseTexture.width * this.texture.baseTexture.height, this._lastSize = {
                            w: this.texture.baseTexture.width,
                            h: this.texture.baseTexture.height
                        }
                    } catch (t) {
                    }
                    this.texture.baseTexture.dirty(), this.texture.tintCache = []
                },e.Text.prototype._renderWebGL = function (t) {
                    this.dirty && (this.updateText(), this.dirty = !1), e.Sprite.prototype._renderWebGL.call(this, t)
                },e.Text.prototype._renderCanvas = function (t) {
                    this.dirty && (this.updateText(), this.dirty = !1), e.Sprite.prototype._renderCanvas.call(this, t)
                },e.Text.prototype.determineFontProperties = function (t) {
                    var i = e.Text.fontPropertiesCache[t];
                    if (!i) {
                        i = {};
                        var n = e.Text.fontPropertiesCanvas, r = e.Text.fontPropertiesContext;
                        r.font = t;
                        var o = Math.max(Math.ceil(r.measureText("|MÃq").width), 1),
                            a = Math.ceil(r.measureText("M").width), s = Math.max(2 * a, 1);
                        a = 1.4 * a | 0, n.width = o, n.height = s, r.fillStyle = "#ffffff", r.fillRect(0, 0, o, s), r.font = t, r.textBaseline = "alphabetic", r.fillStyle = "#888888", r.fillText("|MÃq", 0, a);
                        var c, l, d = r.getImageData(0, 0, o, s).data, u = d.length, h = 4 * o, f = 0, A = !1;
                        for (c = 0; c < a; c++) {
                            for (l = 0; l < h; l += 4) if (255 !== d[f + l]) {
                                A = !0;
                                break
                            }
                            if (A) break;
                            f += h
                        }
                        for (i.ascent = a - c, f = u - h, A = !1, c = s; c > a; c--) {
                            for (l = 0; l < h; l += 4) if (255 !== d[f + l]) {
                                A = !0;
                                break
                            }
                            if (A) break;
                            f -= h
                        }
                        i.descent = c - a, i.fontSize = i.ascent + i.descent, e.Text.fontPropertiesCache[t] = i
                    }
                    return i
                },e.Text.prototype.wordWrap = function (e) {
                    for (var t = "", i = e.split("\n"), n = 0; n < i.length; n++) {
                        for (var r = this.style.wordWrapWidth, o = i[n].split(" "), a = 0; a < o.length; a++) {
                            var s = this.context.measureText(o[a]).width, c = s + this.context.measureText(" ").width;
                            0 === a || c > r ? (a > 0 && (t += "\n"), t += o[a], r = this.style.wordWrapWidth - s) : (r -= c, t += " " + o[a])
                        }
                        n < i.length - 1 && (t += "\n")
                    }
                    return t
                },e.Text.prototype.getBounds = function (t) {
                    return this.dirty && (this.updateText(), this.dirty = !1), e.Sprite.prototype.getBounds.call(this, t)
                },e.Text.prototype.destroy = function (e) {
                    this.context = null, this.canvas = null, this.texture.destroy(void 0 === e || e)
                },e.Text.fontPropertiesCache = {},e.Text.fontPropertiesCanvas = document.createElement("canvas"),e.Text.fontPropertiesContext = e.Text.fontPropertiesCanvas.getContext("2d"),e.InteractionData = function () {
                    this.global = new e.Point, this.target = null, this.originalEvent = null
                },e.InteractionData.prototype.getLocalPosition = function (t, i) {
                    var n = t.worldTransform, r = this.global, o = n.a, a = n.c, s = n.tx, c = n.b, l = n.d, d = n.ty,
                        u = 1 / (o * l + a * -c);
                    return (i = i || new e.Point).x = l * u * r.x + -a * u * r.y + (d * a - s * l) * u, i.y = o * u * r.y + -c * u * r.x + (-d * o + s * c) * u, i
                },e.InteractionData.prototype.constructor = e.InteractionData,e.InteractionManager = function (t) {
                    this.stage = t, this.mouse = new e.InteractionData, this.touches = {}, this.tempPoint = new e.Point, this.mouseoverEnabled = !0, this.pool = [], this.interactiveItems = [], this.interactionDOMElement = null, this.onMouseMove = this.onMouseMove.bind(this), this.onMouseDown = this.onMouseDown.bind(this), this.onMouseOut = this.onMouseOut.bind(this), this.onMouseUp = this.onMouseUp.bind(this), this.onTouchStart = this.onTouchStart.bind(this), this.onTouchEnd = this.onTouchEnd.bind(this), this.onTouchMove = this.onTouchMove.bind(this), this.last = 0, this.currentCursorStyle = "inherit", this.mouseOut = !1, this._tempPoint = new e.Point
                },e.InteractionManager.prototype.constructor = e.InteractionManager,e.InteractionManager.prototype.collectInteractiveSprite = function (e, t) {
                    for (var i = e.children, n = i.length - 1; n >= 0; n--) {
                        var r = i[n];
                        r._interactive ? (t.interactiveChildren = !0, this.interactiveItems.push(r), r.children.length > 0 && this.collectInteractiveSprite(r, r)) : (r.__iParent = null, r.children.length > 0 && this.collectInteractiveSprite(r, t))
                    }
                },e.InteractionManager.prototype.setTarget = function (e) {
                    this.target = e, null === this.interactionDOMElement && this.setTargetDomElement(e.view)
                },e.InteractionManager.prototype.setTargetDomElement = function (e) {
                    this.removeEvents(), window.navigator.msPointerEnabled && (e.style["-ms-content-zooming"] = "none", e.style["-ms-touch-action"] = "none"), this.interactionDOMElement = e, e.addEventListener("mousemove", this.onMouseMove, !0), e.addEventListener("mousedown", this.onMouseDown, !0), e.addEventListener("mouseout", this.onMouseOut, !0), e.addEventListener("touchstart", this.onTouchStart, !0), e.addEventListener("touchend", this.onTouchEnd, !0), e.addEventListener("touchmove", this.onTouchMove, !0), window.addEventListener("mouseup", this.onMouseUp, !0)
                },e.InteractionManager.prototype.removeEvents = function () {
                    this.interactionDOMElement && (this.interactionDOMElement.style["-ms-content-zooming"] = "", this.interactionDOMElement.style["-ms-touch-action"] = "", this.interactionDOMElement.removeEventListener("mousemove", this.onMouseMove, !0), this.interactionDOMElement.removeEventListener("mousedown", this.onMouseDown, !0), this.interactionDOMElement.removeEventListener("mouseout", this.onMouseOut, !0), this.interactionDOMElement.removeEventListener("touchstart", this.onTouchStart, !0), this.interactionDOMElement.removeEventListener("touchend", this.onTouchEnd, !0), this.interactionDOMElement.removeEventListener("touchmove", this.onTouchMove, !0), this.interactionDOMElement = null, window.removeEventListener("mouseup", this.onMouseUp, !0))
                },e.InteractionManager.prototype.update = function () {
                    if (this.target) {
                        var t = Date.now(), i = t - this.last;
                        if (!((i = i * e.INTERACTION_FREQUENCY / 1e3) < 1)) {
                            this.last = t;
                            var n = 0;
                            this.dirty && this.rebuildInteractiveGraph();
                            var r = this.interactiveItems.length, o = "inherit", a = !1;
                            for (n = 0; n < r; n++) {
                                var s = this.interactiveItems[n];
                                s.__hit = this.hitTest(s, this.mouse), this.mouse.target = s, s.__hit && !a ? (s.buttonMode && (o = s.defaultCursor), s.interactiveChildren || (a = !0), s.__isOver || (s.mouseover && s.mouseover(this.mouse), s.__isOver = !0)) : s.__isOver && (s.mouseout && s.mouseout(this.mouse), s.__isOver = !1)
                            }
                            this.currentCursorStyle === o || XS.ignoreCursorChanges || (this.currentCursorStyle = o, this.interactionDOMElement.style.cursor = o)
                        }
                    }
                },e.InteractionManager.prototype.rebuildInteractiveGraph = function () {
                    this.dirty = !1;
                    for (var e = this.interactiveItems.length, t = 0; t < e; t++) this.interactiveItems[t].interactiveChildren = !1;
                    this.interactiveItems = [], this.stage.interactive && this.interactiveItems.push(this.stage), this.collectInteractiveSprite(this.stage, this.stage)
                },e.InteractionManager.prototype.onMouseMove = function (e) {
                    if (this.dirty && this.rebuildInteractiveGraph(), this.mouse) {
                        this.mouse.originalEvent = e;
                        var t = this.interactionDOMElement.getBoundingClientRect();
                        this.mouse.global.x = (e.clientX - t.left) * (this.target.width / t.width), this.mouse.global.y = (e.clientY - t.top) * (this.target.height / t.height);
                        for (var i = this.interactiveItems.length, n = 0; n < i; n++) {
                            var r = this.interactiveItems[n];
                            r.mousemove && r.mousemove(this.mouse)
                        }
                    }
                },e.InteractionManager.prototype.onMouseDown = function (t) {
                    if (this.dirty && this.rebuildInteractiveGraph(), this.mouse) {
                        this.mouse.originalEvent = t, e.AUTO_PREVENT_DEFAULT && this.mouse.originalEvent && (void 0 === this.mouse.originalEvent.cancelable || this.mouse.originalEvent.cancelable) && this.mouse.originalEvent.preventDefault();
                        for (var i = this.interactiveItems.length, n = this.mouse.originalEvent, r = 2 === n.button || 3 === n.which, o = r ? "rightdown" : "mousedown", a = r ? "rightclick" : "__click", s = r ? "__rightIsDown" : "__mouseIsDown", c = r ? "__isRightDown" : "__isDown", l = 0; l < i; l++) {
                            var d = this.interactiveItems[l];
                            if ((d[o] || d[a]) && (d[s] = !0, d.__hit = this.hitTest(d, this.mouse), d.__hit && (d[o] && d[o](this.mouse), d[c] = !0, !d.interactiveChildren))) break
                        }
                    }
                },e.InteractionManager.prototype.onMouseOut = function (e) {
                    if (this.dirty && this.rebuildInteractiveGraph(), this.mouse) {
                        this.mouse.originalEvent = e;
                        var t = this.interactiveItems.length;
                        this.interactionDOMElement.style.cursor = "inherit";
                        for (var i = 0; i < t; i++) {
                            var n = this.interactiveItems[i];
                            n.__isOver && (this.mouse.target = n, n.mouseout && n.mouseout(this.mouse), n.__isOver = !1)
                        }
                        this.mouseOut = !0
                    }
                },e.InteractionManager.prototype.onMouseUp = function (e) {
                    if (this.dirty && this.rebuildInteractiveGraph(), this.mouse) {
                        this.mouse.originalEvent = e;
                        for (var t = this.interactiveItems.length, i = !1, n = this.mouse.originalEvent, r = 2 === n.button || 3 === n.which, o = r ? "rightup" : "mouseup", a = r ? "rightclick" : "__click", s = r ? "rightupoutside" : "mouseupoutside", c = r ? "__isRightDown" : "__isDown", l = 0; l < t; l++) {
                            var d = this.interactiveItems[l];
                            (d[a] || d[o] || d[s]) && (d.__hit = this.hitTest(d, this.mouse), d.__hit && !i ? (d[o] && d[o](this.mouse), d[c] && d[a] && d[a](this.mouse), d.interactiveChildren || (i = !0)) : d[c] && d[s] && d[s](this.mouse), d[c] = !1)
                        }
                    }
                },e.InteractionManager.prototype.hitTest = function (t, i) {
                    var n = i.global;
                    if (!t.worldVisible) return !1;
                    t.worldTransform.applyInverse(n, this._tempPoint);
                    var r, o = this._tempPoint.x, a = this._tempPoint.y;
                    if (i.target = t, t.hitArea && t.hitArea.contains) return t.hitArea.contains(o, a);
                    if (t instanceof e.Sprite) {
                        var s, c = t.texture.frame.width, l = t.texture.frame.height, d = -c * t.anchor.x;
                        if (o > d && o < d + c && a > (s = -l * t.anchor.y) && a < s + l) return !0
                    } else if (t instanceof e.Graphics) {
                        var u = t.graphicsData;
                        for (r = 0; r < u.length; r++) {
                            var h = u[r];
                            if (h.fill && h.shape && h.shape.contains(o, a)) return !0
                        }
                    }
                    var f = t.children.length;
                    for (r = 0; r < f; r++) {
                        var A = t.children[r];
                        if (this.hitTest(A, i)) return i.target = t, !0
                    }
                    return !1
                },e.InteractionManager.prototype.onTouchMove = function (e) {
                    this.dirty && this.rebuildInteractiveGraph();
                    var t, i = this.interactionDOMElement.getBoundingClientRect(), n = e.changedTouches, r = 0;
                    for (r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (t = this.touches[o.identifier]) {
                            t.originalEvent = e, t.global.x = (o.clientX - i.left) * (this.target.width / i.width), t.global.y = (o.clientY - i.top) * (this.target.height / i.height);
                            for (var a = 0; a < this.interactiveItems.length; a++) {
                                var s = this.interactiveItems[a];
                                s.touchmove && s.__touchData && s.__touchData[o.identifier] && s.touchmove(t)
                            }
                        }
                    }
                    (void 0 === e.cancelable || e.cancelable) && e.preventDefault()
                },e.InteractionManager.prototype.onTouchStart = function (t) {
                    this.dirty && this.rebuildInteractiveGraph();
                    var i = this.interactionDOMElement.getBoundingClientRect();
                    e.AUTO_PREVENT_DEFAULT && (void 0 === t.cancelable || t.cancelable) && t.preventDefault();
                    for (var n = t.changedTouches, r = 0; r < n.length; r++) {
                        var o = n[r], a = this.pool.pop();
                        a || (a = new e.InteractionData), a.originalEvent = t, this.touches[o.identifier] = a, a.global.x = (o.clientX - i.left) * (this.target.width / i.width), a.global.y = (o.clientY - i.top) * (this.target.height / i.height);
                        for (var s = this.interactiveItems.length, c = 0; c < s; c++) {
                            var l = this.interactiveItems[c];
                            if ((l.touchstart || l.tap) && (l.__hit = this.hitTest(l, a), l.__hit && (l.touchstart && l.touchstart(a), l.__isDown = !0, l.__touchData = l.__touchData || {}, l.__touchData[o.identifier] = a, !l.interactiveChildren))) break
                        }
                    }
                },e.InteractionManager.prototype.onTouchEnd = function (e) {
                    this.dirty && this.rebuildInteractiveGraph();
                    for (var t = this.interactionDOMElement.getBoundingClientRect(), i = e.changedTouches, n = 0; n < i.length; n++) {
                        var r = i[n], o = this.touches[r.identifier];
                        if (o) {
                            var a = !1;
                            o.global.x = (r.clientX - t.left) * (this.target.width / t.width), o.global.y = (r.clientY - t.top) * (this.target.height / t.height);
                            for (var s = this.interactiveItems.length, c = 0; c < s; c++) {
                                var l = this.interactiveItems[c];
                                l.__touchData && l.__touchData[r.identifier] && (l.__hit = this.hitTest(l, l.__touchData[r.identifier]), o.originalEvent = e, (l.touchend || l.tap) && (l.__hit && !a ? (l.touchend && l.touchend(o), l.__isDown && l.tap && l.tap(o), l.interactiveChildren || (a = !0)) : l.__isDown && l.touchendoutside && l.touchendoutside(o), l.__isDown = !1), l.__touchData[r.identifier] = null)
                            }
                            this.pool.push(o), this.touches[r.identifier] = null
                        }
                    }
                },e.Stage = function (t) {
                    e.DisplayObjectContainer.call(this), this.worldTransform = new e.Matrix, this.interactive = !0, this.interactionManager = new e.InteractionManager(this), this.dirty = !0, this.stage = this, this.stage.hitArea = new e.Rectangle(0, 0, 1e5, 1e5), this.setBackgroundColor(t)
                },e.Stage.prototype = Object.create(e.DisplayObjectContainer.prototype),e.Stage.prototype.constructor = e.Stage,e.Stage.prototype.updateTransform = function () {
                    this.worldAlpha = 1;
                    for (var e = 0, t = this.children.length; e < t; e++) this.children[e].updateTransform();
                    this.dirty && (this.dirty = !1, this.interactionManager.dirty = !0), this.interactive && this.interactionManager.update()
                },e.Stage.prototype.setBackgroundColor = function (t) {
                    this.backgroundColor = t || 0, this.backgroundColorSplit = e.hex2rgb(this.backgroundColor);
                    var i = this.backgroundColor.toString(16);
                    i = "000000".substr(0, 6 - i.length) + i, this.backgroundColorString = "#" + i
                },e.Stage.prototype.getMousePosition = function () {
                    return this.interactionManager.mouse.global
                },e.hex2rgb = function (e) {
                    return [(e >> 16 & 255) / 255, (e >> 8 & 255) / 255, (255 & e) / 255]
                },e.rgb2hex = function (e) {
                    return (255 * e[0] << 16) + (255 * e[1] << 8) + 255 * e[2]
                },e.canUseNewCanvasBlendModes = function () {
                    if ("undefined" == typeof document) return !1;
                    var e = document.createElement("canvas");
                    e.width = 1, e.height = 1;
                    var t = e.getContext("2d");
                    return t.fillStyle = "#000", t.fillRect(0, 0, 1, 1), t.globalCompositeOperation = "multiply", t.fillStyle = "#fff", t.fillRect(0, 0, 1, 1), 0 === t.getImageData(0, 0, 1, 1).data[0]
                },e.getNextPowerOfTwo = function (e) {
                    if (e > 0 && 0 == (e & e - 1)) return e;
                    for (var t = 1; t < e;) t <<= 1;
                    return t
                },e.isPowerOfTwo = function (e, t) {
                    return e > 0 && 0 == (e & e - 1) && t > 0 && 0 == (t & t - 1)
                },e.PolyK = {},e.PolyK.Triangulate = function (t) {
                    var i = !0, n = t.length >> 1;
                    if (n < 3) return [];
                    for (var r = [], o = [], a = 0; a < n; a++) o.push(a);
                    a = 0;
                    for (var s = n; s > 3;) {
                        var c = o[(a + 0) % s], l = o[(a + 1) % s], d = o[(a + 2) % s], u = t[2 * c], h = t[2 * c + 1],
                            f = t[2 * l], A = t[2 * l + 1], g = t[2 * d], p = t[2 * d + 1], v = !1;
                        if (e.PolyK._convex(u, h, f, A, g, p, i)) {
                            v = !0;
                            for (var w = 0; w < s; w++) {
                                var y = o[w];
                                if (y !== c && y !== l && y !== d && e.PolyK._PointInTriangle(t[2 * y], t[2 * y + 1], u, h, f, A, g, p)) {
                                    v = !1;
                                    break
                                }
                            }
                        }
                        if (v) r.push(c, l, d), o.splice((a + 1) % s, 1), s--, a = 0; else if (a++ > 3 * s) {
                            if (!i) return null;
                            for (r = [], o = [], a = 0; a < n; a++) o.push(a);
                            a = 0, s = n, i = !1
                        }
                    }
                    return r.push(o[0], o[1], o[2]), r
                },e.PolyK._PointInTriangle = function (e, t, i, n, r, o, a, s) {
                    var c = a - i, l = s - n, d = r - i, u = o - n, h = e - i, f = t - n, A = c * c + l * l,
                        g = c * d + l * u, p = c * h + l * f, v = d * d + u * u, w = d * h + u * f,
                        y = 1 / (A * v - g * g), m = (v * p - g * w) * y, C = (A * w - g * p) * y;
                    return m >= 0 && C >= 0 && m + C < 1
                },e.PolyK._convex = function (e, t, i, n, r, o, a) {
                    return (t - n) * (r - i) + (i - e) * (o - n) >= 0 === a
                },e.EventTarget = {
                    call: function (t) {
                        t && (t = t.prototype || t, e.EventTarget.mixin(t))
                    }, mixin: function (t) {
                        t.listeners = function (e) {
                            return this._listeners = this._listeners || {}, this._listeners[e] ? this._listeners[e].slice() : []
                        }, t.emitPixi = t.dispatchEvent = function (t, i) {
                            if (this._listeners = this._listeners || {}, "object" == typeof t && (i = t, t = t.type), i && !0 === i.__isEventObject || (i = new e.Event(this, t, i)), this._listeners && this._listeners[t]) {
                                var n, r = this._listeners[t].slice(0), o = r.length, a = r[0];
                                for (n = 0; n < o; a = r[++n]) if (a.call(this, i), i.stoppedImmediate) return this;
                                if (i.stopped) return this
                            }
                            return this.parent && this.parent.emit && this.parent.emit.call(this.parent, t, i), this
                        }, t.onPixi = t.addEventListener = function (e, t) {
                            return this._listeners = this._listeners || {}, (this._listeners[e] = this._listeners[e] || []).push(t), this
                        }, t.oncePixi = function (e, t) {
                            this._listeners = this._listeners || {};
                            var i = this;

                            function n() {
                                t.apply(i.offPixi(e, n), arguments)
                            }

                            return n._originalHandler = t, this.onPixi(e, n)
                        }, t.offPixi = t.removeEventListener = function (e, t) {
                            if (this._listeners = this._listeners || {}, !this._listeners[e]) return this;
                            for (var i = this._listeners[e], n = t ? i.length : 0; n-- > 0;) i[n] !== t && i[n]._originalHandler !== t || i.splice(n, 1);
                            return 0 === i.length && delete this._listeners[e], this
                        }, t.removeAllListeners = function (e) {
                            return this._listeners = this._listeners || {}, this._listeners[e] ? (delete this._listeners[e], this) : this
                        }
                    }
                },e.Event = function (e, t, i) {
                    this.__isEventObject = !0, this.stopped = !1, this.stoppedImmediate = !1, this.target = e, this.type = t, this.data = i, this.content = i, this.timeStamp = Date.now()
                },e.Event.prototype.stopPropagation = function () {
                    this.stopped = !0
                },e.Event.prototype.stopImmediatePropagation = function () {
                    this.stoppedImmediate = !0
                },e.autoDetectRenderer = function (t, i, n) {
                    return t || (t = 800), i || (i = 600), function () {
                        try {
                            var e = n.view || document.createElement("canvas"), t = {
                                alpha: n.transparent,
                                antialias: n.antialias,
                                premultipliedAlpha: n.transparent && "notMultiplied" !== n.transparent,
                                stencil: !0,
                                preserveDrawingBuffer: n.preserveDrawingBuffer
                            };
                            return !!window.WebGLRenderingContext && e.getContext("webgl", t)
                        } catch (i) {
                            return console.warn("Failed to create WebGL renderer", i), !1
                        }
                    }() ? new e.WebGLRenderer(t, i, n) : (ga("send", "event", "WebGL", "Failed to create WebGL Context"), new e.CanvasRenderer(t, i, n))
                },e.initDefaultShaders = function () {
                },e.CompileVertexShader = function (t, i) {
                    return e._CompileShader(t, i, t.VERTEX_SHADER)
                },e.CompileFragmentShader = function (t, i) {
                    return e._CompileShader(t, i, t.FRAGMENT_SHADER)
                },e._CompileShader = function (e, t, i) {
                    var n = t.join("\n"), r = e.createShader(i);
                    return e.shaderSource(r, n), e.compileShader(r), e.getShaderParameter(r, e.COMPILE_STATUS) ? r : (window.console.log(e.getShaderInfoLog(r)), null)
                },e.compileProgram = function (t, i, n) {
                    var r = e.CompileFragmentShader(t, n), o = e.CompileVertexShader(t, i), a = t.createProgram();
                    return t.attachShader(a, o), t.attachShader(a, r), t.linkProgram(a), t.getProgramParameter(a, t.LINK_STATUS) || window.console.log("Could not initialise shaders"), a
                },e.PixiShader = function (t) {
                    this._UID = e._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"], this.textureCount = 0, this.firstRun = !0, this.dirty = !0, this.attributes = [], this.init()
                },e.PixiShader.prototype.constructor = e.PixiShader,e.PixiShader.prototype.init = function () {
                    var t = this.gl,
                        i = e.compileProgram(t, this.vertexSrc || e.PixiShader.defaultVertexSrc, this.fragmentSrc);
                    for (var n in t.useProgram(i), this.uSampler = t.getUniformLocation(i, "uSampler"), this.projectionVector = t.getUniformLocation(i, "projectionVector"), this.offsetVector = t.getUniformLocation(i, "offsetVector"), this.dimensions = t.getUniformLocation(i, "dimensions"), this.aVertexPosition = t.getAttribLocation(i, "aVertexPosition"), this.aTextureCoord = t.getAttribLocation(i, "aTextureCoord"), this.colorAttribute = t.getAttribLocation(i, "aColor"), -1 === this.colorAttribute && (this.colorAttribute = 2), this.attributes = [this.aVertexPosition, this.aTextureCoord, this.colorAttribute], this.uniforms) this.uniforms[n].uniformLocation = t.getUniformLocation(i, n);
                    this.initUniforms(), this.program = i
                },e.PixiShader.prototype.initUniforms = function () {
                    this.textureCount = 1;
                    var e, t = this.gl;
                    for (var i in this.uniforms) {
                        var n = (e = this.uniforms[i]).type;
                        "sampler2D" === n ? (e._init = !1, null !== e.value && this.initSampler2D(e)) : "mat2" === n || "mat3" === n || "mat4" === n ? (e.glMatrix = !0, e.glValueLength = 1, "mat2" === n ? e.glFunc = t.uniformMatrix2fv : "mat3" === n ? e.glFunc = t.uniformMatrix3fv : "mat4" === n && (e.glFunc = t.uniformMatrix4fv)) : (e.glFunc = t["uniform" + n], e.glValueLength = "2f" === n || "2i" === n ? 2 : "3f" === n || "3i" === n ? 3 : "4f" === n || "4i" === n ? 4 : 1)
                    }
                },e.PixiShader.prototype.initSampler2D = function (e) {
                    if (e.value && e.value.baseTexture && e.value.baseTexture.hasLoaded) {
                        var t = this.gl;
                        if (t.activeTexture(t["TEXTURE" + this.textureCount]), t.bindTexture(t.TEXTURE_2D, e.value.baseTexture._glTextures[t.id]), e.textureData) {
                            var i = e.textureData, n = i.magFilter ? i.magFilter : t.LINEAR,
                                r = i.minFilter ? i.minFilter : t.LINEAR, o = i.wrapS ? i.wrapS : t.CLAMP_TO_EDGE,
                                a = i.wrapT ? i.wrapT : t.CLAMP_TO_EDGE, s = i.luminance ? t.LUMINANCE : t.RGBA;
                            if (i.repeat && (o = t.REPEAT, a = t.REPEAT), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, !!i.flipY), i.width) {
                                var c = i.width ? i.width : 512, l = i.height ? i.height : 2,
                                    d = i.border ? i.border : 0;
                                t.texImage2D(t.TEXTURE_2D, 0, s, c, l, d, s, t.UNSIGNED_BYTE, null)
                            } else t.texImage2D(t.TEXTURE_2D, 0, s, t.RGBA, t.UNSIGNED_BYTE, e.value.baseTexture.source);
                            t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, n), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, r), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, o), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, a)
                        }
                        t.uniform1i(e.uniformLocation, this.textureCount), e._init = !0, this.textureCount++
                    }
                },e.PixiShader.prototype.syncUniforms = function () {
                    var t;
                    this.textureCount = 1;
                    var i = this.gl;
                    for (var n in this.uniforms) 1 === (t = this.uniforms[n]).glValueLength ? !0 === t.glMatrix ? t.glFunc.call(i, t.uniformLocation, t.transpose, t.value) : t.glFunc.call(i, t.uniformLocation, t.value) : 2 === t.glValueLength ? t.glFunc.call(i, t.uniformLocation, t.value.x, t.value.y) : 3 === t.glValueLength ? t.glFunc.call(i, t.uniformLocation, t.value.x, t.value.y, t.value.z) : 4 === t.glValueLength ? t.glFunc.call(i, t.uniformLocation, t.value.x, t.value.y, t.value.z, t.value.w) : "sampler2D" === t.type && (t._init ? (i.activeTexture(i["TEXTURE" + this.textureCount]), t.value.baseTexture._dirty[i.id] ? e.instances[i.id].updateTexture(t.value.baseTexture) : i.bindTexture(i.TEXTURE_2D, t.value.baseTexture._glTextures[i.id]), i.uniform1i(t.uniformLocation, this.textureCount), this.textureCount++) : this.initSampler2D(t))
                },e.PixiShader.prototype.destroy = function () {
                    this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
                },e.PixiShader.defaultVertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute vec4 aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = vec4(aColor.rgb * aColor.a, aColor.a);", "}"],e.PixiFastShader = function (t) {
                    this._UID = e._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision lowp float;", "varying vec2 vTextureCoord;", "varying float vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec2 aPositionCoord;", "attribute vec2 aScale;", "attribute float aRotation;", "attribute vec2 aTextureCoord;", "attribute float aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform mat3 uMatrix;", "varying vec2 vTextureCoord;", "varying float vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   vec2 v;", "   vec2 sv = aVertexPosition * aScale;", "   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);", "   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);", "   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;", "   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = aColor;", "}"], this.textureCount = 0, this.init()
                },e.PixiFastShader.prototype.constructor = e.PixiFastShader,e.PixiFastShader.prototype.init = function () {
                    var t = this.gl, i = e.compileProgram(t, this.vertexSrc, this.fragmentSrc);
                    t.useProgram(i), this.uSampler = t.getUniformLocation(i, "uSampler"), this.projectionVector = t.getUniformLocation(i, "projectionVector"), this.offsetVector = t.getUniformLocation(i, "offsetVector"), this.dimensions = t.getUniformLocation(i, "dimensions"), this.uMatrix = t.getUniformLocation(i, "uMatrix"), this.aVertexPosition = t.getAttribLocation(i, "aVertexPosition"), this.aPositionCoord = t.getAttribLocation(i, "aPositionCoord"), this.aScale = t.getAttribLocation(i, "aScale"), this.aRotation = t.getAttribLocation(i, "aRotation"), this.aTextureCoord = t.getAttribLocation(i, "aTextureCoord"), this.colorAttribute = t.getAttribLocation(i, "aColor"), -1 === this.colorAttribute && (this.colorAttribute = 2), this.attributes = [this.aVertexPosition, this.aPositionCoord, this.aScale, this.aRotation, this.aTextureCoord, this.colorAttribute], this.program = i
                },e.PixiFastShader.prototype.destroy = function () {
                    this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
                },e.PrimitiveShader = function (t) {
                    this._UID = e._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec4 aColor;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform float alpha;", "uniform float flipY;", "uniform vec3 tint;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);", "   vColor = aColor * vec4(tint * alpha, alpha);", "}"], this.init()
                },e.PrimitiveShader.prototype.constructor = e.PrimitiveShader,e.PrimitiveShader.prototype.init = function () {
                    var t = this.gl, i = e.compileProgram(t, this.vertexSrc, this.fragmentSrc);
                    t.useProgram(i), this.projectionVector = t.getUniformLocation(i, "projectionVector"), this.offsetVector = t.getUniformLocation(i, "offsetVector"), this.tintColor = t.getUniformLocation(i, "tint"), this.flipY = t.getUniformLocation(i, "flipY"), this.aVertexPosition = t.getAttribLocation(i, "aVertexPosition"), this.colorAttribute = t.getAttribLocation(i, "aColor"), this.attributes = [this.aVertexPosition, this.colorAttribute], this.translationMatrix = t.getUniformLocation(i, "translationMatrix"), this.alpha = t.getUniformLocation(i, "alpha"), this.program = i
                },e.PrimitiveShader.prototype.destroy = function () {
                    this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
                },e.ComplexPrimitiveShader = function (t) {
                    this._UID = e._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform vec3 tint;", "uniform float alpha;", "uniform vec3 color;", "uniform float flipY;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);", "   vColor = vec4(color * alpha * tint, alpha);", "}"], this.init()
                },e.ComplexPrimitiveShader.prototype.constructor = e.ComplexPrimitiveShader,e.ComplexPrimitiveShader.prototype.init = function () {
                    var t = this.gl, i = e.compileProgram(t, this.vertexSrc, this.fragmentSrc);
                    t.useProgram(i), this.projectionVector = t.getUniformLocation(i, "projectionVector"), this.offsetVector = t.getUniformLocation(i, "offsetVector"), this.tintColor = t.getUniformLocation(i, "tint"), this.color = t.getUniformLocation(i, "color"), this.flipY = t.getUniformLocation(i, "flipY"), this.aVertexPosition = t.getAttribLocation(i, "aVertexPosition"), this.attributes = [this.aVertexPosition, this.colorAttribute], this.translationMatrix = t.getUniformLocation(i, "translationMatrix"), this.alpha = t.getUniformLocation(i, "alpha"), this.program = i
                },e.ComplexPrimitiveShader.prototype.destroy = function () {
                    this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attribute = null
                },e.WebGLGraphics = function () {
                },e.WebGLGraphics.renderGraphics = function (t, i) {
                    var n, r = i.gl, o = i.projection, a = i.offset, s = i.shaderManager.primitiveShader;
                    t.dirty && e.WebGLGraphics.updateGraphics(t, r);
                    var c = t._webGL[r.id];
                    if (c && c.data) for (var l = 0; l < c.data.length; l++) 1 === c.data[l].mode ? (n = c.data[l], i.stencilManager.pushStencil(t, n, i), r.drawElements(r.TRIANGLE_FAN, 4, r.UNSIGNED_SHORT, 2 * (n.indices.length - 4)), i.stencilManager.popStencil(t, n, i)) : (n = c.data[l], i.shaderManager.setShader(s), s = i.shaderManager.primitiveShader, r.uniformMatrix3fv(s.translationMatrix, !1, t.worldTransform.toArray(!0)), r.uniform1f(s.flipY, 1), r.uniform2f(s.projectionVector, o.x, -o.y), r.uniform2f(s.offsetVector, -a.x, -a.y), r.uniform3fv(s.tintColor, e.hex2rgb(t.tint)), r.uniform1f(s.alpha, t.worldAlpha), r.bindBuffer(r.ARRAY_BUFFER, n.buffer), r.vertexAttribPointer(s.aVertexPosition, 2, r.FLOAT, !1, 24, 0), r.vertexAttribPointer(s.colorAttribute, 4, r.FLOAT, !1, 24, 8), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, n.indexBuffer), r.drawElements(r.TRIANGLE_STRIP, n.indices.length, r.UNSIGNED_SHORT, 0))
                },e.WebGLGraphics.updateGraphics = function (t, i) {
                    var n, r, o = t._webGL[i.id];
                    if (o || (o = t._webGL[i.id] = {
                        lastIndex: 0,
                        data: [],
                        gl: i
                    }), t.dirty && (t.updateLocalBounds(), t.dirty = !1), t.clearDirty) {
                        for (t.clearDirty = !1, n = 0; n < o.data.length; n++) {
                            var a = o.data[n];
                            a.reset(), e.WebGLGraphics.graphicsDataPool.push(a)
                        }
                        o.data = [], o.lastIndex = 0
                    }
                    for (n = o.lastIndex; n < t.graphicsData.length; n++) {
                        var s = t.graphicsData[n];
                        s.type === e.Graphics.POLY ? (s.points = s.shape.points.slice(), s.shape.closed && (s.points[0] === s.points[s.points.length - 2] && s.points[1] === s.points[s.points.length - 1] || s.points.push(s.points[0], s.points[1])), s.fill && s.points.length >= 6 && (s.points.length < 12 ? (r = e.WebGLGraphics.switchMode(o, 0), e.WebGLGraphics.buildPoly(s, r) || (r = e.WebGLGraphics.switchMode(o, 1), e.WebGLGraphics.buildComplexPoly(s, r))) : (r = e.WebGLGraphics.switchMode(o, 1), e.WebGLGraphics.buildComplexPoly(s, r))), s.lineWidth > 0 && (r = e.WebGLGraphics.switchMode(o, 0), e.WebGLGraphics.buildLine(s, r))) : (r = e.WebGLGraphics.switchMode(o, 0), s.type === e.Graphics.RECT ? e.WebGLGraphics.buildRectangle(s, r) : s.type === e.Graphics.CIRC || s.type === e.Graphics.ELIP ? e.WebGLGraphics.buildCircle(s, r) : s.type === e.Graphics.RREC && e.WebGLGraphics.buildRoundedRectangle(s, r)), o.lastIndex++
                    }
                    for (n = 0; n < o.data.length; n++) (r = o.data[n]).dirty && r.upload()
                },e.WebGLGraphics.switchMode = function (t, i) {
                    var n;
                    return t.data.length && (n = t.data[t.data.length - 1]).mode === i && 1 !== i || ((n = e.WebGLGraphics.graphicsDataPool.pop() || new e.WebGLGraphicsData(t.gl)).mode = i, t.data.push(n)), n.dirty = !0, n
                },e.WebGLGraphics.buildRectangle = function (t, i) {
                    var n = t.shape, r = n.x, o = n.y, a = n.width, s = n.height;
                    if (t.fill) {
                        var c = e.hex2rgb(t.fillColor), l = t.fillAlpha, d = c[0] * l, u = c[1] * l, h = c[2] * l,
                            f = i.points, A = i.indices, g = f.length / 6;
                        f.push(r, o), f.push(d, u, h, l), f.push(r + a, o), f.push(d, u, h, l), f.push(r, o + s), f.push(d, u, h, l), f.push(r + a, o + s), f.push(d, u, h, l), A.push(g, g, g + 1, g + 2, g + 3, g + 3)
                    }
                    if (t.lineWidth) {
                        var p = t.points;
                        t.points = [r, o, r + a, o, r + a, o + s, r, o + s, r, o], e.WebGLGraphics.buildLine(t, i), t.points = p
                    }
                },e.WebGLGraphics.buildRoundedRectangle = function (t, i) {
                    var n = t.shape, r = n.x, o = n.y, a = n.width, s = n.height, c = n.radius, l = [];
                    if (l.push(r, o + c), l = (l = (l = (l = l.concat(e.WebGLGraphics.quadraticBezierCurve(r, o + s - c, r, o + s, r + c, o + s))).concat(e.WebGLGraphics.quadraticBezierCurve(r + a - c, o + s, r + a, o + s, r + a, o + s - c))).concat(e.WebGLGraphics.quadraticBezierCurve(r + a, o + c, r + a, o, r + a - c, o))).concat(e.WebGLGraphics.quadraticBezierCurve(r + c, o, r, o, r, o + c)), t.fill) {
                        var d = e.hex2rgb(t.fillColor), u = t.fillAlpha, h = d[0] * u, f = d[1] * u, A = d[2] * u,
                            g = i.points, p = i.indices, v = g.length / 6, w = e.PolyK.Triangulate(l);
                        if (!w) return t.shape.height++, void e.WebGLGraphics.buildRoundedRectangle(t, i);
                        var y = 0;
                        for (y = 0; y < w.length; y += 3) p.push(w[y] + v), p.push(w[y] + v), p.push(w[y + 1] + v), p.push(w[y + 2] + v), p.push(w[y + 2] + v);
                        for (y = 0; y < l.length; y++) g.push(l[y], l[++y], h, f, A, u)
                    }
                    if (t.lineWidth) {
                        var m = t.points;
                        t.points = l, e.WebGLGraphics.buildLine(t, i), t.points = m
                    }
                },e.WebGLGraphics.quadraticBezierCurve = function (e, t, i, n, r, o) {
                    var a, s, c, l, d, u, h = [];

                    function f(e, t, i) {
                        return e + (t - e) * i
                    }

                    for (var A = 0, g = 0; g <= 20; g++) a = f(e, i, A = g / 20), s = f(t, n, A), c = f(i, r, A), l = f(n, o, A), d = f(a, c, A), u = f(s, l, A), h.push(d, u);
                    return h
                },e.WebGLGraphics.buildCircle = function (t, i) {
                    var n, r, o = t.shape, a = o.x, s = o.y;
                    t.type === e.Graphics.CIRC ? (n = o.radius, r = o.radius) : (n = o.width, r = o.height);
                    var c = 2 * Math.PI / 40, l = 0;
                    if (t.fill) {
                        var d = e.hex2rgb(t.fillColor), u = t.fillAlpha, h = d[0] * u, f = d[1] * u, A = d[2] * u,
                            g = i.points, p = i.indices, v = g.length / 6;
                        for (p.push(v), l = 0; l < 41; l++) g.push(a, s, h, f, A, u), g.push(a + Math.sin(c * l) * n, s + Math.cos(c * l) * r, h, f, A, u), p.push(v++, v++);
                        p.push(v - 1)
                    }
                    if (t.lineWidth) {
                        var w = t.points;
                        for (t.points = [], l = 0; l < 41; l++) t.points.push(a + Math.sin(c * l) * n, s + Math.cos(c * l) * r);
                        e.WebGLGraphics.buildLine(t, i), t.points = w
                    }
                },e.WebGLGraphics.buildLine = function (t, i) {
                    var n = 0, r = t.points;
                    if (0 !== r.length) {
                        if (t.lineWidth % 2) for (n = 0; n < r.length; n++) r[n] += .5;
                        var o = new e.Point(r[0], r[1]), a = new e.Point(r[r.length - 2], r[r.length - 1]);
                        if (o.x === a.x && o.y === a.y) {
                            (r = r.slice()).pop(), r.pop();
                            var s = (a = new e.Point(r[r.length - 2], r[r.length - 1])).x + .5 * (o.x - a.x),
                                c = a.y + .5 * (o.y - a.y);
                            r.unshift(s, c), r.push(s, c)
                        }
                        var l, d, u, h, f, A, g, p, v, w, y, m, C, I, E, S, b, x, B, P, Q, R, D = i.points,
                            k = i.indices, M = r.length / 2, H = r.length, T = D.length / 6, L = t.lineWidth / 2,
                            O = e.hex2rgb(t.lineColor), F = t.lineAlpha, X = O[0] * F, G = O[1] * F, z = O[2] * F;
                        for (u = r[0], h = r[1], f = r[2], v = -(h - (A = r[3])), w = u - f, v /= R = Math.sqrt(v * v + w * w), w /= R, v *= L, w *= L, D.push(u - v, h - w, X, G, z, F), D.push(u + v, h + w, X, G, z, F), n = 1; n < M - 1; n++) u = r[2 * (n - 1)], h = r[2 * (n - 1) + 1], f = r[2 * n], A = r[2 * n + 1], g = r[2 * (n + 1)], p = r[2 * (n + 1) + 1], v = -(h - A), w = u - f, v /= R = Math.sqrt(v * v + w * w), w /= R, v *= L, w *= L, y = -(A - p), m = f - g, y /= R = Math.sqrt(y * y + m * m), m /= R, b = (-v + u) * (-w + A) - (-v + f) * (-w + h), P = (-(y *= L) + g) * (-(m *= L) + A) - (-y + f) * (-m + p), Q = (E = -w + h - (-w + A)) * (B = -y + f - (-y + g)) - (x = -m + p - (-m + A)) * (S = -v + f - (-v + u)), Math.abs(Q) < .1 ? (Q += 10.1, D.push(f - v, A - w, X, G, z, F), D.push(f + v, A + w, X, G, z, F)) : ((l = (S * P - B * b) / Q) - f) * (l - f) + ((d = (x * b - E * P) / Q) - A) + (d - A) > 19600 ? (C = v - y, I = w - m, C /= R = Math.sqrt(C * C + I * I), I /= R, C *= L, I *= L, D.push(f - C, A - I), D.push(X, G, z, F), D.push(f + C, A + I), D.push(X, G, z, F), D.push(f - C, A - I), D.push(X, G, z, F), H++) : (D.push(l, d), D.push(X, G, z, F), D.push(f - (l - f), A - (d - A)), D.push(X, G, z, F));
                        for (u = r[2 * (M - 2)], h = r[2 * (M - 2) + 1], f = r[2 * (M - 1)], v = -(h - (A = r[2 * (M - 1) + 1])), w = u - f, v /= R = Math.sqrt(v * v + w * w), w /= R, v *= L, w *= L, D.push(f - v, A - w), D.push(X, G, z, F), D.push(f + v, A + w), D.push(X, G, z, F), k.push(T), n = 0; n < H; n++) k.push(T++);
                        k.push(T - 1)
                    }
                },e.WebGLGraphics.buildComplexPoly = function (t, i) {
                    var n = t.points.slice();
                    if (!(n.length < 6)) {
                        var r = i.indices;
                        i.points = n, i.alpha = t.fillAlpha, i.color = e.hex2rgb(t.fillColor);
                        for (var o, a, s = 1 / 0, c = -1 / 0, l = 1 / 0, d = -1 / 0, u = 0; u < n.length; u += 2) s = (o = n[u]) < s ? o : s, c = o > c ? o : c, l = (a = n[u + 1]) < l ? a : l, d = a > d ? a : d;
                        n.push(s, l, c, l, c, d, s, d);
                        var h = n.length / 2;
                        for (u = 0; u < h; u++) r.push(u)
                    }
                },e.WebGLGraphics.buildPoly = function (t, i) {
                    var n = t.points;
                    if (!(n.length < 6)) {
                        var r = i.points, o = i.indices, a = n.length / 2, s = e.hex2rgb(t.fillColor), c = t.fillAlpha,
                            l = s[0] * c, d = s[1] * c, u = s[2] * c, h = e.PolyK.Triangulate(n);
                        if (!h) return !1;
                        var f = r.length / 6, A = 0;
                        for (A = 0; A < h.length; A += 3) o.push(h[A] + f), o.push(h[A] + f), o.push(h[A + 1] + f), o.push(h[A + 2] + f), o.push(h[A + 2] + f);
                        for (A = 0; A < a; A++) r.push(n[2 * A], n[2 * A + 1], l, d, u, c);
                        return !0
                    }
                },e.WebGLGraphics.graphicsDataPool = [],e.WebGLGraphicsData = function (e) {
                    this.gl = e, this.color = [0, 0, 0], this.points = [], this.indices = [], this.buffer = e.createBuffer(), this.indexBuffer = e.createBuffer(), this.mode = 1, this.alpha = 1, this.dirty = !0
                },e.WebGLGraphicsData.prototype.reset = function () {
                    this.points = [], this.indices = []
                },e.WebGLGraphicsData.prototype.upload = function () {
                    var t = this.gl;
                    this.glPoints = new e.Float32Array(this.points), t.bindBuffer(t.ARRAY_BUFFER, this.buffer), t.bufferData(t.ARRAY_BUFFER, this.glPoints, t.STATIC_DRAW), this.glIndicies = new e.Uint16Array(this.indices), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.glIndicies, t.STATIC_DRAW), this.dirty = !1
                },e.glContexts = [],e.instances = [],e.WebGLRenderer = function (t, i, n) {
                    if (n) for (var r in e.defaultRenderOptions) void 0 === n[r] && (n[r] = e.defaultRenderOptions[r]); else n = e.defaultRenderOptions;
                    e.defaultRenderer || (e.defaultRenderer = this), this.type = e.WEBGL_RENDERER, this.transparent = n.transparent, this.autoResize = n.autoResize || !1, this.preserveDrawingBuffer = n.preserveDrawingBuffer, this.clearBeforeRender = n.clearBeforeRender, this.width = t || 800, this.height = i || 600, this.view = n.view || document.createElement("canvas"), this.contextLostBound = this.handleContextLost.bind(this), this.contextRestoredBound = this.handleContextRestored.bind(this), this.view.addEventListener("webglcontextlost", this.contextLostBound, !1), this.view.addEventListener("webglcontextrestored", this.contextRestoredBound, !1), this._contextOptions = {
                        alpha: this.transparent,
                        antialias: n.antialias,
                        premultipliedAlpha: this.transparent && "notMultiplied" !== this.transparent,
                        stencil: !0,
                        preserveDrawingBuffer: n.preserveDrawingBuffer
                    }, this.projection = new e.Point, this.offset = new e.Point(0, 0), this.shaderManager = new e.WebGLShaderManager, this.spriteBatch = new e.WebGLSpriteBatch, this.maskManager = new e.WebGLMaskManager, this.filterManager = new e.WebGLFilterManager, this.stencilManager = new e.WebGLStencilManager, this.blendModeManager = new e.WebGLBlendModeManager, this.renderSession = {}, this.renderSession.gl = this.gl, this.renderSession.drawCount = 0, this.renderSession.shaderManager = this.shaderManager, this.renderSession.maskManager = this.maskManager, this.renderSession.filterManager = this.filterManager, this.renderSession.blendModeManager = this.blendModeManager, this.renderSession.spriteBatch = this.spriteBatch, this.renderSession.stencilManager = this.stencilManager, this.renderSession.renderer = this, this.initContext(), this.mapBlendModes()
                },e.WebGLRenderer.prototype.constructor = e.WebGLRenderer,e.WebGLRenderer.prototype.initContext = function () {
                    var t = this.view.getContext("webgl", this._contextOptions);
                    if (this.gl = t, !t) throw new Error("This browser does not support webGL. Try using the canvas renderer");
                    this.glContextId = t.id = e.WebGLRenderer.glContextId++, e.glContexts[this.glContextId] = t, e.instances[this.glContextId] = this, t.disable(t.DEPTH_TEST), t.disable(t.CULL_FACE), t.enable(t.BLEND), this.shaderManager.setContext(t), this.spriteBatch.setContext(t), this.maskManager.setContext(t), this.filterManager.setContext(t), this.blendModeManager.setContext(t), this.stencilManager.setContext(t), this.renderSession.gl = this.gl, this.resize(this.width, this.height)
                },e.WebGLRenderer.prototype.render = function (e) {
                    if (!this.contextLost) {
                        this.__stage !== e && (e.interactive && e.interactionManager.removeEvents(), this.__stage = e), e.updateTransform();
                        var t = this.gl;
                        e._interactiveEventsAdded || (e._interactiveEventsAdded = !0, e.interactionManager.setTarget(this)), t.viewport(0, 0, this.width, this.height), t.bindFramebuffer(t.FRAMEBUFFER, null), t.clearColor(e.backgroundColorSplit[0], e.backgroundColorSplit[1], e.backgroundColorSplit[2], 1), t.clear(t.COLOR_BUFFER_BIT), this.renderDisplayObject(e, this.projection)
                    }
                },e.WebGLRenderer.prototype.renderDisplayObject = function (t, i, n) {
                    this.renderSession.blendModeManager.setBlendMode(e.blendModes.NORMAL), this.renderSession.drawCount = 0, this.renderSession.flipY = n ? -1 : 1, this.renderSession.projection = i, this.renderSession.offset = this.offset, this.spriteBatch.begin(this.renderSession), this.filterManager.begin(this.renderSession, n), t._renderWebGL(this.renderSession), this.spriteBatch.end()
                },e.WebGLRenderer.prototype.resize = function (e, t) {
                    this.width = e, this.height = t, this.view.width = this.width, this.view.height = this.height, this.gl.viewport(0, 0, this.width, this.height), this.projection.x = this.width / 2, this.projection.y = -this.height / 2
                },e.WebGLRenderer.prototype.updateTexture = function (t) {
                    if (t.hasLoaded && t.source && t.source.width && t.source.height && !t.isMock && !t.source.isMock) {
                        var i = this.gl;
                        try {
                            void 0 !== this._lastSize && (e.XYYXTextureMemoryUsage -= 4 * t._lastSize.w * t._lastSize.h)
                        } catch (n) {
                        }
                        t._glTextures[i.id] || (t._glTextures[i.id] = i.createTexture()), i.bindTexture(i.TEXTURE_2D, t._glTextures[i.id]), i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultipliedAlpha), i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, i.RGBA, i.UNSIGNED_BYTE, t.source);
                        try {
                            e.XYYXTextureMemoryUsage += 4 * t.source.width * t.source.height, t._lastSize = {
                                w: t.source.width,
                                h: t.source.height
                            }
                        } catch (n) {
                        }
                        return i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, t.scaleMode === e.scaleModes.LINEAR ? i.LINEAR : i.NEAREST), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, t.scaleMode === e.scaleModes.LINEAR ? i.LINEAR : i.NEAREST), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.CLAMP_TO_EDGE), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.CLAMP_TO_EDGE), t._dirty[i.id] = !1, t._glTextures[i.id]
                    }
                },e.WebGLRenderer.prototype.handleContextLost = function (e) {
                    (void 0 === e.cancelable || e.cancelable) && e.preventDefault(), this.contextLost = !0
                },e.WebGLRenderer.prototype.handleContextRestored = function () {
                    for (var t in this.initContext(), e.TextureCache) e.TextureCache[t].baseTexture._glTextures = [];
                    this.contextLost = !1
                },e.WebGLRenderer.prototype.destroy = function () {
                    this.view.removeEventListener("webglcontextlost", this.contextLostBound), this.view.removeEventListener("webglcontextrestored", this.contextRestoredBound), e.glContexts[this.glContextId] = null, this.projection = null, this.offset = null, this.shaderManager.destroy(), this.spriteBatch.destroy(), this.maskManager.destroy(), this.filterManager.destroy(), this.shaderManager = null, this.spriteBatch = null, this.maskManager = null, this.filterManager = null, this.gl = null, this.renderSession = null
                },e.WebGLRenderer.prototype.mapBlendModes = function () {
                    var t = this.gl;
                    e.blendModesWebGL || (e.blendModesWebGL = [], e.blendModesWebGL[e.blendModes.NORMAL] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], e.blendModesWebGL[e.blendModes.ADD] = [t.SRC_ALPHA, t.ONE], e.blendModesWebGL[e.blendModes.MULTIPLY] = [t.DST_COLOR, t.ONE_MINUS_SRC_ALPHA], e.blendModesWebGL[e.blendModes.SCREEN] = [t.SRC_ALPHA, t.ONE])
                },e.WebGLRenderer.glContextId = 0,e.WebGLBlendModeManager = function () {
                    this.currentBlendMode = 99999
                },e.WebGLBlendModeManager.prototype.constructor = e.WebGLBlendModeManager,e.WebGLBlendModeManager.prototype.setContext = function (e) {
                    this.gl = e
                },e.WebGLBlendModeManager.prototype.setBlendMode = function (t) {
                    if (this.currentBlendMode === t) return !1;
                    this.currentBlendMode = t;
                    var i = e.blendModesWebGL[this.currentBlendMode];
                    return this.gl.blendFunc(i[0], i[1]), !0
                },e.WebGLBlendModeManager.prototype.destroy = function () {
                    this.gl = null
                },e.WebGLMaskManager = function () {
                },e.WebGLMaskManager.prototype.constructor = e.WebGLMaskManager,e.WebGLMaskManager.prototype.setContext = function (e) {
                    this.gl = e
                },e.WebGLMaskManager.prototype.pushMask = function (t, i) {
                    var n = i.gl;
                    t.dirty && e.WebGLGraphics.updateGraphics(t, n), t._webGL[n.id].data.length && i.stencilManager.pushStencil(t, t._webGL[n.id].data[0], i)
                },e.WebGLMaskManager.prototype.popMask = function (e, t) {
                    var i = this.gl;
                    t.stencilManager.popStencil(e, e._webGL[i.id].data[0], t)
                },e.WebGLMaskManager.prototype.destroy = function () {
                    this.gl = null
                },e.WebGLStencilManager = function () {
                    this.stencilStack = [], this.reverse = !0, this.count = 0
                },e.WebGLStencilManager.prototype.setContext = function (e) {
                    this.gl = e
                },e.WebGLStencilManager.prototype.pushStencil = function (e, t, i) {
                    var n = this.gl;
                    this.bindGraphics(e, t, i), 0 === this.stencilStack.length && (n.enable(n.STENCIL_TEST), n.clear(n.STENCIL_BUFFER_BIT), this.reverse = !0, this.count = 0), this.stencilStack.push(t);
                    var r = this.count;
                    n.colorMask(!1, !1, !1, !1), n.stencilFunc(n.ALWAYS, 0, 255), n.stencilOp(n.KEEP, n.KEEP, n.INVERT), 1 === t.mode ? (n.drawElements(n.TRIANGLE_FAN, t.indices.length - 4, n.UNSIGNED_SHORT, 0), this.reverse ? (n.stencilFunc(n.EQUAL, 255 - r, 255), n.stencilOp(n.KEEP, n.KEEP, n.DECR)) : (n.stencilFunc(n.EQUAL, r, 255), n.stencilOp(n.KEEP, n.KEEP, n.INCR)), n.drawElements(n.TRIANGLE_FAN, 4, n.UNSIGNED_SHORT, 2 * (t.indices.length - 4)), this.reverse ? n.stencilFunc(n.EQUAL, 255 - (r + 1), 255) : n.stencilFunc(n.EQUAL, r + 1, 255), this.reverse = !this.reverse) : (this.reverse ? (n.stencilFunc(n.EQUAL, r, 255), n.stencilOp(n.KEEP, n.KEEP, n.INCR)) : (n.stencilFunc(n.EQUAL, 255 - r, 255), n.stencilOp(n.KEEP, n.KEEP, n.DECR)), n.drawElements(n.TRIANGLE_STRIP, t.indices.length, n.UNSIGNED_SHORT, 0), this.reverse ? n.stencilFunc(n.EQUAL, r + 1, 255) : n.stencilFunc(n.EQUAL, 255 - (r + 1), 255)), n.colorMask(!0, !0, !0, !0), n.stencilOp(n.KEEP, n.KEEP, n.KEEP), this.count++
                },e.WebGLStencilManager.prototype.bindGraphics = function (t, i, n) {
                    this._currentGraphics = t;
                    var r, o = this.gl, a = n.projection, s = n.offset;
                    1 === i.mode ? (r = n.shaderManager.complexPrimitiveShader, n.shaderManager.setShader(r), o.uniform1f(r.flipY, n.flipY), o.uniformMatrix3fv(r.translationMatrix, !1, t.worldTransform.toArray(!0)), o.uniform2f(r.projectionVector, a.x, -a.y), o.uniform2f(r.offsetVector, -s.x, -s.y), o.uniform3fv(r.tintColor, e.hex2rgb(t.tint)), o.uniform3fv(r.color, i.color), o.uniform1f(r.alpha, t.worldAlpha * i.alpha), o.bindBuffer(o.ARRAY_BUFFER, i.buffer), o.vertexAttribPointer(r.aVertexPosition, 2, o.FLOAT, !1, 8, 0), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, i.indexBuffer)) : (r = n.shaderManager.primitiveShader, n.shaderManager.setShader(r), o.uniformMatrix3fv(r.translationMatrix, !1, t.worldTransform.toArray(!0)), o.uniform1f(r.flipY, n.flipY), o.uniform2f(r.projectionVector, a.x, -a.y), o.uniform2f(r.offsetVector, -s.x, -s.y), o.uniform3fv(r.tintColor, e.hex2rgb(t.tint)), o.uniform1f(r.alpha, t.worldAlpha), o.bindBuffer(o.ARRAY_BUFFER, i.buffer), o.vertexAttribPointer(r.aVertexPosition, 2, o.FLOAT, !1, 24, 0), o.vertexAttribPointer(r.colorAttribute, 4, o.FLOAT, !1, 24, 8), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, i.indexBuffer))
                },e.WebGLStencilManager.prototype.popStencil = function (e, t, i) {
                    var n = this.gl;
                    if (this.stencilStack.pop(), this.count--, 0 === this.stencilStack.length) n.disable(n.STENCIL_TEST); else {
                        var r = this.count;
                        this.bindGraphics(e, t, i), n.colorMask(!1, !1, !1, !1), 1 === t.mode ? (this.reverse = !this.reverse, this.reverse ? (n.stencilFunc(n.EQUAL, 255 - (r + 1), 255), n.stencilOp(n.KEEP, n.KEEP, n.INCR)) : (n.stencilFunc(n.EQUAL, r + 1, 255), n.stencilOp(n.KEEP, n.KEEP, n.DECR)), n.drawElements(n.TRIANGLE_FAN, 4, n.UNSIGNED_SHORT, 2 * (t.indices.length - 4)), n.stencilFunc(n.ALWAYS, 0, 255), n.stencilOp(n.KEEP, n.KEEP, n.INVERT), n.drawElements(n.TRIANGLE_FAN, t.indices.length - 4, n.UNSIGNED_SHORT, 0), this.reverse ? n.stencilFunc(n.EQUAL, r, 255) : n.stencilFunc(n.EQUAL, 255 - r, 255)) : (this.reverse ? (n.stencilFunc(n.EQUAL, r + 1, 255), n.stencilOp(n.KEEP, n.KEEP, n.DECR)) : (n.stencilFunc(n.EQUAL, 255 - (r + 1), 255), n.stencilOp(n.KEEP, n.KEEP, n.INCR)), n.drawElements(n.TRIANGLE_STRIP, t.indices.length, n.UNSIGNED_SHORT, 0), this.reverse ? n.stencilFunc(n.EQUAL, r, 255) : n.stencilFunc(n.EQUAL, 255 - r, 255)), n.colorMask(!0, !0, !0, !0), n.stencilOp(n.KEEP, n.KEEP, n.KEEP)
                    }
                },e.WebGLStencilManager.prototype.destroy = function () {
                    this.stencilStack = null, this.gl = null
                },e.WebGLShaderManager = function () {
                    this.maxAttibs = 10, this.attribState = [], this.tempAttribState = [];
                    for (var e = 0; e < this.maxAttibs; e++) this.attribState[e] = !1;
                    this.stack = []
                },e.WebGLShaderManager.prototype.constructor = e.WebGLShaderManager,e.WebGLShaderManager.prototype.setContext = function (t) {
                    this.gl = t, this.primitiveShader = new e.PrimitiveShader(t), this.complexPrimitiveShader = new e.ComplexPrimitiveShader(t), this.defaultShader = new e.PixiShader(t), this.fastShader = new e.PixiFastShader(t), this.setShader(this.defaultShader)
                },e.WebGLShaderManager.prototype.setAttribs = function (e) {
                    var t;
                    for (t = 0; t < this.tempAttribState.length; t++) this.tempAttribState[t] = !1;
                    for (t = 0; t < e.length; t++) {
                        var i = e[t];
                        this.tempAttribState[i] = !0
                    }
                    var n = this.gl;
                    for (t = 0; t < this.attribState.length; t++) this.attribState[t] !== this.tempAttribState[t] && (this.attribState[t] = this.tempAttribState[t], this.tempAttribState[t] ? n.enableVertexAttribArray(t) : n.disableVertexAttribArray(t))
                },e.WebGLShaderManager.prototype.setShader = function (e) {
                    return this._currentId !== e._UID && (this._currentId = e._UID, this.currentShader = e, this.gl.useProgram(e.program), this.setAttribs(e.attributes), !0)
                },e.WebGLShaderManager.prototype.destroy = function () {
                    this.attribState = null, this.tempAttribState = null, this.primitiveShader.destroy(), this.complexPrimitiveShader.destroy(), this.defaultShader.destroy(), this.fastShader.destroy(), this.gl = null
                },e.WebGLSpriteBatch = function () {
                    this.vertSize = 5, this.size = 2e3;
                    var t = 4 * this.size * 4 * this.vertSize, i = 6 * this.size;
                    this.vertices = new e.ArrayBuffer(t), this.positions = new e.Float32Array(this.vertices), this.colors = new e.Uint32Array(this.vertices), this.indices = new e.Uint16Array(i), this.lastIndexCount = 0;
                    for (var n = 0, r = 0; n < i; n += 6, r += 4) this.indices[n + 0] = r + 0, this.indices[n + 1] = r + 1, this.indices[n + 2] = r + 2, this.indices[n + 3] = r + 0, this.indices[n + 4] = r + 2, this.indices[n + 5] = r + 3;
                    this.drawing = !1, this.currentBatchSize = 0, this.currentBaseTexture = null, this.dirty = !0, this.textures = [], this.blendModes = [], this.shaders = [], this.sprites = [], this.defaultShader = new e.AbstractFilter(["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"])
                },e.WebGLSpriteBatch.prototype.setContext = function (t) {
                    this.gl = t, this.vertexBuffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bufferData(t.ARRAY_BUFFER, this.vertices, t.DYNAMIC_DRAW), this.currentBlendMode = 99999;
                    var i = new e.PixiShader(t);
                    i.fragmentSrc = this.defaultShader.fragmentSrc, i.uniforms = {}, i.init(), this.defaultShader.shaders[t.id] = i
                },e.WebGLSpriteBatch.prototype.begin = function (e) {
                    this.renderSession = e, this.shader = this.renderSession.shaderManager.defaultShader, this.start()
                },e.WebGLSpriteBatch.prototype.end = function () {
                    this.flush()
                },e.WebGLSpriteBatch.prototype.render = function (e) {
                    var t = e.texture;
                    this.currentBatchSize >= this.size && (this.flush(), this.currentBaseTexture = t.baseTexture), t.resolution;
                    var i = t._uvs;
                    if (i) {
                        var n, r, o, a, s = e.anchor.x, c = e.anchor.y;
                        if (t.trim) {
                            var l = t.trim;
                            n = (r = l.x - s * l.width) + t.frame.width, o = (a = l.y - c * l.height) + t.frame.height
                        } else n = t.frame.width * (1 - s), r = t.frame.width * -s, o = t.frame.height * (1 - c), a = t.frame.height * -c;
                        var d = 4 * this.currentBatchSize * this.vertSize, u = e.worldTransform, h = u.a, f = u.b,
                            A = u.c, g = u.d, p = u.tx, v = u.ty, w = this.colors, y = this.positions;
                        if (e.bitmapPolygon) {
                            var m = e.bitmapPolygonCords;
                            y[d] = m[0] + p | 0, y[d + 1] = m[1] + v | 0, y[d + 5] = m[2] + p | 0, y[d + 6] = m[3] + v | 0, y[d + 10] = m[4] + p | 0, y[d + 11] = m[5] + v | 0, y[d + 15] = m[6] + p | 0, y[d + 16] = m[7] + v | 0
                        } else t.floorCoordinates ? (y[d] = h * r + A * a + p | 0, y[d + 1] = g * a + f * r + v | 0, y[d + 5] = h * n + A * a + p | 0, y[d + 6] = g * a + f * n + v | 0, y[d + 10] = h * n + A * o + p | 0, y[d + 11] = g * o + f * n + v | 0, y[d + 15] = h * r + A * o + p | 0, y[d + 16] = g * o + f * r + v | 0) : (y[d] = h * r + A * a + p, y[d + 1] = g * a + f * r + v, y[d + 5] = h * n + A * a + p, y[d + 6] = g * a + f * n + v, y[d + 10] = h * n + A * o + p, y[d + 11] = g * o + f * n + v, y[d + 15] = h * r + A * o + p, y[d + 16] = g * o + f * r + v);
                        y[d + 2] = i.x0, y[d + 3] = i.y0, y[d + 7] = i.x1, y[d + 8] = i.y1, y[d + 12] = i.x2, y[d + 13] = i.y2, y[d + 17] = i.x3, y[d + 18] = i.y3;
                        var C = e.tint;
                        w[d + 4] = w[d + 9] = w[d + 14] = w[d + 19] = (C >> 16) + (65280 & C) + ((255 & C) << 16) + (255 * e.worldAlpha << 24), this.sprites[this.currentBatchSize++] = e
                    }
                },e.WebGLSpriteBatch.prototype.renderTilingSprite = function (t) {
                    var i = t.tilingTexture;
                    this.currentBatchSize >= this.size && (this.flush(), this.currentBaseTexture = i.baseTexture), t._uvs || (t._uvs = new e.TextureUvs);
                    var n = t._uvs;
                    t.tilePosition.x %= i.baseTexture.width * t.tileScaleOffset.x, t.tilePosition.y %= i.baseTexture.height * t.tileScaleOffset.y;
                    var r = t.tilePosition.x / (i.baseTexture.width * t.tileScaleOffset.x),
                        o = t.tilePosition.y / (i.baseTexture.height * t.tileScaleOffset.y),
                        a = t.width / i.baseTexture.width / (t.tileScale.x * t.tileScaleOffset.x),
                        s = t.height / i.baseTexture.height / (t.tileScale.y * t.tileScaleOffset.y);
                    n.x0 = 0 - r, n.y0 = 0 - o, n.x1 = 1 * a - r, n.y1 = 0 - o, n.x2 = 1 * a - r, n.y2 = 1 * s - o, n.x3 = 0 - r, n.y3 = 1 * s - o;
                    var c = t.tint, l = (c >> 16) + (65280 & c) + ((255 & c) << 16) + (255 * t.alpha << 24),
                        d = this.positions, u = this.colors, h = t.width, f = t.height, A = t.anchor.x, g = t.anchor.y,
                        p = h * (1 - A), v = h * -A, w = f * (1 - g), y = f * -g,
                        m = 4 * this.currentBatchSize * this.vertSize, C = t.worldTransform, I = C.a, E = C.b, S = C.c,
                        b = C.d, x = C.tx, B = C.ty;
                    d[m++] = I * v + S * y + x, d[m++] = b * y + E * v + B, d[m++] = n.x0, d[m++] = n.y0, u[m++] = l, d[m++] = I * p + S * y + x, d[m++] = b * y + E * p + B, d[m++] = n.x1, d[m++] = n.y1, u[m++] = l, d[m++] = I * p + S * w + x, d[m++] = b * w + E * p + B, d[m++] = n.x2, d[m++] = n.y2, u[m++] = l, d[m++] = I * v + S * w + x, d[m++] = b * w + E * v + B, d[m++] = n.x3, d[m++] = n.y3, u[m++] = l, this.sprites[this.currentBatchSize++] = t
                },e.WebGLSpriteBatch.prototype.flush = function () {
                    if (0 !== this.currentBatchSize) {
                        var t, i, n, r, o = this.gl;
                        if (this.dirty) {
                            this.dirty = !1, o.activeTexture(o.TEXTURE0), o.bindBuffer(o.ARRAY_BUFFER, this.vertexBuffer), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t = this.defaultShader.shaders[o.id];
                            var a = 4 * this.vertSize;
                            o.vertexAttribPointer(t.aVertexPosition, 2, o.FLOAT, !1, a, 0), o.vertexAttribPointer(t.aTextureCoord, 2, o.FLOAT, !1, a, 8), o.vertexAttribPointer(t.colorAttribute, 4, o.UNSIGNED_BYTE, !0, a, 16)
                        }
                        if (this.currentBatchSize > .5 * this.size) o.bufferSubData(o.ARRAY_BUFFER, 0, this.vertices); else {
                            var s = this.positions.subarray(0, 4 * this.currentBatchSize * this.vertSize);
                            o.bufferSubData(o.ARRAY_BUFFER, 0, s)
                        }
                        for (var c, l = 0, d = 0, u = null, h = this.renderSession.blendModeManager.currentBlendMode, f = null, A = !1, g = !1, p = 0, v = this.currentBatchSize; p < v; p++) {
                            if (i = (c = this.sprites[p]).texture.baseTexture, A = h !== (n = c.blendMode), g = f !== (r = c.shader || this.defaultShader), (u !== i || A || g) && (this.renderBatch(u, l, d), d = p, l = 0, u = i, A && (h = n, this.renderSession.blendModeManager.setBlendMode(h)), g)) {
                                (t = (f = r).shaders[o.id]) || ((t = new e.PixiShader(o)).fragmentSrc = f.fragmentSrc, t.uniforms = f.uniforms, t.init(), f.shaders[o.id] = t), this.renderSession.shaderManager.setShader(t), t.dirty && t.syncUniforms();
                                var w = this.renderSession.projection;
                                o.uniform2f(t.projectionVector, w.x, w.y);
                                var y = this.renderSession.offset;
                                o.uniform2f(t.offsetVector, y.x, y.y)
                            }
                            l++
                        }
                        this.renderBatch(u, l, d), this.currentBatchSize = 0
                    }
                },e.WebGLSpriteBatch.prototype.renderBatch = function (e, t, i) {
                    if (0 !== t) {
                        var n = this.gl;
                        e._dirty[n.id] ? this.renderSession.renderer.updateTexture(e) : n.bindTexture(n.TEXTURE_2D, e._glTextures[n.id]), n.drawElements(n.TRIANGLES, 6 * t, n.UNSIGNED_SHORT, 6 * i * 2), this.renderSession.drawCount++
                    }
                },e.WebGLSpriteBatch.prototype.stop = function () {
                    this.flush(), this.dirty = !0
                },e.WebGLSpriteBatch.prototype.start = function () {
                    this.dirty = !0
                },e.WebGLSpriteBatch.prototype.destroy = function () {
                    this.vertices = null, this.indices = null, this.gl.deleteBuffer(this.vertexBuffer), this.gl.deleteBuffer(this.indexBuffer), this.currentBaseTexture = null, this.gl = null
                },e.WebGLFastSpriteBatch = function (t) {
                    this.vertSize = 10, this.maxSize = 6e3, this.size = this.maxSize;
                    var i = 4 * this.size * this.vertSize, n = 6 * this.maxSize;
                    this.vertices = new e.Float32Array(i), this.indices = new e.Uint16Array(n), this.vertexBuffer = null, this.indexBuffer = null, this.lastIndexCount = 0;
                    for (var r = 0, o = 0; r < n; r += 6, o += 4) this.indices[r + 0] = o + 0, this.indices[r + 1] = o + 1, this.indices[r + 2] = o + 2, this.indices[r + 3] = o + 0, this.indices[r + 4] = o + 2, this.indices[r + 5] = o + 3;
                    this.drawing = !1, this.currentBatchSize = 0, this.currentBaseTexture = null, this.currentBlendMode = 0, this.renderSession = null, this.shader = null, this.matrix = null, this.setContext(t)
                },e.WebGLFastSpriteBatch.prototype.constructor = e.WebGLFastSpriteBatch,e.WebGLFastSpriteBatch.prototype.setContext = function (e) {
                    this.gl = e, this.vertexBuffer = e.createBuffer(), this.indexBuffer = e.createBuffer(), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, this.indexBuffer), e.bufferData(e.ELEMENT_ARRAY_BUFFER, this.indices, e.STATIC_DRAW), e.bindBuffer(e.ARRAY_BUFFER, this.vertexBuffer), e.bufferData(e.ARRAY_BUFFER, this.vertices, e.DYNAMIC_DRAW)
                },e.WebGLFastSpriteBatch.prototype.begin = function (e, t) {
                    this.renderSession = t, this.shader = this.renderSession.shaderManager.fastShader, this.matrix = e.worldTransform.toArray(!0), this.start()
                },e.WebGLFastSpriteBatch.prototype.end = function () {
                    this.flush()
                },e.WebGLFastSpriteBatch.prototype.render = function (e) {
                    var t = e.children, i = t[0];
                    if (i.texture._uvs) {
                        this.currentBaseTexture = i.texture.baseTexture, i.blendMode !== this.renderSession.blendModeManager.currentBlendMode && (this.flush(), this.renderSession.blendModeManager.setBlendMode(i.blendMode));
                        for (var n = 0, r = t.length; n < r; n++) this.renderSprite(t[n]);
                        this.flush()
                    }
                },e.WebGLFastSpriteBatch.prototype.renderSprite = function (e) {
                    if (e.visible && (e.texture.baseTexture === this.currentBaseTexture || (this.flush(), this.currentBaseTexture = e.texture.baseTexture, e.texture._uvs))) {
                        var t, i, n, r, o, a, s = this.vertices;
                        if (t = e.texture._uvs, e.texture.resolution, e.texture.frame.width, e.texture.frame.height, e.texture.trim) {
                            var c = e.texture.trim;
                            i = (n = c.x - e.anchor.x * c.width) + e.texture.frame.width, r = (o = c.y - e.anchor.y * c.height) + e.texture.frame.height
                        } else i = e.texture.frame.width * (1 - e.anchor.x), n = e.texture.frame.width * -e.anchor.x, r = e.texture.frame.height * (1 - e.anchor.y), o = e.texture.frame.height * -e.anchor.y;
                        a = 4 * this.currentBatchSize * this.vertSize, s[a++] = n, s[a++] = o, s[a++] = e.position.x, s[a++] = e.position.y, s[a++] = e.scale.x, s[a++] = e.scale.y, s[a++] = e.rotation, s[a++] = t.x0, s[a++] = t.y1, s[a++] = e.alpha, s[a++] = i, s[a++] = o, s[a++] = e.position.x, s[a++] = e.position.y, s[a++] = e.scale.x, s[a++] = e.scale.y, s[a++] = e.rotation, s[a++] = t.x1, s[a++] = t.y1, s[a++] = e.alpha, s[a++] = i, s[a++] = r, s[a++] = e.position.x, s[a++] = e.position.y, s[a++] = e.scale.x, s[a++] = e.scale.y, s[a++] = e.rotation, s[a++] = t.x2, s[a++] = t.y2, s[a++] = e.alpha, s[a++] = n, s[a++] = r, s[a++] = e.position.x, s[a++] = e.position.y, s[a++] = e.scale.x, s[a++] = e.scale.y, s[a++] = e.rotation, s[a++] = t.x3, s[a++] = t.y3, s[a++] = e.alpha, this.currentBatchSize++, this.currentBatchSize >= this.size && this.flush()
                    }
                },e.WebGLFastSpriteBatch.prototype.flush = function () {
                    if (0 !== this.currentBatchSize) {
                        var e = this.gl;
                        if (this.currentBaseTexture._glTextures[e.id] || this.renderSession.renderer.updateTexture(this.currentBaseTexture, e), e.bindTexture(e.TEXTURE_2D, this.currentBaseTexture._glTextures[e.id]), this.currentBatchSize > .5 * this.size) e.bufferSubData(e.ARRAY_BUFFER, 0, this.vertices); else {
                            var t = this.vertices.subarray(0, 4 * this.currentBatchSize * this.vertSize);
                            e.bufferSubData(e.ARRAY_BUFFER, 0, t)
                        }
                        e.drawElements(e.TRIANGLES, 6 * this.currentBatchSize, e.UNSIGNED_SHORT, 0), this.currentBatchSize = 0, this.renderSession.drawCount++
                    }
                },e.WebGLFastSpriteBatch.prototype.stop = function () {
                    this.flush()
                },e.WebGLFastSpriteBatch.prototype.start = function () {
                    var e = this.gl;
                    e.activeTexture(e.TEXTURE0), e.bindBuffer(e.ARRAY_BUFFER, this.vertexBuffer), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
                    var t = this.renderSession.projection;
                    e.uniform2f(this.shader.projectionVector, t.x, t.y), e.uniformMatrix3fv(this.shader.uMatrix, !1, this.matrix);
                    var i = 4 * this.vertSize;
                    e.vertexAttribPointer(this.shader.aVertexPosition, 2, e.FLOAT, !1, i, 0), e.vertexAttribPointer(this.shader.aPositionCoord, 2, e.FLOAT, !1, i, 8), e.vertexAttribPointer(this.shader.aScale, 2, e.FLOAT, !1, i, 16), e.vertexAttribPointer(this.shader.aRotation, 1, e.FLOAT, !1, i, 24), e.vertexAttribPointer(this.shader.aTextureCoord, 2, e.FLOAT, !1, i, 28), e.vertexAttribPointer(this.shader.colorAttribute, 1, e.FLOAT, !1, i, 36)
                },e.WebGLFilterManager = function () {
                    this.filterStack = [], this.offsetX = 0, this.offsetY = 0
                },e.WebGLFilterManager.prototype.constructor = e.WebGLFilterManager,e.WebGLFilterManager.prototype.setContext = function (e) {
                    this.gl = e, this.texturePool = [], this.initShaderBuffers()
                },e.WebGLFilterManager.prototype.begin = function (e, t) {
                    this.renderSession = e, this.defaultShader = e.shaderManager.defaultShader;
                    var i = this.renderSession.projection;
                    this.width = 2 * i.x, this.height = 2 * -i.y, this.buffer = t
                },e.WebGLFilterManager.prototype.pushFilter = function (t) {
                    var i = this.gl, n = this.renderSession.projection, r = this.renderSession.offset;
                    t._filterArea = t.target.filterArea || t.target.getBounds(), this.filterStack.push(t);
                    var o = t.filterPasses[0];
                    this.offsetX += t._filterArea.x, this.offsetY += t._filterArea.y;
                    var a = this.texturePool.pop();
                    a ? a.resize(this.width, this.height) : a = new e.FilterTexture(this.gl, this.width, this.height), i.bindTexture(i.TEXTURE_2D, a.texture);
                    var s = t._filterArea, c = o.padding;
                    s.x -= c, s.y -= c, s.width += 2 * c, s.height += 2 * c, s.x < 0 && (s.x = 0), s.width > this.width && (s.width = this.width), s.y < 0 && (s.y = 0), s.height > this.height && (s.height = this.height), i.bindFramebuffer(i.FRAMEBUFFER, a.frameBuffer), i.viewport(0, 0, s.width, s.height), n.x = s.width / 2, n.y = -s.height / 2, r.x = -s.x, r.y = -s.y, i.colorMask(!0, !0, !0, !0), i.clearColor(0, 0, 0, 0), i.clear(i.COLOR_BUFFER_BIT), t._glFilterTexture = a
                },e.WebGLFilterManager.prototype.popFilter = function () {
                    var t = this.gl, i = this.filterStack.pop(), n = i._filterArea, r = i._glFilterTexture,
                        o = this.renderSession.projection, a = this.renderSession.offset;
                    if (i.filterPasses.length > 1) {
                        t.viewport(0, 0, n.width, n.height), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), this.vertexArray[0] = 0, this.vertexArray[1] = n.height, this.vertexArray[2] = n.width, this.vertexArray[3] = n.height, this.vertexArray[4] = 0, this.vertexArray[5] = 0, this.vertexArray[6] = n.width, this.vertexArray[7] = 0, t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertexArray), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), this.uvArray[2] = n.width / this.width, this.uvArray[5] = n.height / this.height, this.uvArray[6] = n.width / this.width, this.uvArray[7] = n.height / this.height, t.bufferSubData(t.ARRAY_BUFFER, 0, this.uvArray);
                        var s = r, c = this.texturePool.pop();
                        c || (c = new e.FilterTexture(this.gl, this.width, this.height)), c.resize(this.width, this.height), t.bindFramebuffer(t.FRAMEBUFFER, c.frameBuffer), t.clear(t.COLOR_BUFFER_BIT), t.disable(t.BLEND);
                        for (var l = 0; l < i.filterPasses.length - 1; l++) {
                            var d = i.filterPasses[l];
                            t.bindFramebuffer(t.FRAMEBUFFER, c.frameBuffer), t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, s.texture), this.applyFilterPass(d, n, n.width, n.height);
                            var u = s;
                            s = c, c = u
                        }
                        t.enable(t.BLEND), r = s, this.texturePool.push(c)
                    }
                    var h = i.filterPasses[i.filterPasses.length - 1];
                    this.offsetX -= n.x, this.offsetY -= n.y;
                    var f = this.width, A = this.height, g = 0, p = 0, v = this.buffer;
                    if (0 === this.filterStack.length) t.colorMask(!0, !0, !0, !0); else {
                        var w = this.filterStack[this.filterStack.length - 1];
                        f = (n = w._filterArea).width, A = n.height, g = n.x, p = n.y, v = w._glFilterTexture.frameBuffer
                    }
                    o.x = f / 2, o.y = -A / 2, a.x = g, a.y = p;
                    var y = (n = i._filterArea).x - g, m = n.y - p;
                    t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), this.vertexArray[0] = y, this.vertexArray[1] = m + n.height, this.vertexArray[2] = y + n.width, this.vertexArray[3] = m + n.height, this.vertexArray[4] = y, this.vertexArray[5] = m, this.vertexArray[6] = y + n.width, this.vertexArray[7] = m, t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertexArray), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), this.uvArray[2] = n.width / this.width, this.uvArray[5] = n.height / this.height, this.uvArray[6] = n.width / this.width, this.uvArray[7] = n.height / this.height, t.bufferSubData(t.ARRAY_BUFFER, 0, this.uvArray), t.viewport(0, 0, f, A), t.bindFramebuffer(t.FRAMEBUFFER, v), t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, r.texture), this.applyFilterPass(h, n, f, A), this.texturePool.push(r), i._glFilterTexture = null
                },e.WebGLFilterManager.prototype.applyFilterPass = function (t, i, n, r) {
                    var o = this.gl, a = t.shaders[o.id];
                    a || ((a = new e.PixiShader(o)).fragmentSrc = t.fragmentSrc, a.uniforms = t.uniforms, a.init(), t.shaders[o.id] = a), this.renderSession.shaderManager.setShader(a), o.uniform2f(a.projectionVector, n / 2, -r / 2), o.uniform2f(a.offsetVector, 0, 0), t.uniforms.dimensions && (t.uniforms.dimensions.value[0] = this.width, t.uniforms.dimensions.value[1] = this.height, t.uniforms.dimensions.value[2] = this.vertexArray[0], t.uniforms.dimensions.value[3] = this.vertexArray[5]), a.syncUniforms(), o.bindBuffer(o.ARRAY_BUFFER, this.vertexBuffer), o.vertexAttribPointer(a.aVertexPosition, 2, o.FLOAT, !1, 0, 0), o.bindBuffer(o.ARRAY_BUFFER, this.uvBuffer), o.vertexAttribPointer(a.aTextureCoord, 2, o.FLOAT, !1, 0, 0), o.bindBuffer(o.ARRAY_BUFFER, this.colorBuffer), o.vertexAttribPointer(a.colorAttribute, 2, o.FLOAT, !1, 0, 0), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, this.indexBuffer), o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0), this.renderSession.drawCount++
                },e.WebGLFilterManager.prototype.initShaderBuffers = function () {
                    var t = this.gl;
                    this.vertexBuffer = t.createBuffer(), this.uvBuffer = t.createBuffer(), this.colorBuffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), this.vertexArray = new e.Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bufferData(t.ARRAY_BUFFER, this.vertexArray, t.STATIC_DRAW), this.uvArray = new e.Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), t.bufferData(t.ARRAY_BUFFER, this.uvArray, t.STATIC_DRAW), this.colorArray = new e.Float32Array([1, 16777215, 1, 16777215, 1, 16777215, 1, 16777215]), t.bindBuffer(t.ARRAY_BUFFER, this.colorBuffer), t.bufferData(t.ARRAY_BUFFER, this.colorArray, t.STATIC_DRAW), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 1, 3, 2]), t.STATIC_DRAW)
                },e.WebGLFilterManager.prototype.destroy = function () {
                    var e = this.gl;
                    this.filterStack = null, this.offsetX = 0, this.offsetY = 0;
                    for (var t = 0; t < this.texturePool.length; t++) this.texturePool[t].destroy();
                    this.texturePool = null, e.deleteBuffer(this.vertexBuffer), e.deleteBuffer(this.uvBuffer), e.deleteBuffer(this.colorBuffer), e.deleteBuffer(this.indexBuffer)
                },e.FilterTexture = function (t, i, n, r) {
                    this.gl = t, this.frameBuffer = t.createFramebuffer(), this.texture = t.createTexture(), r = r || e.scaleModes.DEFAULT, t.bindTexture(t.TEXTURE_2D, this.texture), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, r === e.scaleModes.LINEAR ? t.LINEAR : t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, r === e.scaleModes.LINEAR ? t.LINEAR : t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer), t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer), t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, this.texture, 0), this.renderBuffer = t.createRenderbuffer(), t.bindRenderbuffer(t.RENDERBUFFER, this.renderBuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, this.renderBuffer), this.resize(i, n)
                },e.FilterTexture.prototype.constructor = e.FilterTexture,e.FilterTexture.prototype.clear = function () {
                    var e = this.gl;
                    e.clearColor(0, 0, 0, 0), e.clear(e.COLOR_BUFFER_BIT)
                },e.FilterTexture.prototype.resize = function (t, i) {
                    if (this.width !== t || this.height !== i) {
                        try {
                            void 0 !== this._lastSize && (e.XYYXTextureMemoryUsage -= 4 * this._lastSize.w * this._lastSize.h)
                        } catch (r) {
                        }
                        this.width = t, this.height = i;
                        var n = this.gl;
                        n.bindTexture(n.TEXTURE_2D, this.texture), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, t, i, 0, n.RGBA, n.UNSIGNED_BYTE, null);
                        try {
                            e.XYYXTextureMemoryUsage += 4 * t * i, this._lastSize = {w: t, h: i}
                        } catch (r) {
                        }
                        n.bindRenderbuffer(n.RENDERBUFFER, this.renderBuffer), n.renderbufferStorage(n.RENDERBUFFER, n.DEPTH_STENCIL, t, i)
                    }
                },e.FilterTexture.prototype.destroy = function () {
                    var e = this.gl;
                    e.deleteFramebuffer(this.frameBuffer), e.deleteTexture(this.texture), this.frameBuffer = null, this.texture = null
                },e.CanvasBuffer = function (e, t) {
                    this.width = e, this.height = t, this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), this.canvas.width = e, this.canvas.height = t
                },e.CanvasBuffer.prototype.constructor = e.CanvasBuffer,e.CanvasBuffer.prototype.clear = function () {
                    this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.clearRect(0, 0, this.width, this.height)
                },e.CanvasBuffer.prototype.resize = function (e, t) {
                    this.width = this.canvas.width = e, this.height = this.canvas.height = t
                },e.CanvasMaskManager = function () {
                },e.CanvasMaskManager.prototype.constructor = e.CanvasMaskManager,e.CanvasMaskManager.prototype.pushMask = function (t, i) {
                    var n = i.context;
                    n.save();
                    var r = t.alpha, o = t.worldTransform;
                    n.setTransform(o.a, o.b, o.c, o.d, o.tx, o.ty), e.CanvasGraphics.renderGraphicsMask(t, n), n.clip(), t.worldAlpha = r
                },e.CanvasMaskManager.prototype.popMask = function (e) {
                    e.context.restore()
                },e.CanvasTinter = function () {
                },e.CanvasTinter.getTintedTexture = function (t, i) {
                    var n = t.texture, r = n.frame,
                        o = "#" + ("00000" + (0 | (i = e.CanvasTinter.roundColor(i))).toString(16)).substr(-6);
                    if (n.tintCacheFrame) {
                        var a = n.tintCacheFrame;
                        a.rez == n.resolution && a.x == r.x && a.y == r.y && a.width == r.width && a.height == r.height || (n.tintCache = {}, n.tintCacheFrame = {
                            rez: n.resolution,
                            x: r.x,
                            y: r.y,
                            width: r.width,
                            height: r.height
                        })
                    } else n.tintCache = {}, n.tintCacheFrame = {
                        rez: n.resolution,
                        x: r.x,
                        y: r.y,
                        width: r.width,
                        height: r.height
                    };
                    if (n.tintCache[o]) return n.tintCache[o];
                    var s = e.CanvasTinter.canvas || document.createElement("canvas");
                    if (e.CanvasTinter.tintMethod(n, i, s), e.CanvasTinter.convertTintToImage) {
                        var c = new Image;
                        c.src = s.toDataURL(), n.tintCache[o] = c
                    } else n.tintCache[o] = s, e.CanvasTinter.canvas = null;
                    return s
                },e.CanvasTinter.tintWithMultiply = function (e, t, i) {
                    var n = i.getContext("2d"), r = e.frame;
                    i.width = r.width, i.height = r.height, n.fillStyle = "#" + ("00000" + (0 | t).toString(16)).substr(-6), n.fillRect(0, 0, r.width, r.height), n.globalCompositeOperation = "multiply", n.drawImage(e.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height), n.globalCompositeOperation = "destination-atop", n.drawImage(e.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height)
                },e.CanvasTinter.tintWithOverlay = function (e, t, i) {
                    var n = i.getContext("2d"), r = e.frame, o = e.resolution;
                    e.baseTexture.source;
                    var a = r.x * o << 0, s = r.y * o << 0, c = r.width * o << 0, l = r.height * o << 0;
                    i.width = c, i.height = l, n.globalCompositeOperation = "copy", n.fillStyle = "#" + ("00000" + (0 | t).toString(16)).substr(-6), n.fillRect(0, 0, c, l), n.globalCompositeOperation = "destination-atop", n.drawImage(e.baseTexture.source, a, s, c, l, 0, 0, c, l)
                },e.CanvasTinter.tintWithPerPixelInner = function (t, i, n, r) {
                    var o = i.getContext("2d");
                    i.width = r.width, i.height = r.height, o.clearRect(0, 0, i.width, i.height), o.globalCompositeOperation = "copy", o.drawImage(t, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);
                    for (var a = e.hex2rgb(n), s = a[0], c = a[1], l = a[2], d = o.getImageData(0, 0, r.width, r.height), u = d.data, h = 0; h < u.length; h += 4) u[h + 0] = u[h + 0] * s >> 0, u[h + 1] = u[h + 1] * c >> 0, u[h + 2] = u[h + 2] * l >> 0;
                    o.putImageData(d, 0, 0)
                },e.CanvasTinter.tintWithPerPixel = function (t, i, n) {
                    e.CanvasTinter.tintWithPerPixelInner(t.baseTexture.source, n, i, t.frame)
                },e.CanvasTinter.roundColor = function (t) {
                    var i = e.CanvasTinter.cacheStepsPerColorChannel, n = e.hex2rgb(t);
                    return n[0] = Math.min(255, n[0] / i * i), n[1] = Math.min(255, n[1] / i * i), n[2] = Math.min(255, n[2] / i * i), e.rgb2hex(n)
                },e.CanvasTinter.cacheStepsPerColorChannel = 8,e.CanvasTinter.convertTintToImage = !1,e.CanvasTinter.canUseMultiply = e.canUseNewCanvasBlendModes(),e.CanvasTinter.tintMethod = e.CanvasTinter.tintWithOverlay,e.CanvasRenderer = function (t, i, n) {
                    if (n) for (var r in e.defaultRenderOptions) void 0 === n[r] && (n[r] = e.defaultRenderOptions[r]); else n = e.defaultRenderOptions;
                    e.defaultRenderer || (e.defaultRenderer = this), this.type = e.CANVAS_RENDERER, this.clearBeforeRender = n.clearBeforeRender, this.transparent = n.transparent, this.autoResize = n.autoResize || !1, this.width = t || 800, this.height = i || 600, this.view = n.view || document.createElement("canvas"), this.context = this.view.getContext("2d", {alpha: this.transparent}), this.refresh = !0, this.count = 0, this.maskManager = new e.CanvasMaskManager, this.renderSession = {
                        context: this.context,
                        maskManager: this.maskManager,
                        scaleMode: null,
                        smoothProperty: null
                    }, this.mapBlendModes(), this.resize(t, i), "imageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "imageSmoothingEnabled" : "webkitImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "webkitImageSmoothingEnabled" : "mozImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "mozImageSmoothingEnabled" : "oImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "oImageSmoothingEnabled" : "msImageSmoothingEnabled" in this.context && (this.renderSession.smoothProperty = "msImageSmoothingEnabled")
                },e.CanvasRenderer.prototype.constructor = e.CanvasRenderer,e.CanvasRenderer.prototype.render = function (t) {
                    t.updateTransform(), this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.globalAlpha = 1, this.renderSession.currentBlendMode = e.blendModes.NORMAL, this.context.globalCompositeOperation = e.blendModesCanvas[e.blendModes.NORMAL], this.renderDisplayObject(t), t.interactive && (t._interactiveEventsAdded || (t._interactiveEventsAdded = !0, t.interactionManager.setTarget(this)))
                },e.CanvasRenderer.prototype.destroy = function (e) {
                    void 0 === e && (e = !0), e && this.view.parent && this.view.parent.removeChild(this.view), this.view = null, this.context = null, this.maskManager = null, this.renderSession = null
                },e.CanvasRenderer.prototype.resize = function (e, t) {
                    this.width = e, this.height = t, this.view.width = this.width, this.view.height = this.height
                },e.CanvasRenderer.prototype.renderDisplayObject = function (e, t) {
                    this.renderSession.context = t || this.context, e._renderCanvas(this.renderSession)
                },e.CanvasRenderer.prototype.mapBlendModes = function () {
                    e.blendModesCanvas || (e.blendModesCanvas = [], e.canUseNewCanvasBlendModes() ? (e.blendModesCanvas[e.blendModes.NORMAL] = "source-over", e.blendModesCanvas[e.blendModes.ADD] = "lighter", e.blendModesCanvas[e.blendModes.MULTIPLY] = "multiply", e.blendModesCanvas[e.blendModes.SCREEN] = "screen") : (e.blendModesCanvas[e.blendModes.NORMAL] = "source-over", e.blendModesCanvas[e.blendModes.ADD] = "lighter", e.blendModesCanvas[e.blendModes.MULTIPLY] = "source-over", e.blendModesCanvas[e.blendModes.SCREEN] = "source-over"))
                },e.CanvasGraphics = function () {
                },e.CanvasGraphics.renderGraphics = function (t, i) {
                    var n = t.worldAlpha;
                    t.dirty && (this.updateGraphicsTint(t), t.dirty = !1);
                    for (var r = 0; r < t.graphicsData.length; r++) {
                        var o = t.graphicsData[r], a = o.shape, s = o._fillTint, c = o._lineTint;
                        if (i.lineWidth = o.lineWidth, o.type === e.Graphics.POLY) {
                            i.beginPath();
                            var l = a.points;
                            i.moveTo(l[0], l[1]);
                            for (var d = 1; d < l.length / 2; d++) i.lineTo(l[2 * d], l[2 * d + 1]);
                            a.closed && i.lineTo(l[0], l[1]), l[0] === l[l.length - 2] && l[1] === l[l.length - 1] && i.closePath(), o.fill && (i.globalAlpha = o.fillAlpha * n, i.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6), i.fill()), o.lineWidth && (i.globalAlpha = o.lineAlpha * n, i.strokeStyle = "#" + ("00000" + (0 | c).toString(16)).substr(-6), i.stroke())
                        } else if (o.type === e.Graphics.RECT) (o.fillColor || 0 === o.fillColor) && (i.globalAlpha = o.fillAlpha * n, i.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6), i.fillRect(a.x, a.y, a.width, a.height)), o.lineWidth && (i.globalAlpha = o.lineAlpha * n, i.strokeStyle = "#" + ("00000" + (0 | c).toString(16)).substr(-6), i.strokeRect(a.x, a.y, a.width, a.height)); else if (o.type === e.Graphics.CIRC) i.beginPath(), i.arc(a.x, a.y, a.radius, 0, 2 * Math.PI), i.closePath(), o.fill && (i.globalAlpha = o.fillAlpha * n, i.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6), i.fill()), o.lineWidth && (i.globalAlpha = o.lineAlpha * n, i.strokeStyle = "#" + ("00000" + (0 | c).toString(16)).substr(-6), i.stroke()); else if (o.type === e.Graphics.ELIP) {
                            var u = 2 * a.width, h = 2 * a.height, f = a.x - u / 2, A = a.y - h / 2;
                            i.beginPath();
                            var g = .5522848, p = u / 2 * g, v = h / 2 * g, w = f + u, y = A + h, m = f + u / 2,
                                C = A + h / 2;
                            i.moveTo(f, C), i.bezierCurveTo(f, C - v, m - p, A, m, A), i.bezierCurveTo(m + p, A, w, C - v, w, C), i.bezierCurveTo(w, C + v, m + p, y, m, y), i.bezierCurveTo(m - p, y, f, C + v, f, C), i.closePath(), o.fill && (i.globalAlpha = o.fillAlpha * n, i.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6), i.fill()), o.lineWidth && (i.globalAlpha = o.lineAlpha * n, i.strokeStyle = "#" + ("00000" + (0 | c).toString(16)).substr(-6), i.stroke())
                        } else if (o.type === e.Graphics.RREC) {
                            var I = a.x, E = a.y, S = a.width, b = a.height, x = a.radius, B = Math.min(S, b) / 2 | 0;
                            x = x > B ? B : x, i.beginPath(), i.moveTo(I, E + x), i.lineTo(I, E + b - x), i.quadraticCurveTo(I, E + b, I + x, E + b), i.lineTo(I + S - x, E + b), i.quadraticCurveTo(I + S, E + b, I + S, E + b - x), i.lineTo(I + S, E + x), i.quadraticCurveTo(I + S, E, I + S - x, E), i.lineTo(I + x, E), i.quadraticCurveTo(I, E, I, E + x), i.closePath(), (o.fillColor || 0 === o.fillColor) && (i.globalAlpha = o.fillAlpha * n, i.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6), i.fill()), o.lineWidth && (i.globalAlpha = o.lineAlpha * n, i.strokeStyle = "#" + ("00000" + (0 | c).toString(16)).substr(-6), i.stroke())
                        }
                    }
                },e.CanvasGraphics.renderGraphicsMask = function (t, i) {
                    var n = t.graphicsData.length;
                    if (0 !== n) {
                        n > 1 && (n = 1, window.console.log("Pixi.js warning: masks in canvas can only mask using the first path in the graphics object"));
                        for (var r = 0; r < 1; r++) {
                            var o = t.graphicsData[r], a = o.shape;
                            if (o.type === e.Graphics.POLY) {
                                i.beginPath();
                                var s = a.points;
                                i.moveTo(s[0], s[1]);
                                for (var c = 1; c < s.length / 2; c++) i.lineTo(s[2 * c], s[2 * c + 1]);
                                s[0] === s[s.length - 2] && s[1] === s[s.length - 1] && i.closePath()
                            } else if (o.type === e.Graphics.RECT) i.beginPath(), i.rect(a.x, a.y, a.width, a.height), i.closePath(); else if (o.type === e.Graphics.CIRC) i.beginPath(), i.arc(a.x, a.y, a.radius, 0, 2 * Math.PI), i.closePath(); else if (o.type === e.Graphics.ELIP) {
                                var l = 2 * a.width, d = 2 * a.height, u = a.x - l / 2, h = a.y - d / 2;
                                i.beginPath();
                                var f = .5522848, A = l / 2 * f, g = d / 2 * f, p = u + l, v = h + d, w = u + l / 2,
                                    y = h + d / 2;
                                i.moveTo(u, y), i.bezierCurveTo(u, y - g, w - A, h, w, h), i.bezierCurveTo(w + A, h, p, y - g, p, y), i.bezierCurveTo(p, y + g, w + A, v, w, v), i.bezierCurveTo(w - A, v, u, y + g, u, y), i.closePath()
                            } else if (o.type === e.Graphics.RREC) {
                                var m, C, I, E, S, b = a.points;
                                b ? (m = b[0], C = b[1], I = b[2], E = b[3], S = b[4]) : (m = a.x, C = a.y, I = a.width, E = a.height, S = a.radius);
                                var x = Math.min(I, E) / 2 | 0;
                                S = S > x ? x : S, i.beginPath(), i.moveTo(m, C + S), i.lineTo(m, C + E - S), i.quadraticCurveTo(m, C + E, m + S, C + E), i.lineTo(m + I - S, C + E), i.quadraticCurveTo(m + I, C + E, m + I, C + E - S), i.lineTo(m + I, C + S), i.quadraticCurveTo(m + I, C, m + I - S, C), i.lineTo(m + S, C), i.quadraticCurveTo(m, C, m, C + S), i.closePath()
                            }
                        }
                    }
                },e.CanvasGraphics.updateGraphicsTint = function (e) {
                    if (16777215 !== e.tint) for (var t = (e.tint >> 16 & 255) / 255, i = (e.tint >> 8 & 255) / 255, n = (255 & e.tint) / 255, r = 0; r < e.graphicsData.length; r++) {
                        var o = e.graphicsData[r], a = 0 | o.fillColor, s = 0 | o.lineColor;
                        o._fillTint = ((a >> 16 & 255) / 255 * t * 255 << 16) + ((a >> 8 & 255) / 255 * i * 255 << 8) + (255 & a) / 255 * n * 255, o._lineTint = ((s >> 16 & 255) / 255 * t * 255 << 16) + ((s >> 8 & 255) / 255 * i * 255 << 8) + (255 & s) / 255 * n * 255
                    }
                },e.Graphics = function () {
                    e.DisplayObjectContainer.call(this), this.renderable = !0, this.fillAlpha = 1, this.lineWidth = 0, this.lineColor = 0, this.graphicsData = [], this.tint = 16777215, this.ondTint = 16777215, this.blendMode = e.blendModes.NORMAL, this.currentPath = null, this._webGL = [], this.isMask = !1, this.boundsPadding = 0, this._localBounds = new e.Rectangle(0, 0, 1, 1), this.dirty = !0, this.webGLDirty = !1, this.cachedSpriteDirty = !1
                },e.Graphics.prototype = Object.create(e.DisplayObjectContainer.prototype),e.Graphics.prototype.constructor = e.Graphics,e.Graphics.prototype.lineStyle = function (t, i, n) {
                    if (this.lineWidth = t || 0, this.lineColor = i || 0, this.lineAlpha = arguments.length < 3 ? 1 : n, this.currentPath) {
                        if (this.currentPath.shape.points.length) return this.drawShape(new e.Polygon(this.currentPath.shape.points.slice(-2))), this;
                        this.currentPath.lineWidth = this.lineWidth, this.currentPath.lineColor = this.lineColor, this.currentPath.lineAlpha = this.lineAlpha
                    }
                    return this
                },e.Graphics.prototype.moveTo = function (t, i) {
                    return this.drawShape(new e.Polygon([t, i])), this
                },e.Graphics.prototype.lineTo = function (e, t) {
                    return this.currentPath.shape.points.push(e, t), this.dirty = !0, this
                },e.Graphics.prototype.quadraticCurveTo = function (e, t, i, n) {
                    this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
                    var r, o, a = this.currentPath.shape.points;
                    0 === a.length && this.moveTo(0, 0);
                    for (var s = a[a.length - 2], c = a[a.length - 1], l = 0, d = 1; d <= 20; d++) r = s + (e - s) * (l = d / 20), o = c + (t - c) * l, a.push(r + (e + (i - e) * l - r) * l, o + (t + (n - t) * l - o) * l);
                    return this.dirty = !0, this
                },e.Graphics.prototype.bezierCurveTo = function (e, t, i, n, r, o) {
                    this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
                    for (var a, s, c, l, d, u = this.currentPath.shape.points, h = u[u.length - 2], f = u[u.length - 1], A = 0, g = 1; g <= 20; g++) c = (s = (a = 1 - (A = g / 20)) * a) * a, d = (l = A * A) * A, u.push(c * h + 3 * s * A * e + 3 * a * l * i + d * r, c * f + 3 * s * A * t + 3 * a * l * n + d * o);
                    return this.dirty = !0, this
                },e.Graphics.prototype.arcTo = function (e, t, i, n, r) {
                    this.currentPath ? 0 === this.currentPath.shape.points.length && this.currentPath.shape.points.push(e, t) : this.moveTo(e, t);
                    var o = this.currentPath.shape.points, a = o[o.length - 2], s = o[o.length - 1] - t, c = a - e,
                        l = n - t, d = i - e, u = Math.abs(s * d - c * l);
                    if (u < 1e-8 || 0 === r) o[o.length - 2] === e && o[o.length - 1] === t || o.push(e, t); else {
                        var h = s * s + c * c, f = l * l + d * d, A = s * l + c * d, g = r * Math.sqrt(h) / u,
                            p = r * Math.sqrt(f) / u, v = g * A / h, w = p * A / f, y = g * d + p * c,
                            m = g * l + p * s, C = c * (p + v), I = s * (p + v), E = d * (g + w), S = l * (g + w),
                            b = Math.atan2(I - m, C - y), x = Math.atan2(S - m, E - y);
                        this.arc(y + e, m + t, r, b, x, c * l > d * s)
                    }
                    return this.dirty = !0, this
                },e.Graphics.prototype.arc = function (e, t, i, n, r, o) {
                    var a, s = e + Math.cos(n) * i, c = t + Math.sin(n) * i;
                    if (this.currentPath ? 0 === (a = this.currentPath.shape.points).length ? a.push(s, c) : a[a.length - 2] === s && a[a.length - 1] === c || a.push(s, c) : (this.moveTo(s, c), a = this.currentPath.shape.points), n === r) return this;
                    !o && r <= n ? r += 2 * Math.PI : o && n <= r && (n += 2 * Math.PI);
                    var l = o ? -1 * (n - r) : r - n, d = Math.abs(l) / (2 * Math.PI) * 40;
                    if (0 === l) return this;
                    for (var u = l / (2 * d), h = 2 * u, f = Math.cos(u), A = Math.sin(u), g = d - 1, p = g % 1 / g, v = 0; v <= g; v++) {
                        var w = u + n + h * (v + p * v), y = Math.cos(w), m = -Math.sin(w);
                        a.push((f * y + A * m) * i + e, (f * -m + A * y) * i + t)
                    }
                    return this.dirty = !0, this
                },e.Graphics.prototype.beginFill = function (e, t) {
                    return this.filling = !0, this.fillColor = e || 0, this.fillAlpha = void 0 === t ? 1 : t, this.currentPath && this.currentPath.shape.points.length <= 2 && (this.currentPath.fill = this.filling, this.currentPath.fillColor = this.fillColor, this.currentPath.fillAlpha = this.fillAlpha), this
                },e.Graphics.prototype.endFill = function () {
                    return this.filling = !1, this.fillColor = null, this.fillAlpha = 1, this
                },e.Graphics.prototype.drawRect = function (t, i, n, r) {
                    return this.drawShape(new e.Rectangle(t, i, n, r)), this
                },e.Graphics.prototype.drawRoundedRect = function (t, i, n, r, o) {
                    return this.drawShape(new e.RoundedRectangle(t, i, n, r, o)), this
                },e.Graphics.prototype.drawCircle = function (t, i, n) {
                    return this.drawShape(new e.Circle(t, i, n)), this
                },e.Graphics.prototype.drawEllipse = function (t, i, n, r) {
                    return this.drawShape(new e.Ellipse(t, i, n, r)), this
                },e.Graphics.prototype.drawPolygon = function (t) {
                    return t instanceof Array || (t = Array.prototype.slice.call(arguments)), this.drawShape(new e.Polygon(t)), this
                },e.Graphics.prototype.clear = function () {
                    return this.lineWidth = 0, this.filling = !1, this.dirty = !0, this.clearDirty = !0, this.graphicsData = [], this
                },e.Graphics.prototype._renderWebGL = function (t) {
                    if (!1 !== this.visible && 0 !== this.alpha && !0 !== this.isMask) {
                        if (t.spriteBatch.stop(), t.blendModeManager.setBlendMode(this.blendMode), this._mask && t.maskManager.pushMask(this._mask, t), this._filters && t.filterManager.pushFilter(this._filterBlock), this.blendMode !== t.spriteBatch.currentBlendMode) {
                            t.spriteBatch.currentBlendMode = this.blendMode;
                            var i = e.blendModesWebGL[t.spriteBatch.currentBlendMode];
                            t.spriteBatch.gl.blendFunc(i[0], i[1])
                        }
                        if (this.webGLDirty && (this.dirty = !0, this.webGLDirty = !1), e.WebGLGraphics.renderGraphics(this, t), this.children.length) {
                            t.spriteBatch.start();
                            for (var n = 0, r = this.children.length; n < r; n++) this.children[n]._renderWebGL(t);
                            t.spriteBatch.stop()
                        }
                        this._filters && t.filterManager.popFilter(), this._mask && t.maskManager.popMask(this.mask, t), t.drawCount++, t.spriteBatch.start()
                    }
                },e.Graphics.prototype._renderCanvas = function (t) {
                    if (!1 !== this.visible && 0 !== this.alpha && !0 !== this.isMask) {
                        var i = t.context, n = this.worldTransform;
                        this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode, i.globalCompositeOperation = e.blendModesCanvas[t.currentBlendMode]), this._mask && t.maskManager.pushMask(this._mask, t), i.setTransform(n.a, n.b, n.c, n.d, n.tx, n.ty), this.tint != this.oldTint && (this.dirty = !0, this.oldTint = this.tint), e.CanvasGraphics.renderGraphics(this, i);
                        for (var r = 0, o = this.children.length; r < o; r++) this.children[r]._renderCanvas(t);
                        this._mask && t.maskManager.popMask(t)
                    }
                },e.Graphics.prototype.getBounds = function (t) {
                    if (this.isMask) return e.EmptyRectangle;
                    this.dirty && (this.updateLocalBounds(), this.webGLDirty = !0, this.cachedSpriteDirty = !0, this.dirty = !1);
                    var i = this._localBounds, n = i.x, r = i.width + i.x, o = i.y, a = i.height + i.y,
                        s = t || this.worldTransform, c = s.a, l = s.b, d = s.c, u = s.d, h = s.tx, f = s.ty,
                        A = c * r + d * a + h, g = u * a + l * r + f, p = c * n + d * a + h, v = u * a + l * n + f,
                        w = c * n + d * o + h, y = u * o + l * n + f, m = c * r + d * o + h, C = u * o + l * r + f,
                        I = A, E = g, S = A, b = g;
                    return S = m < (S = w < (S = p < S ? p : S) ? w : S) ? m : S, b = C < (b = y < (b = v < b ? v : b) ? y : b) ? C : b, I = m > (I = w > (I = p > I ? p : I) ? w : I) ? m : I, E = C > (E = y > (E = v > E ? v : E) ? y : E) ? C : E, this._bounds.x = S, this._bounds.width = I - S, this._bounds.y = b, this._bounds.height = E - b, this._bounds
                },e.Graphics.prototype.updateLocalBounds = function () {
                    var t = 1 / 0, i = -1 / 0, n = 1 / 0, r = -1 / 0;
                    if (this.graphicsData.length) for (var o, a, s, c, l, d, u = 0; u < this.graphicsData.length; u++) {
                        var h = this.graphicsData[u], f = h.type, A = h.lineWidth;
                        if (o = h.shape, f === e.Graphics.RECT || f === e.Graphics.RREC) s = o.x - A / 2, c = o.y - A / 2, t = s < t ? s : t, i = s + (l = o.width + A) > i ? s + l : i, n = c < n ? c : n, r = c + (d = o.height + A) > r ? c + d : r; else if (f === e.Graphics.CIRC) s = o.x, c = o.y, t = s - (l = o.radius + A / 2) < t ? s - l : t, i = s + l > i ? s + l : i, n = c - (d = o.radius + A / 2) < n ? c - d : n, r = c + d > r ? c + d : r; else if (f === e.Graphics.ELIP) s = o.x, c = o.y, t = s - (l = o.width + A / 2) < t ? s - l : t, i = s + l > i ? s + l : i, n = c - (d = o.height + A / 2) < n ? c - d : n, r = c + d > r ? c + d : r; else {
                            a = o.points;
                            for (var g = 0; g < a.length; g += 2) t = (s = a[g]) - A < t ? s - A : t, i = s + A > i ? s + A : i, n = (c = a[g + 1]) - A < n ? c - A : n, r = c + A > r ? c + A : r
                        }
                    } else t = 0, i = 0, n = 0, r = 0;
                    var p = this.boundsPadding;
                    this._localBounds.x = t - p, this._localBounds.width = i - t + 2 * p, this._localBounds.y = n - p, this._localBounds.height = r - n + 2 * p
                },e.Graphics.prototype.drawShape = function (t) {
                    this.currentPath && this.currentPath.shape.points.length <= 2 && this.graphicsData.pop(), this.currentPath = null;
                    var i = new e.GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, t);
                    return this.graphicsData.push(i), i.type === e.Graphics.POLY && (i.shape.closed = this.filling, this.currentPath = i), this.dirty = !0, i
                },e.GraphicsData = function (e, t, i, n, r, o, a) {
                    this.lineWidth = e, this.lineColor = t, this.lineAlpha = i, this._lineTint = t, this.fillColor = n, this.fillAlpha = r, this._fillTint = n, this.fill = o, this.shape = a, this.type = a.type
                },e.Graphics.POLY = 0,e.Graphics.RECT = 1,e.Graphics.CIRC = 2,e.Graphics.ELIP = 3,e.Graphics.RREC = 4,e.Polygon.prototype.type = e.Graphics.POLY,e.Rectangle.prototype.type = e.Graphics.RECT,e.Circle.prototype.type = e.Graphics.CIRC,e.Ellipse.prototype.type = e.Graphics.ELIP,e.RoundedRectangle.prototype.type = e.Graphics.RREC,e.BaseTextureCache = {},e.BaseTextureCacheIdGenerator = 0,e.BaseTexture = function (t, i) {
                    if (this.width = 100, this.height = 100, this.scaleMode = i || e.scaleModes.DEFAULT, this.hasLoaded = !1, this.source = t, t && t.packer && (t.__atlasBaseTexture = this), this._UID = e._UID++, this.premultipliedAlpha = !0, this._glTextures = [], this._dirty = [!0, !0, !0, !0], t) {
                        if ((this.source.complete || this.source.getContext) && this.source.width && this.source.height) this.hasLoaded = !0, this.width = this.source.naturalWidth || this.source.width, this.height = this.source.naturalHeight || this.source.height, this.dirty(); else {
                            var n = this;
                            this.source.onload = function () {
                                n.source && (n.hasLoaded = !0, n.width = n.source.naturalWidth || n.source.width, n.height = n.source.naturalHeight || n.source.height, n.dirty(), window.dirtyOnce = !0, n.dispatchEvent({
                                    type: "loaded",
                                    content: n
                                }))
                            }, this.source.onerror = function () {
                                n.dispatchEvent({type: "error", content: n})
                            }
                        }
                        this.imageUrl = null
                    }
                },e.BaseTexture.prototype.constructor = e.BaseTexture,e.EventTarget.mixin(e.BaseTexture.prototype),e.BaseTexture.prototype.destroy = function () {
                    this.imageUrl && (delete e.BaseTextureCache[this.imageUrl], delete e.TextureCache[this.imageUrl], this.imageUrl = null, this.source.src = ""), this.source = null, this.unloadFromGPU()
                },e.BaseTexture.prototype.dirty = function () {
                    for (var e = 0; e < this._glTextures.length; e++) this._dirty[e] = !0
                },e.BaseTexture.prototype.unloadFromGPU = function () {
                    this.dirty();
                    for (var t = this._glTextures.length - 1; t >= 0; t--) {
                        var i = this._glTextures[t], n = e.glContexts[t];
                        n && i && n.deleteTexture(i)
                    }
                    this._glTextures.length = 0, this.dirty()
                },e.BaseTexture.fromImage = function (t, i, n) {
                    var r = e.BaseTextureCache[t];
                    if (void 0 === i && -1 === t.indexOf("data:") && (i = !0), !r) {
                        var o = new Image;
                        i && (o.crossOrigin = ""), o.src = t, (r = new e.BaseTexture(o, n)).imageUrl = t, e.BaseTextureCache[t] = r
                    }
                    return r
                },e.BaseTexture.fromCanvas = function (t, i) {
                    return new e.BaseTexture(t, i)
                },e.TextureCache = {},e.FrameCache = {},e.TextureCacheIdGenerator = 0,e.Texture = function (t, i, n, r) {
                    this.noFrame = !1, this.resolution = r || 1, i || (this.noFrame = !0, i = new e.Rectangle(0, 0, 1, 1)), t instanceof e.Texture && (t = t.baseTexture), this.baseTexture = t, this.floorCoordinates = !0, this.frame = i, this.trim = n, this.valid = !1, this.requiresUpdate = !1, this._uvs = null, this.width = 0, this.height = 0, t.hasLoaded ? (this.noFrame && (i = new e.Rectangle(0, 0, t.width / this.resolution, t.height / this.resolution)), this.setFrame(i)) : t.addEventListener("loaded", this.onBaseTextureLoaded.bind(this))
                },e.Texture.prototype.constructor = e.Texture,e.EventTarget.mixin(e.Texture.prototype),e.Texture.prototype.onBaseTextureLoaded = function () {
                    var t = this.baseTexture;
                    t.removeEventListener("loaded", this.onLoaded), this.noFrame && (this.frame = new e.Rectangle(0, 0, t.width / this.resolution, t.height / this.resolution)), this.setFrame(this.frame), this.dispatchEvent({
                        type: "update",
                        content: this
                    })
                },e.Texture.prototype.destroy = function (e) {
                    e && this.baseTexture.destroy(), this.valid = !1
                },e.Texture.prototype.setFrame = function (e) {
                    if (this.noFrame = !1, this.frame = e, this.width = e.width, this.height = e.height, !this.trim && (e.x + e.width > this.baseTexture.width / this.resolution || e.y + e.height > this.baseTexture.height / this.resolution)) throw new Error("Texture Error: frame does not fit inside the base Texture dimensions " + (this.image ? this.image.path : this));
                    this.valid = e && e.width && e.height && this.baseTexture.source && this.baseTexture.hasLoaded, this.trim && (this.width = this.trim.width, this.height = this.trim.height, this.frame.width = this.trim.width, this.frame.height = this.trim.height), this.valid && this._updateUvs()
                },e.Texture.prototype._updateUvs = function () {
                    this._uvs || (this._uvs = new e.TextureUvs);
                    var t = this.frame, i = this.resolution, n = this.baseTexture.width / i,
                        r = this.baseTexture.height / i;
                    this._uvs.x0 = t.x / n, this._uvs.y0 = t.y / r, this._uvs.x1 = (t.x + t.width) / n, this._uvs.y1 = t.y / r, this._uvs.x2 = (t.x + t.width) / n, this._uvs.y2 = (t.y + t.height) / r, this._uvs.x3 = t.x / n, this._uvs.y3 = (t.y + t.height) / r
                },e.Texture.fromImage = function (t, i, n, r) {
                    var o = t;
                    1 != (r = r || 1) && (o += ":" + r);
                    var a = e.TextureCache[o];
                    return a || (a = new e.Texture(e.BaseTexture.fromImage(t, i, n), r), e.TextureCache[o] = a), a
                },e.Texture.fromFrame = function (t) {
                    var i = e.TextureCache[t];
                    if (!i) throw new Error('The frameId "' + t + '" does not exist in the texture cache ');
                    return i
                },e.Texture.fromCanvas = function (t, i, n) {
                    var r;
                    return r = t.__atlasBaseTexture ? t.__atlasBaseTexture : e.BaseTexture.fromCanvas(t, i), new e.Texture(r, void 0, void 0, n)
                },e.Texture.addTextureToCache = function (t, i) {
                    e.TextureCache[i] = t
                },e.Texture.removeTextureFromCache = function (t) {
                    var i = e.TextureCache[t];
                    return delete e.TextureCache[t], delete e.BaseTextureCache[t], i
                },e.TextureUvs = function () {
                    this.x0 = 0, this.y0 = 0, this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.x3 = 0, this.y3 = 0
                },e.Texture.emptyTexture = new e.Texture(new e.BaseTexture),e.RenderTexture = function (t, i, n, r) {
                    if (this.width = t || 100, this.height = i || 100, this.frame = new e.Rectangle(0, 0, this.width, this.height), this.baseTexture = new e.BaseTexture, this.baseTexture.width = this.width, this.baseTexture.height = this.height, this.baseTexture._glTextures = [], this.baseTexture.scaleMode = r || e.scaleModes.DEFAULT, this.baseTexture.hasLoaded = !0, e.Texture.call(this, this.baseTexture, new e.Rectangle(0, 0, this.width, this.height)), this.renderer = n || e.defaultRenderer, this.renderer.type === e.WEBGL_RENDERER) {
                        var o = this.renderer.gl;
                        this.baseTexture._dirty[o.id] = !1, this.textureBuffer = new e.FilterTexture(o, this.width, this.height, this.baseTexture.scaleMode), this.baseTexture._glTextures[o.id] = this.textureBuffer.texture, this.render = this.renderWebGL, this.projection = new e.Point(.5 * this.width, .5 * -this.height)
                    } else this.render = this.renderCanvas, this.textureBuffer = new e.CanvasBuffer(this.width, this.height), this.baseTexture.source = this.textureBuffer.canvas;
                    this.valid = !0, this._updateUvs()
                },e.RenderTexture.prototype = Object.create(e.Texture.prototype),e.RenderTexture.prototype.constructor = e.RenderTexture,e.RenderTexture.prototype.resize = function (t, i, n) {
                    t === this.width && i === this.height || (this.valid = t > 0 && i > 0, this.width = this.frame.width = t, this.height = this.frame.height = i, n && (this.baseTexture.width = this.width, this.baseTexture.height = this.height), this.renderer.type === e.WEBGL_RENDERER && (this.projection.x = this.width / 2, this.projection.y = -this.height / 2), this.valid && this.textureBuffer.resize(this.width, this.height))
                },e.RenderTexture.prototype.clear = function () {
                    this.valid && (this.renderer.type === e.WEBGL_RENDERER && this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer), this.textureBuffer.clear())
                },e.RenderTexture.prototype.renderWebGL = function (e, t, i) {
                    if (this.valid) {
                        var n = e.worldTransform;
                        n.identity(), n.translate(0, 2 * this.projection.y), t && n.append(t), n.scale(1, -1), e.worldAlpha = 1;
                        for (var r = e.children, o = 0, a = r.length; o < a; o++) r[o].updateTransform();
                        var s = this.renderer.gl;
                        s.viewport(0, 0, this.width, this.height), s.bindFramebuffer(s.FRAMEBUFFER, this.textureBuffer.frameBuffer), i && this.textureBuffer.clear(), this.renderer.spriteBatch.dirty = !0, this.renderer.renderDisplayObject(e, this.projection, this.textureBuffer.frameBuffer), this.renderer.spriteBatch.dirty = !0
                    }
                },e.RenderTexture.prototype.renderCanvas = function (e, t, i) {
                    if (this.valid) {
                        var n = e.worldTransform;
                        n.identity(), t && n.append(t), e.worldAlpha = 1;
                        for (var r = e.children, o = 0, a = r.length; o < a; o++) r[o].updateTransform();
                        i && this.textureBuffer.clear();
                        var s = this.textureBuffer.context;
                        this.renderer.renderDisplayObject(e, s)
                    }
                },e.AbstractFilter = function (e, t) {
                    this.passes = [this], this.shaders = [], this.dirty = !0, this.padding = 0, this.uniforms = t || {}, this.fragmentSrc = e || []
                },e.AbstractFilter.prototype.constructor = e.AbstractFilter,e.AbstractFilter.prototype.syncUniforms = function () {
                    for (var e = 0, t = this.shaders.length; e < t; e++) this.shaders[e].dirty = !0
                },e
            }, function (e) {
                var t = {};
                t.higherIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t ? e : Math.max(e || 0, t || 0)
                }, t.lowerIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t ? e : Math.min(e || 0, t || 0)
                }, t.longerIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t || (e || "").length >= (t || "").length ? e : t
                }, t.shorterIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t || (e || "").length <= (t || "").length ? e : t
                }, t.trueIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t ? e : e || t || !1
                }, t.falseIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t ? e : e && t || !1
                }, t.firstIsBetter = function (e, t) {
                    return void 0 === e ? t : e
                }, t.secondIsBetter = function (e, t) {
                    return void 0 === e ? t : void 0 === t ? e : t
                }, t.havingMoreWrites = function (e, t) {
                    return e && e._numWrites ? t && t._numWrites ? e._numWrites > t._numWrites ? e : t : e : t
                }, t.recursive = function (e) {
                    function i(i, n, r, o) {
                        for (prop in n) {
                            var a = e[typeof n[prop]];
                            if (!a) {
                                var s = "XS.data.merge.recursive: Unsupported merge type (property: " + prop + "): " + typeof n[prop] + " - defaulting to second arg";
                                console.error(s), a = e.default || t.secondIsBetter
                            }
                            i[prop] = a(r[prop], o[prop])
                        }
                    }

                    var n = function (e, t) {
                        if (void 0 === e) return t;
                        if (void 0 === t) return e;
                        if (null === typeof e) return t;
                        if (null === typeof t) return e;
                        var n = {};
                        return i(n, e, e, t), i(n, t, e, t), n
                    };
                    return e.object = e.object || n, n
                }, t.higherAndTrueIsBetter = t.recursive({number: t.higherIsBetter, boolean: t.trueIsBetter});
                var i = {
                    int: {
                        defVal: 0,
                        defMerge: t.higherIsBetter,
                        localGet: Host.Preferences.GetInt,
                        localSet: Host.Preferences.SetInt
                    },
                    float: {
                        defVal: 0,
                        defMerge: t.higherIsBetter,
                        localGet: Host.Preferences.GetFloat,
                        localSet: Host.Preferences.SetFloat
                    },
                    string: {
                        defVal: "",
                        defMerge: t.longerIsBetter,
                        localGet: Host.Preferences.GetString,
                        localSet: Host.Preferences.SetString
                    },
                    bool: {
                        defVal: !1,
                        defMerge: t.trueIsBetter,
                        localGet: Host.Preferences.GetBool,
                        localSet: Host.Preferences.SetBool
                    },
                    object: {
                        defVal: {}, defMerge: t.firstIsBetter, localGet: function (e, t, i) {
                            Host.Preferences.GetString(e, (function (e, i) {
                                var n = void 0;
                                try {
                                    n = JSON.parse(e)
                                } catch (r) {
                                    n = {}
                                }
                                t && t(n, i)
                            }))
                        }, localSet: function (e, t, i) {
                            t = JSON.stringify(t), Host.Preferences.SetString(e, t, i)
                        }
                    }
                };

                function n() {
                    this._elems = {}, this._providers = [], this._saveInterval = 5e3, this._saveIntervalId = void 0, this._boundSaveAll = this.save.bind(this, void 0)
                }

                n.prototype._typeMap = i, n.prototype._keyExists = function (e) {
                    return this._elems.hasOwnProperty(e)
                }, n.prototype._getKey = function (e) {
                    return this._elems[e] && this._elems[e].value
                }, n.prototype._setKey = function (e, t, i) {
                    if (this._keyExists(e)) {
                        var n = this._elems[e];
                        JSON.stringify(n.value) != JSON.stringify(t) && (n.value = t, n.setLocal(t, i), n.dirtyRemote = !0)
                    }
                }, n.prototype._remoteKeys = function () {
                    var e = [], t = this._elems;
                    for (var i in t) t[i].remote && e.push(i);
                    return e
                }, n.prototype._subscribedRemote = function (e) {
                    for (var t = this._providers, i = 0; i < t.length; i++) if (t[i].remote === e) return !0;
                    return !1
                }, n.prototype._addRemote = function (e) {
                    if (e && "object" == typeof e && !this._subscribedRemote(e)) {
                        var t = {remote: e, init: !1};
                        this._providers.push(t)
                    }
                }, n.prototype._addDefaultRemotes = function () {
                    r.is.facebookInstant ? (this._addRemote(window.Social.Instant), Config.facebookGamingLogin && this._addRemote(XC)) : r.is.snapchat ? this._addRemote(window.Social.Snapchat) : this._addRemote(XC)
                }, n.prototype._initRemote = function (e) {
                    var t = this._providers;
                    if (e) for (var i = 0; i < t.length; i++) if (t[i].remote === e) return t[i].init = !0
                }, n.prototype.mergeData = function (e, t) {
                    for (var i = this._elems, n = Object.keys(i), r = {}, o = 0; o < n.length; o++) {
                        var a = n[o], s = i[a];
                        if (s.remote) {
                            var c = e[a], l = t[a];
                            if (void 0 !== l && void 0 !== c) {
                                var d = s.merge(c, l);
                                r[a] = d
                            } else void 0 === l && void 0 === c || (void 0 === l ? r[a] = c : void 0 === c && (r[a] = l))
                        }
                    }
                    return r
                }, n.prototype._mergeRemoteDataElements = function (e) {
                    for (var t = this._elems, i = Object.keys(t), n = 0; n < i.length; n++) {
                        var r = i[n], o = t[r];
                        if (o.remote) {
                            var a = o.value, s = JSON.stringify(a), c = e[r];
                            if (void 0 === c) o.dirtyRemote = !0; else {
                                var l = o.merge(a, c), d = JSON.stringify(l), u = JSON.stringify(c);
                                void 0 === l || s == d && u == d || (o.value = l, o.setLocal(l), o.dirtyRemote = !0)
                            }
                        }
                    }
                    this.emit("dataloaded", this._generateChangesPayload())
                }, n.prototype._loadRemote = function (e, t) {
                    this._subscribedRemote(e) && (this._initRemote(e), this._mergeRemoteDataElements(t), this.save())
                }, n.prototype._updateSaveLoop = function () {
                    void 0 !== this._saveIntervalId && (clearInterval(this._saveIntervalId), this._saveIntervalId = void 0), this._saveInterval > 0 && (this._saveIntervalId = setInterval(this._boundSaveAll, this._saveInterval))
                }, n.prototype._init = function () {
                    this._addDefaultRemotes(), this._updateSaveLoop()
                }, n.prototype._changes = function (e) {
                    var t = {}, i = [], n = this._elems;
                    void 0 === e && (e = Object.keys(n)), e instanceof Array || (e = [e]);
                    for (var r = 0; r < e.length; r++) {
                        var o = e[r];
                        if (this._keyExists(o)) {
                            var a = n[o];
                            a.dirtyRemote && (t[o] = a.value, a.remote && i.push(o))
                        }
                    }
                    return {elements: t, remoteFields: i}
                }, n.prototype._generateChangesPayload = function (e) {
                    var t = this._changes(e), i = this._elems, n = {};
                    for (var r in i) i.hasOwnProperty(r) && (n[r] = i[r].value);
                    return {data: n, changedFields: Object.keys(t.elements), remoteChangedFields: t.remoteFields}
                }, n.prototype._load = function (e, t, i, n, r) {
                    if (this._keyExists(e)) return !1;
                    var o = this._elems[e] = {}, a = void 0 !== t ? t : e;
                    return i = i.toLowerCase(), this._typeMap[i].localGet(a, (function (e, t) {
                        o.localValue = e, o.localKeyFound = t, n && n()
                    }), r), !0
                }, n.prototype._add = function (e, t, i) {
                    var n = this;
                    if (this._keyExists(e)) {
                        t = t || {};
                        var r = this._typeMap[i], o = this._elems[e];
                        o.type = i, o.remote = !0 === t.remote, o.merge = void 0 !== t.merge ? t.merge : r.defMerge;
                        var a = t.prefix;
                        Object.defineProperty(this, e, {
                            set: function (t) {
                                n._setKey(e, t, a)
                            }, get: function () {
                                return n._getKey(e)
                            }
                        });
                        var s = t.localKey || e;
                        a = t.prefix;
                        o.setLocal = function (e, t) {
                            r.localSet(s, e, t)
                        }, o.default = void 0 !== t.default ? t.default : r.defVal, o.localKeyFound ? (o.value = o.localValue, o.dirtyRemote = !1) : (o.value = void 0 !== t.default ? t.default : r.defVal, o.setLocal(o.value, a), o.dirtyRemote = !0), delete o.localValue, delete o.localKeyFound
                    }
                }, n.prototype._loadAndAdd = function (e, t, i, n, r) {
                    var o = this;

                    function a() {
                        o._add(e, i, n), r && r(o._elems[e].value)
                    }

                    i = i || {}, t !== e && (i.localKey = t);
                    var s = i.prefix;
                    this._elems.hasOwnProperty(e) ? a() : this._load(e, t, n, a, s)
                }, "Float,Int,String,Bool,Object".split(",").forEach((function (e) {
                    var t = e.toLowerCase();
                    n.prototype["add" + e] = function (e, i, n) {
                        this._loadAndAdd(e, e, i, t, n)
                    }, n.prototype["add" + e + "WithLocalKey"] = function (e, i, n, r) {
                        this._loadAndAdd(e, i, n, t, r)
                    }
                })), n.prototype.save = function (e) {
                    var t = this._generateChangesPayload(e), i = this._changes(e), n = Object.keys(i.elements).length;
                    for (var r in i.elements) i.elements.hasOwnProperty(r) && (this._elems[r].dirtyRemote = !1);
                    if (i.remoteFields.length, i.remoteFields.length > 0) for (var o = 0; o < this._providers.length; o++) {
                        var a = this._providers[o];
                        if (a.init) {
                            for (var s = 0; s < i.remoteFields.length; s++) {
                                var c = i.remoteFields[s], l = i.elements[c];
                                a.remote.setChange(c, l)
                            }
                            a.remote.saveChanges((function (e) {
                            }))
                        }
                    }
                    n > 0 && this.emit("datasaved", t)
                }, n.prototype.setSaveInterval = function (e) {
                    this._saveInterval = e, this._updateSaveLoop()
                }, n.prototype.setDirty = function (e) {
                    if (this._keyExists(e)) {
                        var t = this._elems[e];
                        "object" === t.type && t.merge === r.data.merge.havingMoreWrites && (t.value._numWrites = t.value._numWrites ? t.value._numWrites + 1 : 1), t.setLocal(t.value), t.dirtyRemote = !0
                    }
                }, n.prototype.merge = t, n.prototype.constructor = n, n.prototype.toString = function () {
                    for (var e = Object.keys(this._elems), t = "XS.Data elements:", i = 0; i < e.length; i++) {
                        var n = e[i], r = this._elems[n];
                        t += "\n" + n + ": " + ("object" == typeof r.value ? JSON.stringify(r.value) : r.value) + " (Is Remote: " + r.remote + ")"
                    }
                    return t
                }, n.prototype.resetToDefaults = function () {
                    for (var e = Object.keys(this._elems), t = 0; t < e.length; t++) {
                        var i = e[t], n = this._elems[i], r = this._typeMap[n.type];
                        r ? (n.value = void 0 !== n.default ? n.default : r.defVal, this.setDirty(i), n.dirty = !0) : console.error("XS.data missing type definition for key:", i, " of type:", n.type)
                    }
                    this.save(e)
                }, n.prototype.loadRemotes = function (e) {
                    this._providers.forEach((function (t) {
                        "function" == typeof t.remote.loadRemote && t.remote.loadRemote(e)
                    }))
                }, n.prototype.load = function (e, t, i) {
                    var n = (t = t || {}).type || "object", r = t.localKey || e;
                    return this.loadRemotes(e), this._loadAndAdd(e, r, t, n, i)
                }, e.XS = e.XS || {};
                var r = e.XS;
                r.data = new n
            }(window), function (e) {
                function t() {
                    this._soundIDs = 0, this._sounds = {}, this._musics = {}, this._userSoundMute = !1, this._userMusicMute = !1, this._engineMute = !1
                }

                t.prototype._init = function () {
                    i.initSound(), this._audioPlayer = window.Host && window.Host.Sound ? new a : new o
                }, t.prototype.preloadSound = function (e, t, i) {
                    var r = 1;
                    (i = i || {}).gain && (r = i.gain);
                    var o = new n(e, ++this._soundIDs, r);
                    return this._sounds[e] = o, (i = i || {}).music = !1, o._internalSound = this._audioPlayer.preload(o._soundID, t, i), o
                }, t.prototype.preloadMusic = function (e, t, i) {
                    if (!this._musics[e]) {
                        var n = 1;
                        (i = i || {}).gain && (n = i.gain);
                        var o = new r(e, n);
                        return this._musics[e] = o, (i = i || {}).music = !0, o._internalMusic = this._audioPlayer.preload(e, t, i), o
                    }
                    Host.Log("Error: Trying to preload music with existing label: " + e)
                }, t.prototype.getMusic = function (e) {
                    return this._musics[e]
                }, t.prototype.playMusic = function (e, t) {
                    var i = this.getMusic(e);
                    return i ? i.play(t) : Host.Log("Error: Music with label '" + e + "' not loaded."), i
                }, t.prototype.getSound = function (e) {
                    return this._sounds[e]
                }, t.prototype.playSound = function (e, t) {
                    var i = this.getSound(e);
                    return i ? i.play(t) : Host.Log("Error: Sound with label '" + e + "' not loaded."), i
                }, t.prototype.loopSound = function (e, t) {
                    var i = this.getSound(e);
                    return i ? i.loop(t) : Host.Log("Error: Sound with label '" + e + "' not loaded."), i
                }, t.prototype.isSoundMuted = function () {
                    return this._userSoundMute || this._engineMute
                }, t.prototype.isMusicMuted = function () {
                    return this._userMusicMute || this._engineMute
                }, t.prototype.muteSounds = function (e) {
                    this._userSoundMute = e, i.muteSound(e)
                }, t.prototype.muteMusics = function (e) {
                    this._userMusicMute = e, i.muteMusic(e)
                }, t.prototype.constructor = t, e.XS = e.XS || {};
                var i = e.XS;

                function n(e, t, n) {
                    var r = this;
                    r._label = e, r._soundID = t, r._initGain = n || 1, r._currentUserGain = n || 1, r._internalSound = null, r.play = function (e) {
                        if ((e = e || {}).gain && (r._currentUserGain = e.gain), r._internalSound) {
                            var t = function () {
                                r._internalSound.play(0, !1), r._internalSound.setGain(r._currentUserGain)
                            };
                            e.delay ? setTimeout(t, 1e3 * e.delay) : t()
                        } else i.audio._audioPlayer.play(r._soundID, e)
                    }, r.loop = function (e) {
                        (e = e || {}).gain && (r._currentUserGain = e.gain, r._internalSound && r._internalSound.setGain(r._currentUserGain)), r._internalSound ? r._internalSound.play(0, !0) : (e.loop = !0, r.play(r._soundID, e))
                    }, r.setGain = function (e) {
                        r._currentUserGain = e, r._internalSound ? r._internalSound.setGain(e) : (r._currentUserGain = e, i.audio._audioPlayer.setGain(r._soundID, e))
                    }, r.resetGain = function () {
                        r._internalSound ? r._internalSound.resetGain() : (r._currentUserGain = r._initGain, i.audio._audioPlayer.setGain(r._soundID, r._initGain))
                    }, r.setNewInitGain = function (e) {
                        r._internalSound ? r._internalSound.updateGain(e) : (r._initGain = e, r.resetGain())
                    }, r.pause = function () {
                        r._internalSound ? r._internalSound.setMuted(!0) : i.audio._audioPlayer.pause(r._soundID)
                    }, r.resume = function () {
                        r._internalSound ? r._internalSound.setMuted(!1) : i.audio._audioPlayer.resume(r._soundID)
                    }, r.stop = function () {
                        r._internalSound ? r._internalSound.stop() : i.audio._audioPlayer.stop(r._soundID)
                    }
                }

                function r(e, t) {
                    var n = this;
                    this._label = e, this._initGain = t || 1, this._currentUserGain = t || 1, this._internalMusic = null, n.play = function (e) {
                        if ((e = e || {}).gain && (this._currentUserGain = e.gain), this._internalMusic) return this._internalMusic.play(0, !0), void this._internalMusic.setGain(this._currentUserGain);
                        e.loop = !0, i.audio._audioPlayer.play(this._label, e)
                    }, n.stop = function () {
                        this._internalMusic ? this._internalMusic.stop() : i.audio._audioPlayer.stop(this._label)
                    }, n.crossfade = function (e) {
                        if (e && e.toSoundID && e.duration) {
                            if (this._internalMusic) return;
                            e.fromSoundID = this._label, i.audio._audioPlayer.crossfade(e)
                        }
                    }
                }

                function o() {
                    var e = this;
                    e.preload = function (e, t, n) {
                        var r = 1;
                        return r = (n = n || {}).gain || r, n.music ? i.Music.get(t, r) : i.Sound.get(t, r)
                    }, e.play = function (e, t) {
                    }, e.setGain = function (e, t) {
                    }, e.pause = function (e) {
                    }, e.resume = function (e) {
                    }, e.stop = function (e) {
                    }, e.crossfade = function (e) {
                    }, e.setGains = function (e) {
                    }
                }

                function a() {
                    var e = this;
                    e.preload = function (e, t, n) {
                        var r = 1;
                        return r = (n = n || {}).gain || r, n.music ? i.Music.get(t, r) : i.Sound.get(t, r)
                    }, e.play = function (e, t) {
                    }, e.setGain = function (e, t) {
                    }, e.pause = function (e) {
                    }, e.resume = function (e) {
                    }, e.stop = function (e) {
                    }, e.crossfade = function (e) {
                    }, e.setGains = function (e) {
                    }
                }

                i.audio = new t
            }(window), function (e) {
                var t = "--https--production-dot-XYYX-chatbot.appspot.com/refer";

                function i(e, t) {
                    t || (t = !1);
                    var i = JSON.parse(e.response);
                    if ("string" == typeof i.data && (i.data = JSON.parse(i.data)), t) for (var n = 0; n < i.length; n++) "string" == typeof i[n].data && (i[n].data = JSON.parse(i[n].data));
                    return i
                }

                (e.XS = e.XS || {}).referral = new function () {
                    return {
                        create: function (e, n) {
                            if (!e.player_id || !e.game || !e.data) return n(new Error("create - Incomplete/Invalid options object (e.g., player_id, game, data) field (target field is optional)"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                var e = i(r);
                                return n(null, e)
                            }, r.open("POST", t, !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.send(JSON.stringify({
                                player_id: e.player_id,
                                game: e.game,
                                data: e.data,
                                target: e.target
                            }))
                        }, get: function (e, n) {
                            if (!e) return n(new Error("get - referralID param missing or invalid"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                var e = i(r);
                                return n(null, e)
                            }, r.open("GET", t + "/" + e, !0), r.send()
                        }, accept: function (e, n, r) {
                            if (!e) return r(new Error("accept - referralID param missing or invalid"));
                            if (!n) return r(new Error("accept - playerID param missing or invalid "));
                            var o = new XMLHttpRequest;
                            o.onload = function () {
                                if (200 != o.status) return r(o.status, o.response);
                                var e = i(o);
                                return r(null, e)
                            }, o.open("PATCH", t + "/" + e, !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.send(JSON.stringify({
                                player_id: n,
                                action: "ACCEPT"
                            }))
                        }, update: function (e, n, r, o) {
                            if (!e) return o(new Error("update - referralID param missing or invalid"));
                            if (!n) return o(new Error("update - originPlayerID (player id of the original player who created the referral) param missing or invalid"));
                            if (!r) return o(new Error("update - data object param missing or invalid"));
                            var a = new XMLHttpRequest;
                            a.onload = function () {
                                if (200 != a.status) return o(a.status, a.response);
                                var e = i(a);
                                return o(null, e)
                            }, a.open("PATCH", t + "/" + e, !0), a.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), a.send(JSON.stringify({
                                player_id: n,
                                action: "UPDATE",
                                data: r
                            }))
                        }, delete: function (e, i) {
                            if (!e) return i(new Error("delete - referralID param missing or invalid"));
                            var n = new XMLHttpRequest;
                            n.onload = function () {
                                if (200 != n.status) return i(n.status, n.response);
                                var e = n.response;
                                return i(null, e)
                            }, n.open("DELETE", t + "/" + e, !0), n.send()
                        }, checkCanAccept: function (e, i, n) {
                            if (!e) return n(new Error("checkCanAccept - referralID param missing or invalid"));
                            if (!i) return n(new Error("checkCanAccept - playerID param missing or invalid"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                var e = r.response;
                                return n(null, e)
                            }, r.open("GET", t + "/" + e + "/" + i, !0), r.send()
                        }, getAllReferrals: function (e, n) {
                            if (!e) return n(new Error("getAllReferrals - playerID param missing or invalid"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                var e = i(r, !0);
                                return n(null, e)
                            }, r.open("GET", t + "/target/" + e, !0), r.send()
                        }, acceptAllReferrals: function (e, n) {
                            if (!e) return n(new Error("acceptAllReferrals - playerID param missing or invalid"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                for (var e = i(r), t = 0; t < e.accepted.length; t++) "string" == typeof e.accepted[t].data && (e.accepted[t].data = JSON.parse(e.accepted[t].data));
                                return n(null, e)
                            }, r.open("PATCH", t + "/target/" + e, !0), r.send()
                        }, deleteAllReferrals: function (e, n) {
                            if (!e) return n(new Error("deleteAllReferrals - playerID param missing or invalid"));
                            var r = new XMLHttpRequest;
                            r.onload = function () {
                                if (200 != r.status) return n(r.status, r.response);
                                var e = i(r);
                                return n(null, e)
                            }, r.open("DELETE", t + "/target/" + e, !0), r.send()
                        }
                    }
                }
            }(window), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("sound.v1"), Host.Preferences.GetBool("sound.v1", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("music.v1"), Host.Preferences.GetBool("music.v1", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("xs.muteSound.v4"), Host.Preferences.GetBool("xs.muteSound.v4", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("xs.muteMusic.v4"), Host.Preferences.GetBool("xs.muteMusic.v4", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("xs.muteStateOverload.v4"), Host.Preferences.GetBool("xs.muteStateOverload.v4", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), window.vpath = window.vpath || "./", document.body.addEventListener("MSHoldVisual", (function (e) {
                e.preventDefault()
            }), !1), document.body.addEventListener("contextmenu", (function (e) {
                e.preventDefault()
            }), !1), document.body.ontouchmove = function () {
            }, window.__safeCallback_noop = function () {
            }, __safeCallback_noop.__isSafeCallback = !0, window.safeCallback = function (e) {
                if ("function" != typeof e) return __safeCallback_noop;
                if (!0 === e.__isSafeCallback) return e;

                function t() {
                    try {
                        return e.apply(this, arguments)
                    } catch (t) {
                        throw window.onerror && window.onerror("Error in safeCallback: " + t.message, t), t
                    }
                }

                return t.__isSafeCallback = !0, t
            }, document.addEventListener && document.addEventListener("ontouchmove", (function (e) {
                e && e.preventDefault()
            }), !1), Array.from || (Array.from = function (e) {
                return [].slice.call(e)
            }), Math.hypot || (Math.hypot = function () {
                for (var e = 0, t = arguments.length; t--;) e += arguments[t] * arguments[t];
                return Math.sqrt(e)
            });
            var l = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {
                return setTimeout(e, 1e3 / 60)
            };
            !function (e) {
                e.XS = e.XS || {};
                var t = e.XS;
                t.LOG_SPAM_EVENT_EXCLUDE = t.LOG_SPAM_EVENT_EXCLUDE || [], t.LOG_SPAM_EVENT_EXCLUDE.push("resize");
                var i = getRenderer();
                getRenderer = void 0;
                var n = e.ATLUtil;

                function r(e) {
                    this.name = e, this.frc = 0, this.handlers = {}
                }

                e.width = 150, e.height = 150, r.nextHandlerId = 1, r.groups = {}, r.cachedEvents = [], r.ENG_GRP_NAME = "___e", e.ENG_FRZ_GRP = r.ENG_GRP_NAME, r.DEF_GRP_NAME = "___d", Object.defineProperty(Object.prototype, "_defFrzGrp", {
                    enumerable: !1,
                    value: r.DEF_GRP_NAME
                }), r.GLB_GRP_NAME = "___g", r.groups[r.GLB_GRP_NAME] = new r(r.GLB_GRP_NAME), r.get = function (e) {
                    return r.groups[e] = r.groups[e] || new r(e), r.groups[e]
                }, r.freezeUnfreezeGroup = function (e, t) {
                    var i = t ? 1 : -1, n = r.get(e);
                    for (var o in n.frc = Math.max(0, n.frc + i), n.handlers) n.handlers[o].frc = Math.max(0, n.handlers[o].frc + i)
                }, r.addHandler = function (e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = r.get(t[i]);
                        n.handlers[e.id] = e, n.frc > 0 && e.frc++
                    }
                }, r.removeHandler = function (e) {
                    for (var t in r.groups) {
                        var i = r.get(t);
                        delete i.handlers[e.id], i.frc > 0 && e.frc--
                    }
                }, r.cacheEvent = function (e, t, i, n, o) {
                    r.cachedEvents.push({target: e, eventName: t, grpName: i, cbData: n, callback: o})
                }, r.fireCachedEvents = function (e) {
                    for (var t = 0; t < r.cachedEvents.length; t++) {
                        var i = r.cachedEvents[t];
                        i.grpName === e && (i.callback.call(i.target, i.cbData), r.cachedEvents.splice(t--, 1))
                    }
                }, t.LOG_SPAM_EVENT_EXCLUDE = t.LOG_SPAM_EVENT_EXCLUDE || [], Object.defineProperty(Object.prototype, "_freezeEmit", {
                    enumerable: !1,
                    value: function (e) {
                        return e.type !== eventTypes.forced.name && (!(!d() && !t.isFrozen(e.frzGrp)) && (e.type === eventTypes.transient.name || r.cacheEvent(e.callFrom, e.name, e.frzGrp, e.cbData, e.callback), !0))
                    }
                }), r.prototype.constructor = r, t.on("gameLoaded", (function () {
                    pe(!0), t.is.facebookInstant && "undefined" != typeof FBInstant && FBInstant.logEvent && (i.XYYXGLErrors.TOTAL_ERRORS > 0 && FBInstant.logEvent("webgl_errors", 1, {
                        OUT_OF_MEMORY: i.XYYXGLErrors.OUT_OF_MEMORY,
                        INVALID_ENUM: i.XYYXGLErrors.INVALID_ENUM,
                        INVALID_VALUE: i.XYYXGLErrors.INVALID_VALUE,
                        INVALID_OPERATION: i.XYYXGLErrors.INVALID_OPERATION,
                        INVALID_FRAMEBUFFER_OPERATION: i.XYYXGLErrors.INVALID_FRAMEBUFFER_OPERATION,
                        CONTEXT_LOST_WEBGL: i.XYYXGLErrors.CONTEXT_LOST_WEBGL
                    }), FBInstant.logEvent("pixi_renderer", 1, {renderer: t.is.usingCanvasRenderer ? "canvas" : t.is.usingWebGLRenderer ? "webgl" : "unknown"}))
                }), {freezeGroup: ENG_FRZ_GRP}), t.modulesToPreload = [], t.ignoreCursorChanges = !1, t.dirty = !1, Host.Log("User Agent: " + navigator.userAgent), t.assets = {}, t.assets.__lookupFetchCache = function (e) {
                    var t = Host.bootstrapper && Host.bootstrapper.mnemonicMap[e];
                    return t && (ee[t] || $[t]) || ee[e] || $[e]
                }, t.assets.__loadFromNetwork = function (e, t) {
                    return t || (t = Host.bootstrapper.mnemonicMap[e] || e), new Promise((function (i, n) {
                        new F(t, i, window.__resolvePath(e), n, {crossOrigin: "anonymous"})
                    }))
                }, t.assets.__importJSG = function (e, t, i, n) {
                    var r = new O(e, {jsgData: [t, i], ignoreScaleCache: n});
                    return ee[e] = r, r
                };
                var o, s = /disableAtlas=?(\d+)/.exec(window.location.search);

                function d() {
                    return t.isFrozen(r.GLB_GRP_NAME)
                }

                s = s && "1" == s[1], t.assets.__importATL = function (e, i) {
                    if (t.is.badWebkit || s) return t.assets.__importPOG(e, i);
                    var n = new O(e, i);
                    return ee[e] = n, n
                }, t.assets.__importPOG = function (e, t) {
                    return new Promise((function (i, n) {
                        var r = t.data, o = t.mimetype, a = t.b64blob;
                        a || (a = btoa(r)), new F(e, i, "data:image/" + o + ";base64," + a, n)
                    }))
                }, e.fetch = (o = e.fetch, function (e) {
                    var i = t.assets.__lookupFetchCache(e);
                    return i || o.apply(this, arguments)
                }), e.preload = function () {
                    for (var e = [], i = [], n = [], r = arguments.length, o = new Array(r), s = 0; s < r; s++) o[s] = arguments[s];
                    for (var l = 0, d = o; l < d.length; l++) {
                        var u = d[l];
                        if (u instanceof Function) i.push(u); else if (u instanceof Array) for (var h, f = c(u); !(h = f()).done;) {
                            var A = h.value;
                            e.push(A)
                        } else u ? e.push(u) : console.warn("scope.preload() passed undefined asset! (skipping)")
                    }
                    var g = e.length, p = e.map((function (e) {
                        return e instanceof Promise ? e : e instanceof Function ? new Promise((function (t) {
                            e(), t()
                        })) : t.assets.__loadFromNetwork(e)
                    })).map((function (t) {
                        return t.then((function () {
                            return n.forEach((function (t) {
                                return t(e.length, --g)
                            }))
                        }))
                    }));
                    return Promise.all(p).then(a(regeneratorRuntime.mark((function e() {
                        var t, n, r;
                        return regeneratorRuntime.wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    t = c(i);
                                case 1:
                                    if ((n = t()).done) {
                                        e.next = 7;
                                        break
                                    }
                                    return r = n.value, e.next = 5, r();
                                case 5:
                                    e.next = 1;
                                    break;
                                case 7:
                                case"end":
                                    return e.stop()
                            }
                        }), e)
                    })))), function (e) {
                        n.push(e)
                    }
                }, t.assets.loadAsync = function (t, i) {
                    e.preload.apply(null, t.concat([function () {
                        i && i(t)
                    }]))
                }, t.is = window.__XYYX.platformIs, t.can = {
                    showSidebar: function () {
                        return !t.is.jioStb && Host.supports.showSidebar
                    }, showSidebarSocial: function () {
                        return !t.is.nosoc && !t.is.okru && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.samsungGameLauncher && !t.is.samsungInstantPlay && !t.is.tMobile && !t.is.lgtv && !t.is.oppoGlobal && !t.is.facebookInstant && !t.is.twitch && !t.is.yandex && !t.is.spilGamesWrapper && !t.is.rocketChat && !t.is.jio && !t.is.microsoftPwa && Host.supports.showSidebarSocial
                    }, showSidebarMore: function () {
                        return !t.is.facebookInstant && !t.is.twitch && !t.is.yandex && !t.is.spilGamesWrapper && !t.is.rocketChat && !t.is.jio && !t.is.okru && !t.is.samsungInstantPlay && !t.is.oppoGlobal && !t.is.microsoftPwa && Host.supports.showSidebarMore
                    }, showSidebarSaveProgressHeader: function () {
                        return !t.is.facebookApp && !t.is.nosoc && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.tMobile && !t.is.partnerWrapper && !t.is.microsoftPwa && Host.supports.showSidebarSaveProgressHeader
                    }, showSidebarShare: function () {
                        return !t.is.spilGamesWrapper && "rt" != Config.stage && !t.is.samsungInstantPlay && !t.is.lgtv && !t.is.yandex && !t.is.rocketChat && !t.is.jio && !t.is.facebookRooms && !t.is.oppoGlobal && !t.is.microsoftPwa && Host.supports.showSidebarShare
                    }, showModalLoginWithFacebook: function () {
                        return window.requestFacebookLogin && !1 === window.facebookAuthed && Config.facebookAppId && !t.is.twitter && !t.is.nosoc && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.tMobile && !t.is.microsoftPwa && Host.supports.showModalLoginWithFacebook
                    }, showModalShareDialog: function () {
                        return window.shareDialogueCallback && !t.is.nosoc && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.tMobile && !t.is.microsoftPwa && Host.supports.showModalShareDialog
                    }, showModalCrossPromo: function () {
                        return !t.is.lgtv && !t.is.spilGamesWrapper && !t.is.okru && !t.is.facebookInstant && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.yandex && !t.is.samsungGameLauncher && !t.is.samsungInstantPlay && !t.is.jio && !t.is.rocketChat && !t.is.oppoGlobal && !t.is.tMobile && !t.is.microsoftPwa && Host.supports.showModalCrossPromo
                    }, showModalMetaButtonOnGameStart: function () {
                        return t.is.nosoc && !t.is.microsoftPwa && Host.supports.showModalMetaButtonOnGameStart
                    }, showModalMetaButtonOnGameEnd: function () {
                        return t.is.nosoc && !t.is.microsoftPwa && Host.supports.showModalMetaButtonOnGameEnd
                    }, showWebLoginWithFacebook: function () {
                        return !t.is.nosoc && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.samsungGameLauncher && !t.is.samsungInstantPlay && !t.is.tMobile && !t.is.partnerWrapper && !t.is.microsoftPwa && Host.supports.showWebLoginWithFacebook
                    }, createWebSocialFrame: function () {
                        return !t.is.nosoc && !t.is.rcs && !t.is.huawei && !t.is.miniclip && !t.is.tMobile && !t.is.lgtv && !t.is.oppoGlobal && Host.supports.createWebSocialFrame
                    }, showModalPreGame: function () {
                        return Host.supports.showModalPreGame
                    }, useGamepad: function () {
                        return t.is.jioStb || Host.supports.useGamepad
                    }, showCrossPromoBanner: function () {
                        return !t.is.microsoftPwa && Host.supports.showCrossPromoBanner
                    }, showModalTryAgain: function () {
                        return !t.is.tv && Host.supports.showModalTryAgain
                    }
                }, t.is.samsungGameLauncher ? window.gaPath += "app/gamelauncher/" : t.is.samsungInstantPlay ? window.gaPath += "app/samsunginstantplay/" : t.is.facebookApp ? window.gaPath += "app/facebook/" : t.is.pwa ? window.gaPath += "app/pwa/" : t.is.windowsApp ? window.gaPath += "app/windowsapp/" : t.is.okru ? window.gaPath += "app/okru/" : t.is.vkru ? window.gaPath += "app/vk/" : t.is.rcs ? window.gaPath += "app/rcs/" : t.is.huawei ? window.gaPath += "app/huawei/" : t.is.miniclip && (window.gaPath += "app/miniclip/"), t.abtest = new function () {
                    var e = this;
                    e.initialized = !1, e.forcedCohorts = {}, e.abTestCohorts = {}, e.validCohorts = {};
                    var i = [], n = function () {
                        for (var e = [], t = 0; 64 > t;) e[t] = 0 | 4294967296 * Math.abs(Math.sin(++t));
                        return function (t) {
                            for (var i, n, r, o, a = [], s = (t = unescape(encodeURI(t))).length, c = [i = 1732584193, n = -271733879, ~i, ~n], l = 0; l <= s;) a[l >> 2] |= (t.charCodeAt(l) || 128) << l++ % 4 * 8;
                            for (a[t = 16 * (s + 8 >> 6) + 14] = 8 * s, l = 0; l < t; l += 16) {
                                for (s = c, o = 0; 64 > o;) s = [r = s[3], (i = 0 | s[1]) + ((r = s[0] + [i & (n = s[2]) | ~i & r, r & i | ~r & n, i ^ n ^ r, n ^ (i | ~r)][s = o >> 4] + (e[o] + (0 | a[[o, 5 * o + 1, 3 * o + 5, 7 * o][s] % 16 + l]))) << (s = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * s + o++ % 4]) | r >>> 32 - s), i, n];
                                for (o = 4; o;) c[--o] = c[o] + s[o]
                            }
                            for (t = ""; 32 > o;) t += (c[o >> 3] >> 4 * (1 ^ 7 & o++) & 15).toString(16);
                            return t
                        }
                    }();
                    e.setup = function (e) {
                        return i.push(e), {
                            fallback: function (e) {
                            }
                        }
                    }, e.force = function (e, t) {
                        console.warn("Forcing cohort: " + t + " for test: " + e), this.forcedCohorts[e] = t
                    }, e.addTest = function (e, i, r, o) {
                        this.validCohorts[i] = r;
                        var a, s, c, l, d = this.forcedCohorts[i];
                        return d || (d = r[(a = e, s = i, c = r.length, l = n(s + ":" + a).substr(-8), parseInt(l, 16) % c)]), this.abTestCohorts[i] = d, o && "{}" !== JSON.stringify(this.abTestCohorts) && t.track.customEvent(i, 1, this.abTestCohorts), {
                            test: i,
                            cohort: d
                        }
                    }, e.init = function (n, r) {
                        var o = {};
                        if (window._jsonData && window._jsonData.ab_tests || r) {
                            var a = r || window._jsonData.ab_tests;
                            for (var s in a) {
                                var c = this.addTest(n, s, a[s].cohorts, !1);
                                o[c.test] = c.cohort
                            }
                            for (s in console.log("XS.abtest: A/B test cohorts: ", o), a) t.track.customEvent(s, 1, o)
                        }
                        e.initialized = !0;
                        for (var l = 0; l < i.length; ++l) i[l]();
                        e.emit("abtest-init")
                    }, e.cohort = function (t) {
                        return e.initialized || console.error("XS.abtest.cohort called before XS.abtest was initialized!"), e.abTestCohorts[t]
                    }, e.when = function (t, i, n) {
                        e.initialized || console.error("XS.abtest.when called before XS.abtest was initialized!");
                        var r = this.cohort(t);
                        return "string" == typeof i ? r && i && r == i && n && n() : "object" == typeof i ? r && i[r] && i[r]() : r || console.error("No A/B test cohort defined for test '" + t + "' - nothing was executed!"), {
                            fallback: function () {
                            }
                        }
                    }
                }, t.is.facebookInstant && Host.on("FBInstantStart", (function () {
                    t.abtest.init(FBInstant.player.getID())
                }), {freezeGroup: ENG_FRZ_GRP}), t.loadEmbedData = function (e, t, i) {
                    if (window.embeddedFiles && window.embeddedFiles[e]) console.log("Loading embedded data: " + e), t(window.embeddedFiles[e]); else {
                        console.warn("Loading data (not embedded!): " + e);
                        var n = new XMLHttpRequest;
                        n.crossOrigin = "anonymous", i && n.overrideMimeType && n.overrideMimeType(i);
                        try {
                            n.open("GET", e, !0), n.onreadystatechange = function () {
                                4 == n.readyState && ("200" == n.status ? t(n.responseText) : (n = n.onreadystatechange = null, console.error("XS.loadData: Error loading data: ", n)))
                            }, n.send()
                        } catch (r) {
                            console.error("loadEmbedData: Error loading data (2): ", r)
                        }
                    }
                }, window.insertButton = function (e, t, i) {
                    console.warn("window.insertButton needs to be overwritten before releasing this game."), Host.WrapperLog("window.insertButton is not defined")
                }, t.isFrozen = function (e) {
                    return (e = e || r.DEF_GRP_NAME) in r.groups && r.get(e).frc > 0
                }, t.freeze = function (e) {
                    e = e || r.DEF_GRP_NAME, r.freezeUnfreezeGroup(e, !0)
                }, t.unfreeze = function (e) {
                    e = e || r.DEF_GRP_NAME, r.freezeUnfreezeGroup(e, !1), r.fireCachedEvents(e)
                }, t.canvas = document.getElementById("gameCanvas"), t.stageContainer = new i.Stage(2105376), R(t.stageContainer), t.stageContainer.on("up", (function (e) {
                    t.stageContainer.emit("stageup", e)
                }), {freezeGroup: ENG_FRZ_GRP}), t.stageContainer.on("down", (function (e) {
                    t.currentInputField && t.currentInputField.blur && t.currentInputField.blur(), window.focus && window.focus()
                }), {freezeGroup: ENG_FRZ_GRP}), t.httpPrefix = "--https--", t.devicePixelRatio = Math.min(2, window.devicePixelRatio || 1), t.styles = {
                    margins: {
                        top: (t.is.iOSWrapper || t.is.standalone) && t.is.iOS ? t.is.iPhoneXOrLater ? 0 : 20 : 0,
                        bottom: 0,
                        left: 0,
                        right: 0
                    }, spacing: {top: 0, bottom: 0, left: 0, right: 0}
                }, t.showGameOverAd = function () {
                }, t.hideGameOverAd = function () {
                }, t.showInterstitialAd = function (e) {
                    e && e()
                }, t.resizeAd = function () {
                }, t.showRateGame = function () {
                }, t.submitHighscore = function (e) {
                }, t.submitLowscore = function (e) {
                }, t.configLoadCallback = function () {
                }, t.insertRemoveAdsButton = function () {
                }, t.removeAdsButton = function () {
                };
                var u, h = !1;
                t.skipResizing = !1, window.onresize = function (e) {
                    if (!t.skipResizing) {
                        clearTimeout(h), clearInterval(u), clearTimeout(Se), h = setTimeout((function () {
                            Qe({instant: !1, event: e}), u = setInterval((function () {
                                Re(!1)
                            }), 250)
                        }), 5)
                    }
                }, window.onfocus = function (e) {
                    t.emit("focus", {id: "window_focus"})
                }, window.onblur = function (e) {
                    t.emit("blur", {id: "window_focus"})
                }, document.addEventListener("visibilitychange", (function (e) {
                    "hidden" == document.visibilityState && t.emit("blur", {id: "window_focus"}), "visible" == document.visibilityState && t.emit("focus", {id: "window_focus"})
                }));
                var f = [];
                var A, g, p, v = function (e) {
                    t.Music.setMuted(e), t.backgroundMusic && t.soundSettings && (e ? t.backgroundMusic.stop(0) : t.backgroundMusic.play(0, !0))
                }, w = function () {
                    var e = 0;

                    function i() {
                        var e = t.is.iOS ? 1 : .25;
                        return t.is.facebookRooms ? e : 1
                    }

                    return window.Host && window.Host.Sound ? (Host.Log("Using SoundPlayer!"), function (t) {
                        t = !!t;
                        var n = this;

                        function r(e, r, o) {
                            var a = this;
                            a.playing = !1;
                            var s = o;
                            a.resetGain = function () {
                                a.setGain(o)
                            }, a.setGain = function (t) {
                                s = t, Host.Sound.SetVolume(e, t * i())
                            }, a.updateGain = function (e) {
                                o = e, a.setGain(e)
                            }, a.currentGain = function () {
                                return a.currentGain
                            }, a.setMuted = function (t) {
                                Host.Sound.Pause && a.playing && Host.Sound.Pause(e, t)
                            }, a.play = function (i, o) {
                                function c() {
                                    Host.Sound.Play(e, r, o, s, t)
                                }

                                n.muted || t && a.playing || (a.playing = !0, i ? setTimeout(c, 1e3 * i) : c())
                            }, a.stop = function (t) {
                                a.playing = !1, Host.Sound.Stop(e)
                            }
                        }

                        this.muted = !1, this.setMuted = function (e) {
                            n.muted = e, Host.Sound.PauseAll(e, t)
                        }, this.soundNodes = [], this.get = function (i, n) {
                            var o = i + "_" + e++;
                            return Host.Sound.Preload(o, i, t), new r(o, i, n)
                        }
                    }) : function (n) {
                        var r = this, o = w.context, a = window.AudioContext || window.webkitAudioContext;

                        function s() {
                            if ("running" !== o.state && !r.muted) for (var e = ["touchstart", "mousedown"], t = 0; t < e.length; t++) window.addEventListener(e[t], (function () {
                                o.resume()
                            }), {once: !0})
                        }

                        void 0 === o && void 0 !== a && ((o = new a).onstatechange = s), this.context = o, this.debug = function () {
                            console.log(o)
                        };
                        var c = [];
                        this.soundNodes = [], this.muted = !1, this.setMuted = function (e) {
                            r.muted = e, e ? o.suspend() : (o.resume(), s(), function () {
                                for (; f.length;) f.pop()()
                            }());
                            try {
                                for (var t = 0; t < this.soundNodes.length; ++t) this.soundNodes[t] && this.soundNodes[t].setMuted(e)
                            } catch (i) {
                            }
                        }, this.get = function (e, t) {
                            var i = c[e] || function (e, t) {
                                return c[e] = new h(e, t)
                            }(e, t);
                            return i.updateGain(t), this.soundNodes.push(i), i
                        };
                        var l = [], d = !1;

                        function u() {
                            d = !0, l.length ? l.shift()() : d = !1
                        }

                        function h(a, s) {
                            this.id = a + "_" + e++;
                            var c, h, A = this;
                            A.loaded = !1, A.playing = !1;
                            var g = {gain: {value: s}};
                            if (o) {
                                f.push((function () {
                                    var e = new XMLHttpRequest;

                                    function t(e) {
                                        console.error('Error loading sound "%s":', a, e), u()
                                    }

                                    e.open("GET", window.__resolvePath(a), !0), e.responseType = "arraybuffer", e.onerror = t, e.onload = function () {
                                        200 !== e.status && t(e.status + "/" + e.statusText), o.decodeAudioData(e.response, (function (t) {
                                            c = t, A.loaded = !0, h && h(), e = null, u()
                                        }), t)
                                    }, l.push((function () {
                                        e.send()
                                    })), d || (u(), n || u())
                                })), g = o.createGain ? o.createGain() : {gain: {value: s}}
                            }
                            this.gain = g.gain;
                            var p = {}, v = 0;

                            function w() {
                                for (var e in p) return !0;
                                return !1
                            }

                            function y(e) {
                                var t = w();
                                p[e] = !0, !t && w() && (v = A.currentGain(), A.setGain(0, !0))
                            }

                            function m(e) {
                                var t = w();
                                delete p[e], t && !w() && A.setGain(v, !0)
                            }

                            this.setGain = function (e, t) {
                                t || !w() ? this.gain.value = e * i() : v = e
                            }, this.updateGain = function (e, t) {
                                t || !w() ? (s = e, this.gain.value = s * i()) : v = s = e
                            }, this.resetGain = function (e) {
                                e || !w() ? this.gain.value = s * i() : v = s
                            }, A.currentGain = function () {
                                return this.gain.value / i()
                            }, this.getCurrentTime = function () {
                                return o ? o.currentTime : 0
                            };
                            var C = void 0;
                            this.play = function (e, t, i) {
                                if (A.loaded) {
                                    if (n) {
                                        if (A.playing && !i) return
                                    } else A.stop(0);
                                    !function (e, t) {
                                        if (!r.muted && A.loaded) {
                                            C = {
                                                stop: function () {
                                                }
                                            };
                                            try {
                                                A.playing = !0, (C = o.createBufferSource()).buffer = c, C.loop = t || !1, A.resetGain(), C.connect(g), g.connect(o.destination), C.start(o.currentTime + (e || 0))
                                            } catch (i) {
                                            }
                                        }
                                    }(e, t)
                                } else n && (h = function () {
                                    var i = A.currentGain();
                                    A.play(e, t), A.setGain(i)
                                })
                            }, this.stop = function (e) {
                                if (e = e || 0, C && A.playing) try {
                                    C.stop(e)
                                } catch (t) {
                                }
                                A.playing = !1
                            }, this.setMuted = function (e) {
                                e ? y("mute") : m("mute")
                            }, t.on("blur", (function (e) {
                                y((e ? e.id : null) || "__default")
                            }), {freezeGroup: ENG_FRZ_GRP}), t.on("focus", (function (e) {
                                m((e ? e.id : null) || "__default")
                            }), {freezeGroup: ENG_FRZ_GRP}), window.stage && stage.on("down", (function (e) {
                                m("window_focus")
                            }), {freezeGroup: ENG_FRZ_GRP})
                        }

                        this.currentTrack = null
                    }
                }();
                t.Sound = new w, t.Music = new w(!0), t.backgroundMusic = null, t.muteMusic = function (e) {
                    t.soundSettings && t.soundSettings.muteMusic.set(e), v(e), t.emit("mutemusic", e)
                }, t.muteSound = function (e) {
                    t.soundSettings && t.soundSettings.muteSound.set(e), t.Sound.setMuted(e), t.emit("mutesound", e)
                }, t.setBackgroundMusic = function (e, i) {
                    var n = null;
                    return "string" == typeof e ? n = t.Music.get(e, i || 1) : (n = e, i ? n.setGain(i) : n.resetGain()), t.backgroundMusic = n, v(t.soundSettings.muteMusic.get()), n
                }, t.initSound = function () {
                    t.soundSettings = {
                        legacyMuteSounds: Host.Preferences.QuickBool("sound.v1"),
                        legacyMuteMusic: Host.Preferences.QuickBool("music.v1"),
                        muteSound: Host.Preferences.QuickBool("xs.muteSound.v4"),
                        muteMusic: Host.Preferences.QuickBool("xs.muteMusic.v4"),
                        muteStateOverload: Host.Preferences.QuickBool("xs.muteStateOverload.v4")
                    }, t.is.facebookRooms && !t.soundSettings.muteStateOverload.get() && (t.soundSettings.muteStateOverload.set(!0), t.soundSettings.legacyMuteSounds.set(!1), t.soundSettings.legacyMuteMusic.set(!0), t.soundSettings.muteSound.set(!1), t.soundSettings.muteMusic.set(!0)), !t.is.progressiveWebAppEnabled || t.soundSettings.muteStateOverload.get() || t.is.samsungInstantPlay || t.is.snapchat || (t.soundSettings.muteStateOverload.set(!0), t.soundSettings.legacyMuteSounds.set(!t.soundSettings.legacyMuteSounds.get()), t.soundSettings.legacyMuteMusic.set(!t.soundSettings.legacyMuteMusic.get()), t.soundSettings.muteSound.set(!t.soundSettings.muteSound.get()), t.soundSettings.muteMusic.set(!t.soundSettings.muteMusic.get())), t.Music && v(t.soundSettings.muteMusic.get()), t.Sound && t.Sound.setMuted(t.soundSettings.muteSound.get())
                }, t.muteAll = function () {
                    if (window.Host && window.Host.Sound) window.Host.Sound.MuteAll(); else {
                        if (A) return;
                        A = !0, g = t.soundSettings.muteSound.get(), p = t.soundSettings.muteMusic.get(), t.backgroundMusic && void 0 === t.backgroundMusic.__preMuteGain && (t.backgroundMusic.__preMuteGain = t.backgroundMusic.currentGain()), t.muteMusic(!0), t.muteSound(!0)
                    }
                }, t.unmuteAll = function () {
                    if (window.Host && window.Host.Sound) window.Host.Sound.UnmuteAll(); else {
                        if (!A) return;
                        A = !1, t.muteMusic(p), t.muteSound(g), t.backgroundMusic && void 0 !== t.backgroundMusic.__preMuteGain && (t.backgroundMusic.setGain(t.backgroundMusic.__preMuteGain), delete t.backgroundMusic.__preMuteGain)
                    }
                }, t.loadScript = function (e, t) {
                    var i, n, r, o;
                    i = document, n = "script", o = i.getElementsByTagName(n)[0], t = t || {}, (r = i.createElement(n)).src = e, r.async = "async", r.defer = "defer", t.charset && (r.charset = t.charset), o.parentNode.insertBefore(r, o)
                }, t.waitForSDK = function (e, t) {
                    var i = setInterval((function () {
                        if (window[e]) return clearInterval(i), t()
                    }), 100)
                }, t.util = {}, t.util.urlKeyVal = function (e, t) {
                    return encodeURIComponent(e) + "=" + encodeURIComponent(t)
                }, t.util.urlEncode = function (e) {
                    var i = [];
                    for (key in e) i.push(t.util.urlKeyVal(key, e[key]));
                    return i.join("&")
                }, t.remoteConfig = {};
                var y = !1;
                t.loadConfig = function (e) {
                    // if (!(y || t.is.facebookInstant || t.is.twitch || t.is.yandex || t.is.jioStb || t.is.samsungInstantPlay || t.is.snapchat)) {
                    //     var i = Config.remoteConfigVersion;
                    //     if (t.is.iOS ? i += ".ios" : t.is.android && !t.is.silk ? i += ".android" : t.is.chromeWrapper ? i += ".chrome" : t.is.facebookInstant && (i += ".instant"), "undefined" != typeof Config && Config.stage && "live" != Config.stage && "gold" != Config.stage && "beta" != Config.stage && "rc" != Config.stage) Host.WrapperLog("Skipping ad config loading, because of Config.stage"), console.warn("Skipping ad config loading, because of Config.stage"); else {
                    //         var n = t.httpPrefix + "cdn.XYYX.com/config/" + e + "." + i + ".json?r=" + (new Date).getTime();
                    //         Host.Tools.LoadJSON(n, (function (e) {
                    //             for (var i in Host.WrapperLog("Loading Config URL: " + n), e) t.remoteConfig[i] = e[i];
                    //             t.configLoadCallback()
                    //         }), (function () {
                    //             Host.WrapperLog("Failed to load config: " + n), setTimeout((function () {
                    //                 t.loadConfig(e)
                    //             }), 6e4)
                    //         }))
                    //     }
                    //     Host.Log(t.httpPrefix + "cdn.XYYX.com/config/" + e + "." + i + ".json?r="), y = !0
                    // }
                }, t.navigate = function (e, i) {
                    window.Host && window.Host.IOS && window.Host.IOS.OpenURL && Host.IOS.OpenURL(e), window.Host && window.Host.Android && window.Host.Android.OpenURL ? window.Host.Android.OpenURL(e) : t.is.clay ? (window.open(e, i || "_blank"), navigator.app && navigator.app.loadUrl && navigator.app.loadUrl(e, {openExternal: !0})) : window.open(e, i || "_blank")
                }, t.utils = {}, t.utils.asynchLoadImageFromPath = function (e) {
                    var t = i.Sprite.fromImage(e);
                    return R(t), t
                }, t.utils.composeButton = function (e, t) {
                    var i, n = new T;
                    return n.addChild(i = new z(e)), n.addChild(t = new Text2(Host.Localize.Translate(t), {
                        fill: "#FFFFFF",
                        size: 26,
                        weight: 400
                    })), t.y = 47, Object.defineProperty(n, "anchor", {
                        get: function () {
                            return {
                                set: function (e, n) {
                                    i.anchor.set(e, 68 * n / 47), t.anchor.set(e, 47 * n / 21)
                                }
                            }
                        }
                    }), n
                };
                var m = !1;

                function C(e, t, i) {
                    window.dirty = !0, e.emit("down", {event: t, isMouseEvent: i})
                }

                function I(e) {
                    t.is.chromeOSDevice || (m = !0, this.mousedown = void 0), C(this, e, !1)
                }

                function E(e) {
                    m || C(this, e, !0)
                }

                function S(e, t, i) {
                    window.dirty = !1, e.emit("up", {event: t, isMouseEvent: i})
                }

                function b(e) {
                    t.is.chromeOSDevice || (m = !0, this.mouseup = void 0), S(this, e, !1)
                }

                function x(e) {
                    m || S(this, e, !0)
                }

                function B(e, t, i) {
                    e.emit("move", {event: t, isMouseEvent: i})
                }

                function P(e) {
                    t.is.chromeOSDevice || (m = !0, this.mouseup = void 0), B(this, e, !1)
                }

                function Q(e) {
                    m || B(this, e, !0)
                }

                function R(e) {
                    e.on("eventAttached", (function (t) {
                        switch (t.eventName) {
                            case"down":
                                !function (e) {
                                    e.interactive = !0, e.__touchStartEnabled || (e.__touchStartEnabled = !0, e.touchstart = I, e.mousedown = E)
                                }(e);
                                break;
                            case"up":
                                !function (e) {
                                    e.interactive = !0, e.__touchEndEnabled || (e.__touchEndEnabled = !0, e.mousedown = e.mousedown || function () {
                                    }, e.touchstart = e.touchstart || function () {
                                    }, e.touchendoutside = e.touchend = b, e.mouseupoutside = e.mouseup = x)
                                }(e);
                                break;
                            case"move":
                                !function (e) {
                                    e.interactive = !0, e.__touchMoveEneabled || (e.__touchMoveEneabled = !0, e.touchmove = P, e.mousemove = Q)
                                }(e);
                                break;
                            case"rightdown":
                                !function (e) {
                                    e.interactive = !0, e.__rightDownEnabled || (e.__rightDownEnabled = !0, e.rightdown = function (e) {
                                        this.emit("rightdown", {event: e, isMouseEvent: !0})
                                    })
                                }(e);
                                break;
                            case"rightup":
                                !function (e) {
                                    e.interactive = !0, e.__rightUpEnabled || (e.__rightUpEnabled = !0, e.rightup = function (e) {
                                        this.emit("rightup", {event: e, isMouseEvent: !0})
                                    })
                                }(e)
                        }
                    }), {freezeGroup: ENG_FRZ_GRP})
                }

                function D(e) {
                    e && (e.removeEventListener("load", k), e.removeEventListener("error", M))
                }

                function k(e) {
                    D(e.target), window.dirtyOnce = !0
                }

                function M(e) {
                    D(e.target), window.dirtyOnce = !0, window.onerror && window.onerror("Failure to load generated asset image: " + this.path + " > " + e.message, e.sourceURL, e.line)
                }

                function H(e, t) {
                    e.prototype.inside = function (e, t, i) {
                        return !1
                    }
                }

                Object.defineProperty(i.DisplayObjectContainer.prototype, "dimensions", {
                    get: function () {
                        return new Point(this.width, this.height)
                    }, set: function (e) {
                        this.width = e.x, this.height = e.y
                    }
                }), i.DisplayObjectContainer.prototype.applyResolutionRecursive = function () {
                    console.warn("OBSOLETE: Don't use applyResolutionRecursive()")
                }, Object.defineProperty(i.DisplayObjectContainer.prototype, "resolution", {
                    get: function () {
                        return void 0 !== this._resolution ? this._resolution : 1
                    }, set: function (e) {
                        this._resolution = e
                    }
                }), Object.defineProperty(i.Texture.prototype, "resolution", {
                    get: function () {
                        return void 0 !== this._resolution ? this._resolution : 1
                    }, set: function (e) {
                        var t = (this._resolution || 1) != e;
                        this._resolution = e, t && this.valid && this._updateUvs()
                    }
                });
                var T = i.DisplayObjectContainer.expand((function () {
                    return i.DisplayObjectContainer.call(this), R(this), this
                }));
                H(T), e.Container = T;
                var L = T.expand((function (e, t) {
                    return T.call(this), this._width = e || 0, this._height = t || 0, Object.defineProperty(this, "width", {
                        get: function () {
                            return this._width * this.scale.x
                        }, set: function (e) {
                            this._width = e / this.scale.x
                        }
                    }), Object.defineProperty(this, "height", {
                        get: function () {
                            return this._height * this.scale.y
                        }, set: function (e) {
                            this._height = e / this.scale.y
                        }
                    }), this
                }));
                e.ContainerFixedSize = L;
                var O = function e(t, i) {
                    var r = e.cache[t];
                    if (r) return r;
                    e.cache[t] = this, this.imageData = i, this.path = t, this.renderer = n.ATLImageRenderer.load(t, i), this.drawScale = void 0, this.isJSG = !0, this.isATL = !0, this.width = this.renderer.assetWidth, this.height = this.renderer.assetHeight, this.texture = void 0
                };
                O.cache = {}, O.prototype.toString = function () {
                    return "ATLImage(" + this.path + ", { width: " + this.width + ", height: " + this.height + " })"
                }, O.prototype.ensureTexture = function () {
                    return this.texture || this.draw().texture
                }, O.prototype.draw = function (e) {
                    var r = 1;
                    if (e = e || {}, !this.imageData.ignoreScaleCache) {
                        var o = e.resolution || t.baseResolution || 1;
                        r = function (e, t) {
                            var i = Math.min(n.ATLAS_SIZE.w, n.ATLAS_SIZE.h) - 4,
                                r = Config.svgScaleMassaging || n.svgScaleMassaging;
                            if (void 0 === r && (r = !0), !r) return 1;
                            var o = e * Math.max(t.width, t.height);
                            if (!0 === r) return Math.min(1, i / o);
                            if (!isNaN(r)) return Math.min(1, r / e, i / o);
                            var a = r.factor;
                            if (a < 1.1) return 1;
                            for (var s = Math.min(r.maxDim || i, i), c = 1; o > s;) c /= a, o /= a;
                            return c
                        }(o, this) * o
                    }
                    var a = Math.ceil(this.width * r), s = Math.ceil(this.height * r), c = n.getAtlasFit(a, s);
                    this.canvas = this.renderer.draw(c.canvas, {scale: r, offset: c, autoSizeCanvas: !0});
                    var l = new Rectangle(c.x / r, c.y / r, a / r, s / r),
                        d = this.canvas.__atlasBaseTexture || new i.BaseTexture(this.canvas);
                    return this.texture ? (this.texture.resolution = r, this.texture.baseTexture = d, this.texture.setFrame(l)) : this.texture = new i.Texture(d, l, void 0, r), this.drawScale = r, this.emit("redrawn-image"), this
                }, O.prototype.constructor = O, e.ATLImage = O;
                var F = function (e, t, i, n, r) {
                    this.path = e, this.isPOG = !0, this.texture = void 0;
                    var o = new Image;
                    if (o.path = e, r) for (var a in r) r.hasOwnProperty(a) && (o[a] = r[a]);
                    var s = this;
                    o.onload = function () {
                        $[e] = s, s.width = o.width, s.height = o.height, t && t(s)
                    }, o.onerror = n, o.src = i || embeddedAssets[e], s.img = o
                };
                F.prototype.toString = function () {
                    return "POGImage(" + this.path + ", { width: " + this.width + ", height: " + this.height + " })"
                }, F.prototype.ensureTexture = function () {
                    return this.texture || this.draw().texture
                }, F.prototype.draw = function () {
                    return this.texture || (this.texture = new i.Texture(i.Texture.fromCanvas(this.img), new Rectangle(0, 0, this.width, this.height))), this.emit("redrawn-image"), this
                }, F.prototype.constructor = F, e.POGImage = F;
                var X = 0;

                function G(e, n) {
                    var r;
                    if (e.isATL) {
                        if (e.fetched = !0, t.initComplete && !t.bulkCreateSpritesON || e.texture) e.ensureTexture(); else {
                            var o = new i.BaseTexture({width: e.width, height: e.height, complete: !0, isMock: !0});
                            e.texture = new i.Texture(o)
                        }
                        r = e.texture
                    } else e.isPOG ? r = e.ensureTexture() : e.baseTexture ? r = e : (r = i.Texture.fromCanvas(e, void 0, 1), e.texture = r);
                    return r.floorCoordinates = n.floorCoordinates, r
                }

                var z = i.Sprite.expand((function (e) {
                    if (!e) throw new Error("A Sprite needs an image");
                    return this.image = e, void 0 === e.path && (e.path = "DynamicSprite:" + X++), this.texture = G(e, this), i.Sprite.call(this, this.texture), R(this), arguments[2] && this.scale.set(arguments[1]), this
                }));

                function j(e, t) {
                    return e.texture.baseTexture.hasLoaded || !e.texture.noFrame ? e.texture.frame[t] : e !== e.image && e.image[t] || 1
                }

                Object.defineProperty(z.prototype, "image", {
                    get: function () {
                        return this._image
                    }, set: function (e) {
                        e !== this && (this.texture = G(e, this)), this._image = e
                    }
                }), z.prototype.applyResolution = function () {
                    console.warn("OBSOLETE: Don't use applyResolution()")
                }, Object.defineProperty(z.prototype, "width", {
                    get: function () {
                        return this.scale.x * j(this, "width")
                    }, set: function (e) {
                        this.scale.x = e / j(this, "width"), this._width = e
                    }
                }), Object.defineProperty(z.prototype, "height", {
                    get: function () {
                        return this.scale.y * j(this, "height")
                    }, set: function (e) {
                        this.scale.y = e / j(this, "height"), this._height = e
                    }
                }), z.prototype.floorCoordinates = !0, z.prototype.cleanTextureCache = function (e) {
                }, z.prototype.destroyAssociatedTexture = function () {
                    this.image.isPOG ? (this.texture.destroy(!0), this._image.texture = void 0) : this.image.isATL ? (this._image.fetched = !1, this.texture.destroy(), this._image.texture = void 0) : this.texture.destroy(!0), this._image = void 0
                }, z.fromSheet = function (e, t) {
                    if (!e.frames || !e.frames[0]) throw new Error("Can't make Sprite from frameless Sheet");
                    var i;
                    return "object" == typeof t ? ((i = new U(e.image)).texture.setFrame(t), i.texture.resolution = e.image.drawScale || 1) : (i = new U(e.image, e.frames[0].width, e.frames[0].height)).setFrame(t), i
                }, H(z), e.Sprite = z;
                var U = z.expand((function (e, t, n) {
                    function r(t) {
                        var n = t.image.texture.width / t._width >> 0,
                            r = n * (t.image.texture.height / t._height >> 0);
                        if (t.frames = [], r) {
                            for (var o = 0; o < r; o++) {
                                var a = o / n >> 0, s = {
                                    x: (o % n >> 0) * t._width,
                                    y: a * t._height,
                                    width: t._width,
                                    height: t._height
                                };
                                t.frames.push(s)
                            }
                            t.texture = new i.Texture(e.texture.baseTexture, e.texture.frame, void 0, e.drawScale), t.setFrame(t._frame || 0, !0)
                        }
                    }

                    z.call(this, e), this._width = t || this.texture.width, this._height = n || this.texture.height;
                    var o = this;
                    r(o), this.image.on("redrawn-image", (function () {
                        r(o)
                    }))
                }));
                Object.defineProperty(U.prototype, "width", {
                    get: function () {
                        return this._width * this.scale.x
                    }, set: function (e) {
                        this.scale.x = e / this._width
                    }
                }), Object.defineProperty(U.prototype, "height", {
                    get: function () {
                        return this._height * this.scale.y
                    }, set: function (e) {
                        this.scale.y = e / this._height
                    }
                }), U.prototype.setFrame = function (e, t) {
                    if (0 == this.frames.length) return this._frame = e;
                    if (e !== this._frame || t) {
                        this.texture.resolution = this.image.drawScale || 1;
                        var i = this.clippingRectangleFor(e);
                        this.texture.setFrame(i), this._frame = e, window.dirtyOnce = !0
                    }
                }, U.prototype.clippingRectangleFor = function (e) {
                    e = Math.floor(e) % this.frames.length;
                    var t = this.frames[e], i = this.image.texture.frame;
                    return i ? new Rectangle(t.x + i.x, t.y + i.y, t.width, t.height) : t ? new Rectangle(t.x, t.y, t.width, t.height) : void 0
                }, U.prototype._frame = 0, Object.defineProperty(U.prototype, "frame", {
                    get: function () {
                        return this._frame
                    }, set: function (e) {
                        this.setFrame(e)
                    }
                }), e.Sheet = U;
                var N = i.Sprite.expand((function (e) {
                    i.Sprite.call(this, e)
                })), J = N.prototype._renderWebGL;
                N.prototype._renderWebGL = function (e) {
                    this._dirtyTexture && (this._dirtyTexture = !1, i.updateWebGLTexture(this.texture.baseTexture, e.gl)), J.call(this, e)
                }, e.TextureSprite = N, t.reportTextures = function () {
                    console.log("Total Texture Pixels:", i.__totalPixels)
                };
                var K = {}, V = [];
                e.Text2 = i.Sprite.expand((function (e, t) {
                    var n, r, o = this, a = Host.Localize.Translate(e);
                    (t = t || {}).weight = t.weight || "300", t.size = t.size || 30, t.fill = t.fill || "#000000";
                    var s = 0, c = 1;

                    function l() {
                        var e = a.toString() + ":" + t.size * c + ":" + s + ":" + JSON.stringify(t);
                        if (e != r) {
                            var l = K[e], d = K[r];
                            if (d && (d.count--, 0 == d.count && (V.push(d.text), delete K[r])), !l) {
                                var u = V.pop(), h = u ? u.style : {};
                                for (var f in t) h[f] = t[f];
                                t.dropShadow ? h.dropShadowDistance = (t.dropShadowDistance || 6) * c : (h.dropShadowDistance = 0, h.dropShadow = void 0);
                                var A = Math.max((t.size - s) * c, .1);
                                h._font = (t.italic ? "italic " : "") + t.weight + " " + A + "px " + (t.font || '"Helvetica Neue","Trebuchet MS", Helvetica, sans-serif'), l = K[e] = {
                                    text: u || new i.Text(a.toString(), h),
                                    localizedString: a,
                                    count: 0,
                                    ratio: c
                                }, u && (u.text = a.toString())
                            }
                            l.count++, r = e, l.text.updateText(), n = l.text, o.setTexture(n.texture), window.dirtyOnce = !0
                        }
                    }

                    function d() {
                        if (s = 0, l(), t.maxWidth) for (; n.texture.frame.width > 1 * t.maxWidth && t.size - s > 1;) s += 2, t.size - s < 1 && (s = t.size - 1), l()
                    }

                    o.getContent = function () {
                        return l(), n
                    }, i.Sprite.call(o, Texture.emptyTexture), o.setText = function (e) {
                        null == e && (e = ""), a.toString() !== e.toString() && (a = Host.Localize.Translate(e), d())
                    }, o.onLanguageChange = function () {
                        d()
                    }, o.updateStyle = function (e) {
                        var i = !1;
                        for (var n in e) t[n] != e[n] && (i = !0, t[n] = e[n]);
                        i && d()
                    }, o.setStyle = o.updateStyle;
                    c = 1;
                    l(), d()
                })), e.Graphics = i.Graphics.expand((function () {
                    return R(this), i.Graphics.call(this), this
                })), e.Rectangle = i.Rectangle, e.Rectangle.prototype.getPosition = function () {
                    return new Point(this.x, this.y)
                }, e.Rectangle.prototype.getSize = function () {
                    return new Point(this.width, this.height)
                };
                var Y = i.Texture.fromCanvas;
                i.Texture.fromCanvas = function (e) {
                    return e.isPOG && (arguments[0] = e.img), Y.apply(this, arguments)
                }, e.Texture = i.Texture, e.RenderTexture = i.RenderTexture, e.Point = i.Point, e.BlendModes = i.blendModes;
                var W = 1e3 / 60;

                function q(e, t, i, n, o) {
                    if (!(e instanceof Function)) throw"timeout callback must be a function";
                    t = t || 0, i = i || !1, n = n && n.constructor === Array ? n : [], o && o.constructor === Array ? 0 == o.length && (o = [r.DEF_GRP_NAME]) : o = o && "string" == typeof o ? [o] : [r.DEF_GRP_NAME], this.cb = e, this.cbParams = n, this.delayMS = 1e3 * t, this.originalDelayMS = this.delayMS, this.repeats = i, this.id = r.nextHandlerId++, this.frc = 0, q.timeouts[this.id] = this, r.addHandler(this, o)
                }

                q.timeouts = {}, q.clear = function (e) {
                    if ("number" == typeof e && isFinite(e) && Math.round(e) === e) {
                        var t = null;
                        e in q.timeouts && (t = q.timeouts[e], delete q.timeouts[e], r.removeHandler(t))
                    }
                }, q.tick = function () {
                    var e = [];
                    for (var t in q.timeouts) {
                        (n = q.timeouts[t]).frc > 0 || n.tick() && e.push(t)
                    }
                    for (var i = 0; i < e.length; i++) {
                        var n;
                        t = e[i];
                        if ((n = q.timeouts[t]) && (n.repeats || q.clear(parseInt(t)), void 0 !== n.cb)) try {
                            n.cb.apply(window, n.cbParams)
                        } catch (r) {
                            window.onerror && window.onerror("Timeout.tick error: " + r.message, r.sourceURL, r.line, void 0, r)
                        }
                    }
                }, t.on("tick", q.tick, {freezeGroup: ENG_FRZ_GRP}), q.prototype.tick = function () {
                    return this.delayMS -= W, this.delayMS <= 0 && (this.repeats && (this.delayMS = this.originalDelayMS + this.delayMS), !0)
                }, q.prototype.constructor = q, t.setTimeout = function (e, t, i, n) {
                    return new q(e, t / 1e3, !1, i, n).id
                }, t.clearTimeout = function (e) {
                    q.clear(e)
                }, t.setInterval = function (e, t, i, n) {
                    return new q(e, t / 1e3, !0, i, n).id
                }, t.clearInterval = function (e) {
                    q.clear(e)
                };
                var Z = function e(t, i, n, o, a) {
                    for (var s in n = null == n ? 1 : n, 1 != e.multiplier && (n *= e.multiplier), this.id = r.nextHandlerId++, this.frc = 0, this.tweenedProps = {}, this.offset = 1, this.method = o || e.easeout, this.length = 1e3 * n / (1e3 / 60), this.target = t, i) this.tweenedProps[s] = {
                        start: t[s],
                        end: i[s]
                    };
                    e.tweens[this.id] = this, a && a.constructor === Array ? 0 == a.length && (a = [r.DEF_GRP_NAME]) : a = a && "string" == typeof a ? [a] : [r.DEF_GRP_NAME], r.addHandler(this, a)
                };
                Z.multiplier = 1, Z.nextId = 1, Z.prototype.call = function (e, t) {
                    return e instanceof Function || console.warn("Tween callback parsed to .call is not a function", e), this.callback = e, this.callbackParams = t, this
                }, Z.prototype.wait = function (e) {
                    return this.delay = 1e3 * (e || 0) / (1e3 / 60), this
                }, Z.prototype.tick = function () {
                    if (this.delay > 0) return this.delay--, !1;
                    for (var e in this.tweenedProps) {
                        var t = this.tweenedProps[e];
                        this.target[e] = this.method(t.start, t.end instanceof Function ? t.end() : t.end, this.offset / this.length)
                    }
                    return this.offset++, this.offset > this.length || void 0
                }, Z.prototype.__complete = function () {
                    for (var e in this.tweenedProps) this.target[e] = this.tweenedProps[e].end instanceof Function ? this.tweenedProps[e].end() : this.tweenedProps[e].end;
                    if (this.callback) {
                        var i = this;
                        i.callback && t.once("animate", (function () {
                            i.callback.apply(i.target, i.callbackParams || null)
                        }), {freezeGroup: ENG_FRZ_GRP})
                    }
                }, Z.prototype.complete = function () {
                    Z.complete(this)
                }, Z.prototype.clear = function () {
                    Z.clear(this)
                }, Z.tweens = {}, Z.linear = Z.linary = function (e, t, i) {
                    return e + (t - e) * i
                }, Z.easein = function (e, t, i) {
                    return e + (t - e) * (1 - Math.sin(i * Math.PI / 2 + Math.PI / 2))
                }, Z.easeout = function (e, t, i) {
                    return e + (t - e) * Math.sin(i * Math.PI / 2)
                }, Z.easeinout = function (e, t, i) {
                    return e + (t - e) * ((Math.sin(i * Math.PI - Math.PI / 2) + 1) / 2)
                }, Z.bounce = function (e, t, i) {
                    return e + (t - e) * Math.sin(i * Math.PI)
                }, Z.tick = function () {
                    var e = [];
                    for (var t in Z.tweens) {
                        (n = Z.tweens[t]).frc > 0 || n.tick() && e.push(t)
                    }
                    for (var i = 0; i < e.length; i++) {
                        if ((t = e[i]) in Z.tweens) {
                            var n = Z.tweens[t];
                            window.dirtyOnce = !0, delete Z.tweens[t], r.removeHandler(n), n.__complete()
                        }
                    }
                }, t.on("tick", Z.tick, {freezeGroup: ENG_FRZ_GRP}), Z.complete = function () {
                    for (var e = 0; e < arguments.length; e++) {
                        var t = arguments[e];
                        for (var i in Z.tweens) if (i in Z.tweens) {
                            var n = Z.tweens[i];
                            n.target != t && n != t || (window.dirtyOnce = !0, delete Z.tweens[n.id], r.removeHandler(n), n.__complete())
                        }
                    }
                }, Z.clear = function () {
                    for (var e = 0; e < arguments.length; e++) {
                        var t = arguments[e];
                        for (var i in Z.tweens) if (i in Z.tweens) {
                            var n = Z.tweens[i];
                            n.target != t && n != t || (n.callback = void 0, delete Z.tweens[n.id], r.removeHandler(n))
                        }
                    }
                }, Z.activeTweensCount = function () {
                    var e = 0;
                    for (var t in Z.tweens) {
                        Z.tweens[t].frc > 0 || e++
                    }
                    return e
                }, e.Tween = Z;
                var _ = n.getNewCanvasObject();
                _.height = _.width = 1, _.path = "Image wrapper for load failure";
                var $ = {}, ee = {}, te = e.fetch;
                e.embed = function (e) {
                    return function (e) {
                        if (!e) return console.warn("You tried to load an image with an empty path"), _;
                        if (void 0 === $[e]) {
                            if (te) return "string" == typeof e && console.info('"%s" not found in preloadCache. Calling native fetch().', e), te.apply(this, arguments);
                            "string" == typeof e ? console.error('You can only use the embed method in conjuction with preload for > "%s"', e) : console.error("Native fetch() missing:", arguments)
                        }
                        return $[e]
                    }(e).img
                };
                var ie = (new Date).getTime();

                function ne() {
                    var e = (new Date).getTime();
                    if (d()) return ie = e, void l(ne);
                    if (t.emit("animate"), e - ie > 5e3 && !t.clampTickToAnimate && (ie = e), (e - ie > W || t.clampTickToAnimate) && (ie += W, t.emit("tick"), !t.clampTickToAnimate && e - ie > 28.333333333333336)) for (ie += W, t.emit("tick"); e - ie > 51.66666666666667;) ie += W, t.emit("tick");
                    (t.dirty || window.dirty || window.dirtyOnce || 0 !== Z.activeTweensCount()) && (t.emit("render"), window.dirtyOnce = !1, t.renderer.render(t.stageContainer), t.emit("afterRender")), l(ne)
                }

                window.dirty = !1, window.dirtyOnce = !1, t.renderer = null, t.initRenderer = function () {
                    var e = window.__antialias, n = t.is.android && t.is.androidVersion < 5 && !t.is.firefoxMobile,
                        r = "1" === Host.Web.GetQueryString("disableWebGL") || n || Config.disableWebGL || t.is.badWebkit && Config.disableWebGLonBadWebkit;
                    t.renderer = r ? new i.CanvasRenderer(width, height, {
                        view: t.canvas,
                        antialiasing: !1,
                        antialias: !1,
                        transparent: !1,
                        clearBeforeRender: !0
                    }) : i.autoDetectRenderer(width, height, {
                        view: t.canvas,
                        antialiasing: e,
                        antialias: e,
                        transparent: !1,
                        clearBeforeRender: !0
                    }), t.is.usingCanvasRenderer = t.renderer.type === i.CANVAS_RENDERER, t.is.usingWebGLRenderer = t.renderer.type === i.WEBGL_RENDERER, Qe({
                        forced: !0,
                        load: !0
                    }), ne(), delete t.initRenderer
                }, window.performanceTest = function () {
                    for (var e = (new Date).getTime(), i = 0; i < 1e3; i++) t.renderer.render(t.stageContainer);
                    console.log((new Date).getTime() - e)
                }, setTimeout((function () {
                    var e = (new Date).getTime(), t = (new Date).getTime(), i = {};
                    l((function n() {
                        var r = (new Date).getTime(), o = r - t;
                        if (i[o] = (i[o] || 0) + 1, t = r, r - e < 6e4) l(n); else {
                            var a = 0, s = 0;
                            for (var c in i) a += c * i[c], s += i[c];
                            var d = Math.round(1e3 / (a / s));
                            "undefined" != typeof Config && "undefined" != typeof ga ? (ga("send", "event", Config.id, "Performance", "Avg Framerate", d), d < 30 && ga("send", "event", Config.id, "Performance", "Below 30 Framerate", d), d < 15 && ga("send", "event", Config.id, "Performance", "Below 15 Framerate", d), d < 10 && ga("send", "event", Config.id, "Performance", "Below 10 Framerate", d)) : console.log("Can't yet send events about trackFrameSpeed perf"), i = t = null
                        }
                    }))
                }), 2e3), e.gameHeight = height, e.gameWidth = width, e.stage = new L, t.stage = e.stage, R(e.stage), stage.hitArea = new i.Rectangle(0, -1e4, 1e5, 1e5), stage.interactive = !0, stage.touchstart = function () {
                }, t.stageContainer.addChild(stage), stage.orientation = "landscape", stage.orientationMode = "dynamic";
                var re = n.getNewCanvasObject(), oe = re.getContext("2d"), ae = new N(Texture.emptyTexture),
                    se = new i.Graphics;
                stage.addChild(ae), stage.addChild(se);
                var ce = 0, le = 0, de = {top: 0, bottom: 0, left: 0, right: 0};

                function ue(e, t, i) {
                    return void 0 === e ? e : e.toString() === e && "%" == e[e.length - 1] ? t * (parseInt(e.substring(0, e.length - 1)) / 100) : e * i
                }

                stage.background = {
                    color: "#000000",
                    gradient: void 0,
                    texture: void 0,
                    callback: void 0,
                    disabled: !1
                };
                var he = {};

                function fe(e) {
                    if (ae.texture.destroy(!0), e.target) {
                        var i = new Texture.fromCanvas(e.target);
                        ae.setTexture(i), ae.width = t.stage.width + 5, ae.height = t.stage.height + 5
                    }
                    window.dirtyOnce = !0, D(e.target)
                }

                function Ae(e) {
                    var t = e.error || e;
                    window.dirtyOnce = !0, window.onerror && window.onerror("Failure to generate background: " + t.message, t), D(e.target)
                }

                stage.background.embellish = function (e) {
                    if (he != e) {
                        he = e;
                        for (var i = [], n = 0; n < e.length; n++) i.push(e[n].path);
                        window.preload.apply(null, i.concat([function () {
                            stage.background.callback = function (i, n) {
                                for (var r = 0; r < e.length; r++) {
                                    var o = e[r];
                                    if (o.path) {
                                        var a = Math.min(t.stage.height / targetHeight, t.stage.width / targetWidth),
                                            s = o.pogimage.width * a, c = o.pogimage.height * a, l = 0, d = 0,
                                            u = ue(o.left, i.width, a), h = ue(o.right, i.width, a),
                                            f = ue(o.top, i.width, a), A = ue(o.bottom, i.width, a);
                                        void 0 !== u && void 0 !== h && (s = i.width - 5 - u - h), void 0 !== u && (l = u), void 0 !== h && (l = i.width - h - s), void 0 !== f && void 0 !== A && (c = i.height - 5 - f - A), void 0 !== f && (d = f), void 0 !== A && (d = i.height - 5 - A - c), l += ue(o.offsetX, s, 1) || 0, d += ue(o.offsetY, c, 1) || 0, n.drawImage(o.pogimage.img, l, d, s, c)
                                    }
                                }
                            };
                            for (var i = 0; i < e.length; i++) e[i].path && (e[i].pogimage = t.assets.__lookupFetchCache(e[i].path));
                            pe(!0)
                        }]))
                    }
                }, t.getScreenshot = function () {
                    stage.updateTransform();
                    var e = n.getNewCanvasObject();
                    e.style.width = (e.width = width * t.devicePixelRatio) / t.devicePixelRatio + "px", e.style.height = (e.height = height * t.devicePixelRatio) / t.devicePixelRatio + "px";
                    var i = {
                        context: e.getContext("2d"),
                        maskManager: null,
                        scaleMode: null,
                        smoothProperty: null,
                        currentBlendMode: 0
                    };
                    return stage._renderCanvas(i), e
                }, t.getTintedTexture = i.CanvasTinter.getTintedTexture, stage.background.drawBackground = function (e, i, r, o, a, s) {
                    if (e.fillStyle = stage.background.color, e.fillRect(0, 0, i, r), o) {
                        var c;
                        switch (o.type) {
                            case"radial":
                                var l = null == o.multiplier ? 1 : o.multiplier,
                                    d = null == o.verticalOffset ? .5 : o.verticalOffset;
                                c = e.createRadialGradient(i / 2, r * d, 0, i / 2, r * d, Math.max(i / 2, r / 2) * l);
                                break;
                            case"linear":
                                c = e.createLinearGradient(i * (o.width || 0), r, 0, 0);
                                break;
                            default:
                                throw"Unsupported radial format"
                        }
                        for (var u = 0; u < o.stops.length; u++) c.addColorStop.apply(c, o.stops[u]);
                        e.fillStyle = c, e.fillRect(0, 0, i, r)
                    }
                    if (s && s(re, e), a) {
                        if (!a.scaled) {
                            var h = a.scaled = n.getNewCanvasObject();
                            if (a.isATL) {
                                var f = a.texture.frame, A = a.draw({resolution: 1}).canvas;
                                h.width = Math.ceil(f.width * t.devicePixelRatio), h.height = Math.ceil(f.height * t.devicePixelRatio), h.getContext("2d").drawImage(A, f.x, f.y, f.width, image.frame.height, 0, 0, h.width, h.height)
                            } else a.isPOG ? (h.width = Math.ceil(a.width * t.devicePixelRatio / 2), h.height = Math.ceil(a.height * t.devicePixelRatio / 2), h.getContext("2d").drawImage(a.img, 0, 0, a.width, a.height, 0, 0, h.width, h.height)) : (h.width = Math.ceil(a.width * t.devicePixelRatio / 2), h.height = Math.ceil(a.height * t.devicePixelRatio / 2), h.getContext("2d").drawImage(a, 0, 0, a.width, a.height, 0, 0, h.width, h.height))
                        }
                        var g = e.createPattern(a.scaled, "repeat");
                        e.fillStyle = g, e.fillRect(0, 0, i, r)
                    }
                    t.emit("backgroundredraw", {context: e})
                };
                var ge = new Image;

                function pe(e) {
                    if ((e || ce != width || le != height || de.top != (t.styles.margins.top || 0) || de.bottom != (t.styles.margins.bottom || 0) || de.left != (t.styles.margins.left || 0) || de.right != (t.styles.margins.right || 0)) && t.initComplete) if (ce = width, le = height, de.top = t.styles.margins.top || 0, de.bottom = t.styles.margins.bottom || 0, de.left = t.styles.margins.left || 0, de.right = t.styles.margins.right || 0, stage.background.disabled) ae.parent && stage.removeChild(ae), se.clear(), se.beginFill(t.stageContainer.backgroundColor, 1), se.drawRect(0, 0, t.stage.width, t.stage.height), se.endFill(); else {
                        if (se.parent && stage.removeChild(se), t.stage.width > t.stage.height && t.stage.width > 2048) {
                            var i = t.stage.height / t.stage.width;
                            re.width = 2053, re.height = 2048 * i + 5
                        } else if (t.stage.height > t.stage.width && t.stage.height > 2048) {
                            i = t.stage.width / t.stage.height;
                            re.width = 2048 * i + 5, re.height = 2053
                        } else re.width = t.stage.width + 5, re.height = t.stage.height + 5;
                        stage.background.drawBackground(oe, re.width, re.height, stage.background.gradient, stage.background.texture, stage.background.callback), Host.dataUrlsSupported ? ((ge = new Image).onload = fe, ge.onerror = Ae, ge.src = re.toDataURL(), re.width = re.height = 1) : (ae.texture.destroy(!0), ae.setTexture(new Texture.fromCanvas(re)), ae.width = t.stage.width + 5, ae.height = t.stage.height + 5), window.dirtyOnce = !0
                    }
                }

                stage.background.refresh = pe, window.targetWidth = 2732, window.targetHeight = 2048, window.forceRatio = !1;
                var ve = 0;

                function we() {
                    var e = document.documentElement.clientHeight;
                    return t.is.iOS && !t.is.facebookInstant && (e = window.innerHeight || e), Math.max(e, 100)
                }

                function ye() {
                    return Math.max(document.documentElement.clientWidth, 100)
                }

                t.getWindowHeight = we, t.initComplete = !1;
                var me = 0, Ce = 0, Ie = 0, Ee = 0, Se = 0, be = 0, xe = 0,
                    Be = e.GUIContainer = L.expand((function (e, i) {
                        var n = L.call(this, e, i);
                        n.topLeft = n.addChild(new T), n.top = n.addChild(new T), n.topRight = n.addChild(new T), n.bottomLeft = n.addChild(new T), n.bottom = n.addChild(new T), n.bottomRight = n.addChild(new T), n.left = n.addChild(new T), n.right = n.addChild(new T), n.center = n.addChild(new T), n.groups = [n.topLeft, n.top, n.topRight, n.left, n.center, n.right, n.bottomLeft, n.bottom, n.bottomRight], n.margins = {
                            top: 10,
                            right: 10,
                            bottom: 10,
                            left: 10
                        }, t.on("resize", (function () {
                            var e = t.gui.width, i = t.gui.height;
                            n.topLeft.x = n.margins.left, n.topLeft.y = n.margins.top, n.top.x = e / 2, n.top.y = n.margins.top, n.topRight.x = e - n.margins.right, n.topRight.y = n.margins.top, n.left.x = n.margins.left, n.left.y = i / 2, n.center.x = e / 2, n.center.y = i / 2, n.right.x = e - n.margins.right, n.right.y = i / 2, n.bottomLeft.x = n.margins.left, n.bottomLeft.y = i - n.margins.bottom, n.bottom.x = e / 2, n.bottom.y = i - n.margins.bottom, n.bottomRight.x = e - n.margins.right, n.bottomRight.y = i - n.margins.bottom
                        }), {freezeGroup: ENG_FRZ_GRP})
                    }));

                function Pe(e, t) {
                    if (Pe.lastRez != e || t) {
                        if (n._textureAtlases.length || t) {
                            Pe.lastRez = e;
                            for (var i = 0; i < n._textureAtlases.length; ++i) {
                                n._textureAtlases[i].reset()
                            }
                            var r = [];
                            for (var o in O.cache) {
                                (a = O.cache[o]).fetched && r.push(a)
                            }
                            r.sort((function (e, t) {
                                return e.height > t.height ? -1 : e.height < t.height ? 1 : 0
                            }));
                            for (i = 0; i < r.length; ++i) {
                                var a;
                                (a = r[i]).draw({resolution: e})
                            }
                        }
                    } else console.log("resizeTextureAtlases() skipping because lastRez=", Pe.lastRez, "rez=", e)
                }

                function Qe(i) {
                    if (t.renderer && (clearTimeout(Se), !t.currentInputField)) {
                        var n = (i = i || {}).instant, r = ye(), o = we();
                        void 0 !== i.forced_width && (r = i.forced_width), void 0 !== i.forced_height && (o = i.forced_height);
                        var a = Math.max(o - t.styles.margins.top - t.styles.spacing.top - t.styles.spacing.bottom - t.styles.margins.bottom, 10),
                            s = Math.max(r - t.styles.margins.left - t.styles.spacing.left - t.styles.spacing.right - t.styles.margins.right, 10);
                        if (i.forced || Ie != a || Ee != s || me != r || Ce != o) {
                            clearTimeout(xe), me = e.width = r, Ce = e.height = o, Ie = a, Ee = s;
                            var c = 2 * Math.ceil(e.width / 2) * t.devicePixelRatio >> 0,
                                l = 2 * Math.ceil(e.height / 2) * t.devicePixelRatio >> 0;
                            t.is.iOS && (window.scrollTo && window.scrollTo(0, -1), n || (document.body.style.height = t.renderer.view.style.height = 1 + (l / t.devicePixelRatio >> 0) + "px")), t.is.iOS ? (clearTimeout(ve), n ? g() : ve = setTimeout(g, 500)) : g();
                            var d = targetWidth, u = targetHeight, h = stage.orientation;
                            "dynamic" == stage.orientationMode && (h = e.width <= a ? "portrait" : "landscape"), "portrait" == h && (u = targetWidth, d = targetHeight);
                            var f, A = window.forceRatio ? window.forceRatio : Math.min(Math.min(c / d, l / u), 1);
                            (i.forced || stage.resolution != A || stage.orientation != h) && (stage.scale.set(A, A), t.gui.scale.set(.5 * t.devicePixelRatio, .5 * t.devicePixelRatio), t.stageContainer.resolution = 1, t.baseResolution = A), e.gameHeight = a, e.gameWidth = s, t.resizeAd(), t.stageContainer.dimensions = f = new Point(width * t.devicePixelRatio, height * t.devicePixelRatio), stage.dimensions = stage.toLocalSize(f), t.gui.dimensions = t.gui.toLocalSize(f), clearTimeout(be), i.forced ? Pe(t.baseResolution, i.load) : be = setTimeout((function () {
                                Pe(t.baseResolution)
                            }), 300), stage.orientation = h, t.size = {
                                game: {width: s, height: a},
                                target: {width: d, height: u},
                                canvas: {width: width * t.devicePixelRatio, height: height * t.devicePixelRatio},
                                canvasSafe: {
                                    width: width - t.styles.spacing.left - t.styles.spacing.right,
                                    height: height - t.styles.spacing.top - t.styles.spacing.bottom
                                },
                                stage: {
                                    width: width / (stage.scale.x / t.stageContainer.scale.x),
                                    height: height / (stage.scale.y / t.stageContainer.scale.y)
                                }
                            }, t.emit("resize", i), t.emit("late-resize", i)
                        }
                    }

                    function g() {
                        t.renderer.resize(c, l), t.renderer.view.style.width = (c / t.devicePixelRatio >> 0) + "px", t.renderer.view.style.height = (l / t.devicePixelRatio >> 0) + "px", t.is.android && (document.body.style.width = Math.ceil(e.width) + "px", document.body.style.height = Math.ceil(e.height) + "px"), window.dirtyOnce = !0, window.scrollTo && window.scrollTo(0, 0), t.renderer.render(t.stageContainer)
                    }
                }

                function Re(e) {
                    window.inScreenshotMode || height == we() && width == ye() || (e ? t.initComplete && window.onresize() : Se = setTimeout((function () {
                        Re(!0)
                    }), 1))
                }

                t.gui = new Be, t.stageContainer.addChild(t.gui), t.currentInputField = !1, t.bulkSpriteLoad = function (e) {
                    "function" == typeof e ? (t.bulkCreateSpritesON = !0, e(), t.bulkCreateSpritesON = !1, Pe(t.resolution, !0)) : console.warn("No callback passed to bulkSpriteLoad, ignoring the call!")
                }, t.on("late-resize", pe, {freezeGroup: ENG_FRZ_GRP}), t.on("force-resize", Qe, {freezeGroup: ENG_FRZ_GRP}), setInterval((function () {
                    Re(!1)
                }), 500), window.inScreenshotMode || (window.onunload && (window.onunload = function () {
                    setTimeout((function () {
                        window.onresize()
                    }), 1)
                }), t.on("focus", (function () {
                    clearTimeout(xe), xe = setTimeout((function () {
                        Qe({forced: t.is.iOS})
                    }), t.is.iOS ? 500 : 1)
                }), {freezeGroup: ENG_FRZ_GRP}));
                var De = /deterministicRand=?(\d*)/.exec(window.location.href);
                t.rand = De ? Math.seed(De[1] ? +De[1] : 42) : Math.random, t.clampTickToAnimate = "1" === Host.Web.GetQueryString("clampTicks")
            }(window), (XS || {}).VERSION = "1.4.0", function (e) {
                var t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, i = /^\s*\-\s*/;

                function n(e) {
                    return (e < 10 ? "0" : "") + e
                }

                function r() {
                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function (e) {
                        var t = 16 * Math.random() | 0;
                        return ("x" == e ? t : 3 & t | 8).toString(16)
                    }))
                }

                var o = /[-_]([a-z])/gi, a = /([a-z])([A-Z])|([A-Z])([A-Z])[a-z]/g;

                function s(e) {
                    return e.replace(o, (function (e) {
                        return e[1].toUpperCase()
                    }))
                }

                function c(e) {
                    return e.replace(a, (function (e) {
                        return e[0] + "_" + e.substr(1)
                    })).toLowerCase()
                }

                var l = function (e) {
                    var t = e || "-";

                    function i() {
                        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                    }

                    var n = (new Date).getTime().toString(16).slice(0, 11) + (65536 * (1 + Math.random()) | 0).toString(16).substring(1, 2);
                    return i() + i() + t + i() + t + i() + t + i() + t + n
                }, d = l();

                function u() {
                    var t = this;
                    t.timeStart = e && e.__XYYX && e.__XYYX.startTime || Date.now(), t.timeLoaded = void 0, t.handleGameLoaded = t.handleGameLoaded.bind(this), t.handleFBInstantStart = t.handleFBInstantStart.bind(this), t.handleFBInstantPreloadComplete = t.handleFBInstantPreloadComplete.bind(this), t.handleRefreshPersistentData = t.handleRefreshPersistentData.bind(this), t.handlePlaySession = t.handlePlaySession.bind(this), t.isSessionTimedOut = t.isSessionTimedOut.bind(this), t.extendSession = t.extendSession.bind(this), t.data = {}, t.dataStore = {}, t.dataIsDirty = !0, t.providers = {}, t.DEBUG = !1, this.facebook_entrypoint = this.facebook_context_type = this.facebook_campaign = null, this.events = []
                }

                var h = u.prototype;
                h.init = function () {
                    this.initData(function () {
                        this.send("device_info"), f.on("gameLoaded", this.handleGameLoaded), Host.on("FBInstantPreloadComplete", this.handleFBInstantPreloadComplete), Host.on("FBInstantStart", this.handleFBInstantStart);
                        var e = this.customEvent.bind(this);
                        setTimeout((function () {
                            e("session_engage_low")
                        }), 6e4), setTimeout((function () {
                            e("session_engage_high")
                        }), 6e5);
                        var t = window.onerror, i = this.send.bind(this);
                        window.onerror = function (e, n, r, o, a) {
                            if (n instanceof Error && (a = n, n = void 0), a = a || new Error(e), t) try {
                                t(e, n, r, o, a)
                            } catch (s) {
                            }
                            if (!a.xsTracked) try {
                                i("error", {
                                    msg: e,
                                    line: r,
                                    col: o,
                                    label: a.stack || JSON.stringify(a)
                                }), a.xsTracked = !0
                            } catch (s) {
                            }
                            return !1
                        };
                        var n = window.onunhandledrejection;
                        window.onunhandledrejection = function (e) {
                            if (n) try {
                                n(e)
                            } catch (r) {
                            }
                            try {
                                var t = e && e.reason || {};
                                i("error", {
                                    msg: t.message,
                                    line: 0,
                                    col: 0,
                                    label: "unhandled_rejection: " + (t.stack || JSON.stringify(t))
                                })
                            } catch (r) {
                            }
                        }
                    }.bind(this))
                }, h.initUserId = function () {
                    if (Host.userId) this.userId = Host.userId, this.globalUserId = Host.userId; else {
                        var e = l();
                        f.data.addString("__XYYX_user_id", {
                            default: e, remote: !0, merge: function (e, t) {
                                return t
                            }, prefix: "global"
                        }), this.userId = f.data.__XYYX_user_id = "undefined" === f.data.__XYYX_user_id || void 0 === f.data.__XYYX_user_id ? e : f.data.__XYYX_user_id, this.globalUserId = window.__XYYX.globalUserId(), Host.emit("xstrack:InitUserId", {globalUserId: this.globalUserId})
                    }
                }, h.initData = function (e) {
                    var t = u.DATAKEY, i = u.PERSISTENT_DATA, n = this, o = this.dataStore = {
                        app_id: "com.XYYX." + Config.id,
                        app_name: Config.id,
                        app_version: Config.version,
                        app_build: Config.build,
                        development: !1,
                        engine_version: __XYYX.XSEngineVersion || function () {
                            try {
                                var e = JSON.parse(Config.XYYX_repo_statuses)["XYYX-tools"].branch;
                                if (0 === e.indexOf("release/")) return e.slice(8)
                            } catch (t) {
                                return console.warn("[xs.data]", "failed to parse Config.XYYX_repo_statuses"), null
                            }
                        }(),
                        play_session_count: 0,
                        cohort: this.getDate(),
                        days_elapsed: 0,
                        last_day_played: this.getDate(),
                        days_played: 0,
                        channel: this.getChannel(),
                        utm_source: this.getUTMField("source"),
                        utm_medium: this.getUTMField("medium"),
                        utm_campaign: this.getUTMField("campaign"),
                        utm_term: this.getUTMField("term"),
                        utm_content: this.getUTMField("content"),
                        play_session_id: r(),
                        play_session_id_time: Date.now(),
                        screen: "init",
                        facebook_referral_player_id: void 0,
                        ad_id: void 0,
                        ad_segment: void 0,
                        currency_amount: 0,
                        missions_completed: 0,
                        progression: 0,
                        games_played: 0,
                        game_start_time: -1,
                        remote_user_id: void 0,
                        device_width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
                        device_height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,
                        script_version: "1.1.0"
                    };
                    this.initUserId(), this.initDeviceId();
                    var a = {};

                    function s(e) {
                        return {
                            get: function () {
                                return o[e]
                            }, set: function (t) {
                                return o[e] !== t && (o[e] = t, -1 === u.DATA_EXCLUDE_DIRTY.indexOf(e) && (n.dataIsDirty = !0), -1 !== i.indexOf(e) && n.savePersistentData()), o[e]
                            }
                        }
                    }

                    for (var c in o) Object.defineProperty(n.data, c, s(c)), -1 !== i.indexOf(c) && (a[c] = o[c]);
                    f.data.on("dataloaded", this.handleRefreshPersistentData), f.data.addObject(t, {
                        remote: !0,
                        default: a,
                        merge: function (e, t) {
                            return e.cohort && t.cohort && t.cohort >= e.cohort ? t : e
                        }
                    }, (function () {
                        try {
                            n.loadPersistentData()
                        } catch (t) {
                        }
                        e()
                    }))
                }, h.initDeviceId = function () {
                    var e = this.dataStore;
                    if (Host.idfa) e.deviceId = Host.idfa, this.send("idfa"); else {
                        var t = function (t) {
                            t && (e.deviceId = t.result, setTimeout((function () {
                                i.send("idfa")
                            })))
                        }, i = this;
                        f.is.iOS && Host.IOS && Host.IOS.GetIDFA && Host.IOS.GetIDFA(t), f.is.android && Host.GoogleAds && Host.GoogleAds.GetIDFA && Host.GoogleAds.GetIDFA(t)
                    }
                }, h.loadPersistentData = function () {
                    for (var e = u.DATAKEY, t = u.PERSISTENT_DATA, i = this.dataStore, n = f.data[e] || {}, r = 0; r < t.length; r++) {
                        var o = t[r];
                        i[o] !== n[o] && (i[o] = n[o], this.dataIsDirty = !0)
                    }
                    null != f.is.development && i.development != f.is.development && (i.development = f.is.development, this.dataIsDirty = !0), i.days_elapsed = Math.floor((Date.parse(this.getDate()) - Date.parse(i.cohort)) / 864e5)
                }, h.savePersistentData = function () {
                    for (var e = u.DATAKEY, t = u.PERSISTENT_DATA, i = this.dataStore, n = f.data[e], r = !1, o = 0; o < t.length; o++) {
                        var a = t[o];
                        i[a] !== n[a] && (r = !0, n[a] = i[a])
                    }
                    r && f.data.setDirty(e)
                }, h.buildEventContext = function (e, t, i) {
                    var n = this.dataStore, r = {name: e, value: t, _params: i, _globals: n};
                    for (var o in n) r[o] = n[o];
                    for (var o in this) r[o] = this[o];
                    for (var o in i) r[o] = i[o];
                    var a = this.data.game_start_time;
                    return r.game_duration = -1 === a ? 0 : Date.now() - a, r.loading_time = this.timeLoaded - this.timeStart, r
                }, h.parseArgs = function (e, t) {
                    try {
                        return function (e, t) {
                            var i, n, r, o = 0;

                            function a(e) {
                                return e.length
                            }

                            function s(e) {
                                return (i[e] || e)()
                            }

                            function c(e) {
                                return function () {
                                    var t = o, i = e();
                                    return null === i && (o = t), i
                                }
                            }

                            function l(t) {
                                return c((function () {
                                    var i = t.exec(e.substr(o));
                                    return null === i || 0 !== i.index ? null : (o += a(i[0]), i[1])
                                }))
                            }

                            function d(e) {
                                return c((function () {
                                    for (var t = [], i = 0; i < a(e); i++) {
                                        if (null === (n = s(e[i]))) return n;
                                        t.push(n)
                                    }
                                    return t
                                }))
                            }

                            function u(e) {
                                return c((function () {
                                    for (var t = 0; t < a(e); t++) if (null !== (n = s(e[t]))) return n;
                                    return null
                                }))
                            }

                            function h(e, t, i) {
                                return c((function () {
                                    for (var r = []; null !== (n = s(e)) && (r.push(n), null !== (n = s(t)));) !0 === i && r.push(n);
                                    return r
                                }))
                            }

                            i = {
                                ident: l(/([a-zA-Z_][a-zA-Z0-9_]*)/),
                                argSep: l(/(\s*,\s*)/),
                                expSep: l(/([:./])/),
                                objStart: l(/(\s*{\s*)/),
                                objEnd: l(/(\s*}\s*)/),
                                char: l(/([a-zA-Z0-9_ ]+)/),
                                numStr: l(/([0-9]+(\.[0-9]+)?)/),
                                assign: l(/(\s*\=\s*)/),
                                sQStr: l(/\'([^']*)\'/),
                                dQStr: l(/\"([^"]*)\"/),
                                number: (r = "numStr", c((function () {
                                    return null !== (n = s(r)) ? parseFloat(n) : null
                                }))),
                                string: u(["sQStr", "dQStr"]),
                                ref: function (e) {
                                    return c((function () {
                                        return null !== (n = s(e)) ? t[n] : null
                                    }))
                                }("ident"),
                                objProp: u([d(["ident", "assign", "exp"]), "ident"]),
                                objProps: h("objProp", "argSep"),
                                object: function (e) {
                                    return c((function () {
                                        if (null === (n = s(e))) return null;
                                        for (var i, r, o = {}, c = n[1], l = 0; l < a(c); l++) if ("string" == typeof c[l] ? (i = c[l], r = t[i]) : (i = c[l][0], r = c[l][2]), "_merge" === i) for (var d in r) o[d] = r[d]; else void 0 !== r && (o[i] = r);
                                        return o
                                    }))
                                }(d(["objStart", "objProps", "objEnd"])),
                                exp: u(["ref", "number", "string", "object"]),
                                argDef: h("exp", "expSep", !0),
                                arg: function (e, t) {
                                    return c((function () {
                                        return null === (n = s(e)) ? n : a(n) > 1 ? n.join(t || "") : n[0]
                                    }))
                                }("argDef"),
                                args: h("arg", "argSep")
                            }, e = e || "";
                            var f = s("args");
                            if (o < a(e)) throw new Error("Left over tokens at " + o + ', "' + e.substr(o) + '"');
                            return f
                        }(e, t)
                    } catch (i) {
                        throw console.error('Parse error for event mapping: "' + e + '"'), i
                    }
                }, h.getDevelopmentFlag = function () {
                    return this.dataStore.development
                }, h.setDevelopmentFlag = function (e) {
                    this.dataStore.development = e, this.savePersistentData()
                }, h.getDate = function () {
                    var e = new Date;
                    return e.getUTCFullYear() + "-" + n(e.getUTCMonth() + 1) + "-" + n(e.getUTCDate())
                }, h.getDeviceID = function () {
                    return this.dataStore.deviceId
                }, h.getUtmString = function () {
                    if (document && document.location && document.location.search) {
                        var e = document.location.search || "";
                        return [(e = e.replace(/^\?/, "")).replace(/^(?:.*utm_source=([^&]*)|).*$/, "$1") || "none", e.replace(/^(?:.*utm_medium=([^&]*)|).*$/, "$1") || "none", e.replace(/^(?:.*utm_campaign=([^&]*)|).*$/, "$1") || "none"].join("_")
                    }
                }, h.getUTMField = function (e) {
                    var t = document && document.location && document.location.search || "",
                        i = (t = t.replace(/^\?/, "")).match("^(?:.*utm_" + e + "=([^&]*)|).*$");
                    return i.length > 1 ? i[1] : void 0
                }, h.getChannel = window.__XYYX.getChannel, h.handleFBInstantPreloadComplete = function () {
                }, h.handleFBInstantStart = function () {
                    this.facebook_player_id = FBInstant.player.getID(), FBInstant.getEntryPointAsync && FBInstant.getEntryPointAsync().then(this.handleEntryPointAsync.bind(this));
                    var e = (FBInstant.context.getType() || "unspecified").toLowerCase();
                    this.facebook_context_type = e, FBInstant && FBInstant.getTournamentAsync ? FBInstant.getTournamentAsync().then(function () {
                        e = "viralleaderboard", this.facebook_context_type = e, f.track.customEvent("context", void 0, {context_type: e})
                    }.bind(this)).catch((function (t) {
                        f.track.customEvent("context", void 0, {context_type: e})
                    })) : f.track.customEvent("context", void 0, {context_type: e})
                }, h.handleEntryPointAsync = function (e) {
                    var t = FBInstant.getEntryPointData() || {};
                    if (this.facebook_referral_player_id = t.previous_player_id, this.utm_source = t.utm_source || (t.fb_instant_game_ad_id ? "instant" : null), this.utm_medium = t.utm_medium || (t.fb_instant_game_ad_id ? "paid" : null), this.utm_campaign = t.utm_campaign || (t.fb_instant_game_ad_id ? t.fb_instant_game_ad_id : null), t.utm) {
                        var i = t.utm || {};
                        this.utm_string = [i.utm_source || "none", i.utm_medium || "none", i.utm_campaign || "none"].join("_"), this.utm_source = i.utm_source, this.utm_medium = i.utm_medium, this.utm_campaign = i.utm_campaign
                    }
                    this.facebook_campaign = t, this.facebook_entrypoint = e, this.event("entry_point")
                }, h.handleGameLoaded = function () {
                    this.timeLoaded = Date.now(), this.send("game_loaded", void 0)
                }, h.handleRefreshPersistentData = function (e) {
                    -1 !== e.changedFields.indexOf(u.DATAKEY) && this.loadPersistentData()
                }, h.isSessionTimedOut = function () {
                    var e = this.data.play_session_id_time, t = Date.now();
                    return void 0 === e || t - e >= u.PLAYSESSIONID_TIMEOUT
                }, h.extendSession = function () {
                    this.data.play_session_id_time = Date.now()
                }, h.handlePlaySession = function (e) {
                    this.isSessionTimedOut() ? (this.data.play_session_id = r(), this.data.play_session_id_time = Date.now()) : this.extendSession()
                }, h.addHandler = function (e, t) {
                    if ("default" !== e) if ("object" != typeof e) {
                        var i = s(e);
                        if (e = c(e), h.hasOwnProperty(i)) throw new Error('Invalid event handler name "' + i + '", Please choose a different even name.');
                        -1 === this.events.indexOf(e) && this.events.push(e), this[i] = t.bind(this)
                    } else for (var n in Object.keys(e).length, e) this.addHandler(n, e[n])
                }, h.addProvider = function (e, t) {
                    this.providers[e] = t, t.name = t.name || e;
                    var i = _jsonData["track-" + t.name];
                    t.config = i;
                    var n = t.blacklist || "";
                    t.blacklist = [], t.enabled = !1 !== t.enabled, this.updateBlacklist(e, n), this.updateBlacklist(e, i.blacklist), "string" == typeof t.blacklist && (t.blacklist = t.blacklist.split(",")), "function" != typeof t.parseArgs && "function" == typeof t.oninit && t.oninit(i, this.dataStore), t.parseArgs = this.parseArgs, t.event = this.sendProviderEvent.bind(this, t), this.addEventMapping(e, i.events)
                }, h.addEventMapping = function (e, t, i) {
                    var n = this.providers[e];
                    if (void 0 !== n) if ("object" != typeof t) if (-1 === t.indexOf(",")) n.eventMap = n.eventMap || {}, t = c(t), n.eventMap[t] = i, this.hasOwnProperty(s(t)) || this.addHandler(t, this.send.bind(this, t)); else for (var r = t.split(","), o = 0; o < r.length; o++) this.addEventMapping(e, r[o], i); else for (var a in t) this.addEventMapping(e, a, t[a]); else console.warn('XSTrack.addEventMapping > analytics provider "' + e + '" not found.')
                }, h.updateBlacklist = function (e, n) {
                    var r = this.providers[e] || {};
                    if (void 0 !== r) for (var o = r.blacklist, a = (n || "").split(","), s = 0; s < a.length; s++) {
                        var c = a[s].replace(t, ""), l = c.replace(i, ""), d = o.indexOf(l);
                        i.test(c) ? -1 !== d && o.splice(d, 1) : -1 === d && o.push(l)
                    }
                }, h.sendProviderEvent = function (e, t, i, n, r) {
                    if (r = r || {}, ("error" !== t || "ga" !== e.name && "fbi" !== e.name) && !1 !== e.enabled && "function" == typeof e.onevent && -1 === e.blacklist.indexOf(t)) {
                        var o = e.eventMap[t] || e.eventMap.default;
                        void 0 !== o && e.onevent(t, i, n, r, this.parseArgs(o, r))
                    }
                }, h.send = function (e, t, i, n) {
                    "object" == typeof t && (i = t, t = void 0), i = i || {};
                    var r = u.NON_INTERACTION_EVENTS.indexOf(e) >= 0;
                    r || this.handlePlaySession();
                    var o = this.buildEventContext(e, t, i);
                    if (o._userId = this.userId, window.__XYYX && window.__XYYX.consent && (window.__XYYX.consent.hasConsent(window.__XYYX.consent.COOKIES) || (o._userId = this.globalUserId)), o.global_user_id = this.globalUserId, o.non_interaction = r ? 1 : 0, o.facebook_entrypoint = this.facebook_entrypoint, o.facebook_context_type = this.facebook_context_type, o.facebook_player_id = this.facebook_player_id || (f.is.facebookInstant && FBInstant.player && FBInstant.player.getID ? FBInstant.player.getID() : null), o.social_session_id = f.is.facebookInstant && FBInstant.context && FBInstant.context.getID ? FBInstant.context.getID() : null, o.page_session_id = window.__XYYX.analytics.getPageSessionId(), o.play_session_id = window.__XYYX.analytics.getPlaySessionId(), n && ["_userId", "global_user_id", "facebook_player_id", "social_session_id", "page_session_id", "play_session_id"].forEach((function (e) {
                        o[e] && (o[e] = d)
                    })), this.facebook_campaign) for (var a in this.facebook_campaign) 0 == a.indexOf("fb_") ? o[a] = this.facebook_campaign[a] : o["fb_" + a] = this.facebook_campaign[a];
                    var s = window.__XYYX.cohort();
                    if (s.experiment) {
                        var c = s.experiment.weights,
                            l = "uniform" === c ? s.cohortWeight * s.experiment.numberOfCohorts : c.reduce((function (e, t) {
                                return e + t
                            }), 0);
                        o.ab_exp = s.experiment.name, o.ab_cohort_name = s.cohortName, o.ab_cohort_weight = s.cohortWeight / l
                    }
                    for (var h in this.providers) try {
                        this.providers[h].event(e, t, i, o)
                    } catch (A) {
                    }
                }, h.set = function (e, t) {
                    return this.data[e] = t, t
                }, h.inc = function (e, t) {
                    return this.set(e, (this.data[e] || 0) + (void 0 === t ? 1 : t)), this.data[e]
                }, h.updateScreen = function (e) {
                    this.set("screen", e)
                }, h.updateCurrencyAmount = function (e) {
                    this.set("currency_amount", e)
                }, h.updateMissionsCompleted = function (e) {
                    this.set("missions_completed", e)
                }, h.updateProgression = function (e) {
                    this.set("progression", e)
                }, h.event = h.customEvent = function (e, t, i) {
                    this.send(e, t, i)
                }, h.error = h.errorEvent = function (e, t, i) {
                    this.send("error", void 0, {message: e})
                }, u.DATAKEY = "xstrack", u.PERSISTENT_DATA = ["cohort", "development", "play_session_id", "play_session_id_time", "play_session_count", "last_day_played", "days_played", "games_played"], u.NON_INTERACTION_EVENTS = ["keepalive", "session_engage_low", "session_engage_high"], u.PLAYSESSIONID_TIMEOUT = 18e5, u.DATA_EXCLUDE_DIRTY = ["play_session_id_time"], h.page = function (e, t) {
                    throw new Error("DEPRECATED: XS.track.page")
                }, h.timing = function (e, t, i, n) {
                    throw new Error("DEPRECATED: XS.track.timing")
                }, h.exception = function (e, t) {
                    throw new Error("DEPRECATED: XS.track.exception")
                }, h.loaded = function () {
                    throw new Error("DEPRECATED: XS.track.loaded")
                }, h.constructor = u;
                var f = e.XS = e.XS || {};

                function A(e) {
                    var t, i, n = (e = e || {}).names || [], r = Array.prototype.slice.call(e.args || []),
                        o = e.defaults || [], a = e.params;
                    for (void 0 === a && "object" == typeof r[r.length - 1] && (a = r.pop()), a = a || {}, t = 0; t < r.length; t++) void 0 === a[i = n[t] || t] && (a[i] = r[t] || o[t]);
                    for (t = 0; t < o.length; t++) void 0 === a[i = n[t] || t] && null != o[t] && (a[i] = o[t]);
                    return a
                }

                f.XSTrack = u, f.track = new u, f.on("startLoading", (function () {
                    f.track.init()
                }), {freezeGroup: e.ENG_GRP_NAME}), Host.bootstrapper.load((function (e) {
                    return f.data._load(u.DATAKEY, u.DATAKEY, "Object", e)
                })), f.track.addHandler({
                    options_change: function (e, t, i) {
                        void 0 !== (i = A({
                            names: ["option_name", "option_value"],
                            args: arguments
                        })).option_name && (i.option_name = String(i.option_name)), this.send("options_change", i)
                    }, play_session_start: function () {
                        this.send("session_start", this.inc("play_session_count"))
                    }, game_end: function (e, t) {
                        t = A({
                            names: ["level_id"],
                            args: arguments
                        }), this.send("game_end", t), this.set("game_start_time", -1)
                    }, game_play_start: function (e, t) {
                        t = A({
                            names: ["level_id"],
                            args: arguments
                        }), this.set("game_start_time", Date.now()), this.inc("games_played");
                        var i = this.getDate();
                        this.data.last_day_played !== i && (this.set("last_day_played", i), this.inc("days_played")), this.send("game_play_start", this.inc("play_session_count"), t)
                    }, share: function (e, t) {
                        t = A({
                            names: ["button_placement"],
                            defaults: ["none"],
                            args: arguments
                        }), this.send("share", 1, t)
                    }, invite: function (e, t) {
                        t = A({
                            names: ["button_placement"],
                            defaults: ["none"],
                            args: arguments
                        }), this.send("invite", 1, t)
                    }, socialEngage: function (e, t, i) {
                        i = A({
                            names: ["engage_id", "button_placement"],
                            defaults: [void 0, "none"],
                            args: arguments
                        }), this.send("engage", 1, i)
                    }, crossPromotionShow: function (e, t) {
                        t = A({
                            names: ["button_placement"],
                            defaults: ["none"],
                            args: arguments
                        }), this.send("cross_promotion_show", 1, t)
                    }, crossPromotionSuccess: function (e, t) {
                        t = A({names: ["target_game"], args: arguments}), this.send("cross_promotion_success", 1, t)
                    }, deviceInfo: function () {
                        this.send("device_info")
                    }
                }), function () {
                    var e = {
                            interstitial: "mandatory",
                            mandatory: "mandatory",
                            reward: "rewarded",
                            rewarded: "rewarded"
                        }, t = {mandatory: 1, rewarded: 3},
                        i = {response: "ad_response", finish: "ad_result", throttled: "throttle_type"};

                    function n(t, i) {
                        return ["ad", e[t], i].join("_")
                    }

                    f.track.addHandler("ad", (function (r, o, a, s, c) {
                        var l = !1;
                        window.__XYYX && window.__XYYX.consent && (l = !window.__XYYX.consent.hasConsent(window.__XYYX.consent.AD_ANALYTICS));
                        var d = void 0, u = (c = c || {}, i[o]);
                        u ? c[u] = a : (c = s || {}, s = a, a = void 0), "finish" === o && (d = "success" === a ? t[e[r]] : 0), c.ad_point = s || "engine-triggered", this.send(n(r, o), d, c, l)
                    }));
                    var r = {};
                    ["interstitial", "reward"].forEach((function (e) {
                        ["request", "response", "show", "finish", "blocked", "throttled"].forEach((function (t) {
                            r[n(e, t)] = f.track.ad.bind(f.track, e, t)
                        }))
                    })), f.track.addHandler(r)
                }()
            }(window), function (e) {
                XS.modulesToPreload.push((function () {
                    XS.data.addBool("__ads_firstTimeView", {remote: !1, default: !0})
                })), window.adProviders = window.adProviders || {};
                var t, i = "reward", n = {};

                function r(e) {
                    var t = this, n = [], r = e || {};
                    for (var o in r.providers) {
                        console.warn("Provider", o, window.adProviders[o]);
                        var a = window.adProviders[o];
                        if (a) {
                            var s = r.providers[o];
                            a.init(s) && n.push({config: s, provider: a})
                        }
                    }
                    n.sort((function (e, t) {
                        return e.config.priority < t.config.priority ? -1 : e.config.priority > t.config.priority ? 1 : 0
                    })), r.maxfrequency = void 0 === r.maxfrequency ? 3e5 : r.maxfrequency;
                    var c = (new Date).getTime() - (XS.data.__ads_firstTimeView ? r.maxfrequency : r.maxfrequency / 3);
                    XS.data.__ads_firstTimeView = !1;
                    var l = !1, d = !0;

                    function u(e) {
                        if (e == i) return !1;
                        var t = (new Date).getTime() - c;
                        return !!(void 0 !== r.firstAdDelay && Date.now() - initTime < r.firstAdDelay || r.maxfrequency && t < r.maxfrequency && (!d || !r.forceFirstAd)) || void 0
                    }

                    t.setConfig = function (e) {
                        r.maxfrequency = void 0 === e.maxfrequency ? 3e5 : e.maxfrequency
                    }, t.show = function (e, t) {
                        if (u(e)) {
                            var i = (new Date).getTime() - c;
                            return console.warn("Rejected ad due to timer:", r.maxfrequency - i), t(!1)
                        }
                        if (function (e) {
                            return !!(XS.is.oppoGlobal && "interstitial" == e && Date.now() - initTime < 12e4) || !!XS.is.nosoc || void 0
                        }(e)) return console.warn("Ad currently blocked by platform rule."), t(!1);
                        if (l) return console.warn("Ad rejected as we are already showing one"), t(!1);

                        function o(e, i) {
                            l = !1, t(e, i)
                        }

                        l = !0;
                        var a = 0, s = null;
                        !function e() {
                            var t = n[a++];
                            if (!t) return o(!1, s);
                            d = !1, t.provider.show(t.config, (function (i, n) {
                                if (i) return c = (new Date).getTime(), o(i);
                                s = n, t.provider.reject(), e()
                            }))
                        }()
                    }, t.force = function (e) {
                        if (l) return console.warn("Ad rejected as we are already showing one"), e(!1);

                        function t(t) {
                            l = !1, e(t)
                        }

                        l = !0;
                        var i = 0;
                        !function e() {
                            var r = n[i++];
                            if (!r) return t(!1);
                            d = !1, r.provider.force(r.config, (function (i) {
                                if (i) return c = (new Date).getTime(), t(i);
                                r.provider.reject(), e()
                            }))
                        }()
                    }, t.ready = function (e, t) {
                        if (u(e)) return !1;
                        for (var i = 0; i < n.length; i++) {
                            var r = n[i];
                            if (r.provider.ready(r.config)) return !0
                        }
                        return !1
                    }, t.preload = function (e) {
                        var t = 0;
                        !function i() {
                            var r = n[t++];
                            if (!r) return e(!1);
                            r.provider.preload(r.config, (function (t) {
                                if (t) return e(t);
                                i()
                            }))
                        }()
                    }, t.forcePreload = function (e) {
                        var t = 0;
                        !function i() {
                            var r = n[t++];
                            if (!r) return e(!1);
                            r.provider.forcePreload(r.config, (function (t) {
                                if (t) return e(t);
                                i()
                            }))
                        }()
                    }
                }

                var o = {};

                function a(e) {
                    if (e) for (var t in i = function (e) {
                        if (Config.ads.web.interstitial && Config.ads.web.interstitial.providers) for (var t in Config.ads.web.interstitial.providers) -1 !== t.indexOf(e) && delete Config.ads.web.interstitial.providers[t];
                        if (Config.ads.web.reward && Config.ads.web.reward.providers) for (var i in Config.ads.web.reward.providers) -1 !== i.indexOf(e) && delete Config.ads.web.reward.providers[i]
                    }, XS.abtest.setup((function () {
                        XS.abtest.when("ab_fran_adsense", {
                            fran: function () {
                                console.log("[xs.abtest] ab_fran_adsense.fran"), i("adsbygoogle"), i("adsense")
                            }, adsense: function () {
                                console.log("[xs.abtest] ab_fran_adsense.adsense"), i("pbgam")
                            }
                        })
                    })), XS.abtest.init(window.__XYYX.globalUserId()), e) n[t] = new r(e[t]);
                    var i
                }

                XS.ads = {ERROR_SKIPPED: "skipped"}, XS.ads.preload = function (e, i) {
                    if (i = safeCallback(i), !XS.ads.enabled(e)) return i(!1);
                    var r = n[e];
                    if (!r) return window.onerror && window.onerror("XS Ads 2.0: No waterfall defined for type: " + e + " on " + t), i(!1);
                    r.preload(i)
                }, XS.ads.forcePreload = function (e, i) {
                    if (i = safeCallback(i), !XS.ads.enabled(e)) return i(!1);
                    var r = n[e];
                    if (!r) return window.onerror && window.onerror("XS Ads 2.0: No waterfall defined for type: " + e + " on " + t), i(!1);
                    r.forcePreload(i)
                }, XS.ads.show = function (e, i) {
                    var r = !0, o = 0;
                    !function a() {
                        var s = XS.ads.beforeShowHooks[o++];
                        if (!s) return function (r) {
                            if (i = safeCallback(i), !r) return i(!1);
                            if (!XS.ads.enabled(e)) return i(!1);
                            var o = n[e];
                            if (!o) return window.onerror && window.onerror("XS Ads 2.0: No waterfall defined for type: " + e + " on " + t), i(!1);
                            o.show(e, i)
                        }(r);
                        s(e, (function (e) {
                            r = r && e, a()
                        }))
                    }()
                }, XS.ads.force = function (e, i) {
                    if (i = safeCallback(i), !XS.ads.enabled(e)) return i(!1);
                    var r = n[e];
                    if (!r) return window.onerror && window.onerror("XS Ads 2.0: No waterfall defined for type: " + e + " on " + t), i(!1);
                    r.force(i)
                }, XS.ads.ready = function (e) {
                    if (!XS.ads.enabled(e)) return !1;
                    var i = n[e];
                    return i ? i.ready(e) : (window.onerror && window.onerror("XS Ads 2.0: No waterfall defined for type: " + e + " on " + t), !1)
                }, XS.ads.enabled = function (e) {
                    return void 0 !== n[e] && !o[e]
                }, XS.ads.disable = function (e) {
                    o[e] = !0
                }, XS.ads.setConfig = function (e) {
                    if (e) for (var t in e) {
                        var i = n[t];
                        i && i.setConfig(e[t])
                    }
                }, XS.ads.beforeShowHooks = [], XS.ads._init = function (e) {
                    if (console.warn("INIT", e), t = e, Config.ads) {
                        var i = Config.ads[t];
                        i && (i.remote ? fetch(function (e) {
                            var t = Config.id, i = __XYYX.getChannel();
                            return "--https--fran-cdn.XYYX.com/configs/ads/{GAME}/{PLATFORM}/{CHANNEL}/xs.json".replace("{GAME}", t).replace("{PLATFORM}", e).replace("{CHANNEL}", i)
                        }(t)).then((function (e) {
                            if (!e.ok) throw Error(e.statusText);
                            return e.json()
                        })).then((function (e) {
                            console.debug("loaded remote ads config", e), Config.ads[t] = e, a(e)
                        })).catch((function (e) {
                            console.error("unable to load remote ads config", e), a(i)
                        })) : a(i))
                    }
                }
            }(), function (e) {
                var t = "--https--bucket.XYYX.com/config/";

                function i(e, t) {
                    var i, n, o,
                        a = (i = Config && Config.id ? Config.id : e, n = t.cohort, o || (o = r.track.getChannel()), "utm_source=" + o + "&utm_medium=crosspromotion&utm_campaign=" + i + "&utm_content=" + n);
                    if (t.web) for (var s in t.web) {
                        var c = t.web[s];
                        if (c.webUrl) {
                            var l = c.webUrl.split("?");
                            c.webUrl = l[0] !== c.webUrl ? c.webUrl + "&" + a : c.webUrl + "?" + a
                        }
                    }
                }

                function n(e, t) {
                    var n = function (e) {
                        var t = {ab_tests: {}}, i = [], n = [];
                        for (var o in e) {
                            var a = e[o].ab_test_name || "standardCrosspromo";
                            a && e[o].active && (t.ab_tests[a] || (i.push(a), t.ab_tests[a] = {cohorts: []}), t.ab_tests[a].cohorts.push(e[o].cohort))
                        }
                        if (0 !== i.length && "standardCrosspromo" !== i[0]) {
                            for (var s in i) {
                                var c = i[s];
                                r.abtest.addTest(FBInstant.player.getID(), c, t.ab_tests[c].cohorts, !0)
                            }
                            for (var l in i) n.push({test_name: i[l], cohort: r.abtest.cohort(i[l])});
                            return n
                        }
                    }(t), o = [];
                    for (var a in t) {
                        var s = t[a];
                        if (s.active) for (var c in s.cohort || (s.cohort = "standard"), n) s.ab_test_name === n[c].test_name && s.cohort === n[c].cohort && (i(e, s), o.push(s), console.log("Remote cross-promo config for cohort [" + n[c].cohort + "] fetched!"))
                    }
                    return 0 == o.length && (console.log("Remote cross promo config with no ab_test fetched!"), i(e, t[0]), o.push(t[0])), o
                }

                var r = e.XS = e.XS || {};
                r.crosspromo = new function () {
                    return {
                        config: null,
                        localConfig: null,
                        fetchRequested: !1,
                        fetched: !1,
                        fileName: null,
                        init: function (e) {
                            var i, o, a, s = this, c = "_web";
                            if (r.is.facebookInstant) {
                                if (!FBInstant || !FBInstant.player) return void Host.on("FBInstantStart", s.init);
                                c = "_instant"
                            }
                            i = function () {
                                s.fileName = Config.id + c + "_v2", s.localConfig = !!(Config && Config.ads && Config.ads.crosspromo) && n(Config.id + "_local_config", Config.crosspromotion), function (e, i) {
                                    var r = window;
                                    if (!e) return i(new Error("Error on arguments provided."));
                                    if (r.fetchRequested) return console.log("Remote crosspromo config already fetched, so the fetched config will be used instead."), i(null, window.config);
                                    var o = new XMLHttpRequest;
                                    o.onload = function () {
                                        if (200 != o.status) return i(new Error(o.status), o.response);
                                        r.fetched = !0;
                                        var t = n(e, JSON.parse(o.response));
                                        return i(null, t)
                                    }, o.open("GET", t + e + ".json", !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.send(), r.fetchRequested = !0
                                }(s.fileName, (function (e, t) {
                                    if (e) return console.warn(e);
                                    s.config = t, r.emit("CrossPromoLoaded")
                                }))
                            }, o = 0, a = setInterval((function () {
                                Config ? (clearInterval(a), i()) : o > 4 && (clearInterval(a), i(new Error("XS.crosspromo: Could not access Config to get game id. Giving up!"))), o++
                            }), 100)
                        },
                        getConfig: function (e, t) {
                            var i = this.config || [];
                            if (!t && this.localConfig && (i = i.concat(this.localConfig)), i) for (var n in i) if (i[n][e]) return i[n];
                            return null
                        },
                        fetchRemoteConfig: (e = a(regeneratorRuntime.mark((function e(i, n) {
                            var r;
                            return regeneratorRuntime.wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        if (i) {
                                            e.next = 2;
                                            break
                                        }
                                        return e.abrupt("return", n(new Error("Error on arguments provided.")));
                                    case 2:
                                        (r = new XMLHttpRequest).onload = function () {
                                            if (200 != r.status) return n(new Error(r.status), r.response);
                                            var e = JSON.parse(r.response);
                                            return n(null, e)
                                        }, r.open("GET", t + i + ".json?" + Date.now(), !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.send();
                                    case 7:
                                    case"end":
                                        return e.stop()
                                }
                            }), e)
                        }))), function (t, i) {
                            return e.apply(this, arguments)
                        })
                    };
                    var e
                }, r.is.facebookInstant && r.crosspromo.init()
            }(window), function (e) {
                window.XC = {};
                for (var t = document.cookie.split("; "), i = t.length - 1; i >= 0; i--) {
                    var n = t[i].split("=");
                    if ("XYYX_uid" == n[0]) {
                        XC.XYYX_uid = n[1];
                        break
                    }
                }
                window.location && window.location.search && window.location.search.indexOf("tsrv=") > -1 ? XC.server = "http://l.XYYX.com:8008/" : XC.server = "--https--xc.XYYX.com/", XC.c = function () {
                    for (var e = [], t = 0; 64 > t;) e[t] = 0 | 4294967296 * Math.abs(Math.sin(++t));
                    return function (t) {
                        for (var i, n, r, o, a = [], s = (t = unescape(encodeURI(t))).length, c = [i = 1732584193, n = -271733879, ~i, ~n], l = 0; l <= s;) a[l >> 2] |= (t.charCodeAt(l) || 128) << l++ % 4 * 8;
                        for (a[t = 16 * (s + 8 >> 6) + 14] = 8 * s, l = 0; l < t; l += 16) {
                            for (s = c, o = 0; 64 > o;) s = [r = s[3], (i = 0 | s[1]) + ((r = s[0] + [i & (n = s[2]) | ~i & r, r & i | ~r & n, i ^ n ^ r, n ^ (i | ~r)][s = o >> 4] + (e[o] + (0 | a[[o, 5 * o + 1, 3 * o + 5, 7 * o][s] % 16 + l]))) << (s = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * s + o++ % 4]) | r >>> 32 - s), i, n];
                            for (o = 4; o;) c[--o] = c[o] + s[o]
                        }
                        for (t = ""; 32 > o;) t += (c[o >> 3] >> 4 * (1 ^ 7 & o++) & 15).toString(16);
                        return t
                    }
                }(), XC.loggedin = !1, XC.slt = "I think you'll enjoy playing XYYX Games!", XC.user = XC.nouser = {
                    set: function () {
                    }, get: function () {
                    }
                }, XC.send = function (e, t) {
                    var i = t.data || {}, n = t.load || function () {
                    }, r = t.error || function (e) {
                        console.error("XC.error: ", e)
                    }, o = new XMLHttpRequest;
                    o.addEventListener("load", (function (e) {
                        n(e.target.responseText)
                    })), o.addEventListener("error", (function (e) {
                        r(e.target.responseText)
                    }));
                    var a = function (t) {
                        var n = new FormData, r = JSON.stringify(i), a = t || "";
                        n.append("id", a), n.append("c", XC.c(XC.slt + a + r)), n.append("data", r), n.append("game", Config.id), o.open("POST", e), o.send(n)
                    };
                    XC.XYYX_uid ? a(XC.XYYX_uid) : XC.user && XC.user.id ? a(XC.user.id) : Host.Preferences.GetString("XYYX.uid", a)
                }, XC.onFBAuth = function (e) {
                    XC.login(e)
                }, XC.onFBDeauth = function () {
                    XC.logout()
                }, XC.login = function (e) {
                    e.isUserInteraction && XS.loadSpinner.show(), XC.send(XC.server + "login", {
                        load: function (t) {
                            e.isUserInteraction && XS.loadSpinner.hide();
                            var i = JSON.parse(t);
                            XC.user = new XC.User(i), XC.loggedin = !0, XS.data._loadRemote(XC, XC.user.data), Host.Preferences.SetString("XYYX.uid", XC.user.id), XC.XYYX_uid = XC.user.id, document.cookie = "XYYX_uid=" + XC.user.id + ";path=/ ;max-age= 3153600000;expires=Fri, 01 Jan 2100 00:00:00 GMT", XS.emit("login", XC.user)
                        }, data: {id: XC.XYYX_uid, fb_uid: e.userID, fb_auth: e.accessToken}, error: function (t) {
                            e.isUserInteraction && XS.loadSpinner.hide(), Host.Log("Login Error: " + t), XS.emit("login-error", t)
                        }
                    })
                }, XC.setChange = function (e, t) {
                    return !!XC.loggedin && (XC.user.set(e, t), !0)
                }, XC.saveChanges = function (e) {
                    XC.loggedin ? (XC.save(), e && e(!0)) : e && e(!1)
                }, XC.loginOKRU = function (e, t) {
                    XC.send(XC.server + "login", {
                        load: function (e) {
                            var t = JSON.parse(e);
                            XC.user = new XC.User(t), XC.loggedin = !0, console.log("Logged in - returned uid: ", XC.user.id), Host.Preferences.SetString("XYYX.uid", XC.user.id), XC.XYYX_uid = XC.user.id, document.cookie = "XYYX_uid=" + XC.user.id + ";path=/ ;max-age= 3153600000;expires=Fri, 01 Jan 2100 00:00:00 GMT", XS.emit("login", XC.user)
                        }, data: {id: XC.XYYX_uid, fb_uid: e, fb_auth: t}, error: function (e) {
                            Host.Log("Login Error: " + e), XS.emit("login-error", e)
                        }
                    })
                }, XC.save = function () {
                    if (!XC.user || !XC.user.id) throw"Tried to XC.save without being logged in";
                    XC.send(XC.server, {
                        load: function (e) {
                            var t = JSON.parse(e);
                            Host.Log("game saved: " + JSON.stringify(t)), XS.emit("save", XC.user)
                        }, data: XC.user.data
                    })
                }, XC.logout = function () {
                    XC.user = XC.nouser, XC.loggedin = !1, XS.emit("logout")
                }, XC.User = function (e) {
                    var t = this;
                    t.data = e.data || {}, t.id = e.id || null, t.get = function (e) {
                        return t.data[e]
                    }, t.set = function (e, i) {
                        t.data[e] = i
                    }
                }
            }();
            var d = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_facebook.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill="#FFF" d="M46.021 1.368H3.979a2.608 2.608 0 0 0-2.608 2.608v42.041a2.608 2.608 0 0 0 2.608 2.609h22.634V30.325h-6.159v-7.132h6.159v-5.26c0-6.104 3.729-9.428 9.174-9.428 2.607 0 4.85.194 5.502.28v6.379l-3.775.002c-2.963 0-3.535 1.408-3.535 3.473v4.553h7.063l-.92 7.132h-6.143v18.301h12.043a2.608 2.608 0 0 0 2.607-2.609V3.976a2.608 2.608 0 0 0-2.608-2.608z"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), u = "runtimedir/assets/twitter.45db2608.png";
            Host.bootstrapper.mnemonicMap[u] = "i/web/twitter.png", XS.styles.margins.bottom = Math.max(23, XS.styles.margins.bottom), XS.modulesToPreload.push((function e() {
                var t, i, n, r, o, a, s = window;
                XS.is.okru || XS.is.huaweiquickapp || XS.is.samsungGameLauncher || XS.is.discord || (t = window, i = document, n = "script", t.fbq || (r = t.fbq = function () {
                    r.callMethod ? r.callMethod.apply(r, arguments) : r.queue.push(arguments)
                }, t._fbq || (t._fbq = r), r.push = r, r.loaded = !0, r.version = "2.0", r.queue = [], (o = i.createElement(n)).async = !0,
                    // o.src = "--https--connect.facebook.net/en_US/fbevents.js",
                    (a = i.getElementsByTagName(n)[0]).parentNode.insertBefore(o, a)), fbq("init", "1361622040527227"), fbq("track", "PageView"), window.fbq && (f++, fbq("trackCustom", "play", {
                    game: Config.id,
                    version: Config.version,
                    tag: Config.tag || "",
                    total_plays: f
                }))), XS.on("spawndebugmenu", (function () {
                    Sidebar.addAdsDebug(), Sidebar.addQaDebug(), Sidebar.addBuildInfo()
                }), {freezeGroup: ENG_FRZ_GRP});
                var c, l, h, f = 0;
                if (window.__requestOffset = window.__requestOffset || 1, XS.is.samsungGameLauncher && Config.samsungGameLauncher && "undefined" != typeof XYYXInstant) {
                    var A = function () {
                        var e = Host.Web.GetQueryString("source");
                        return e || XS.is.samsungBixby && (e = "daily"), e || ""
                    };
                    XS.track.customEvent("gl_enabled", 1, {source: A()}), XYYXInstant.trackPlay(Config.id, Config.shareTitle.toString(), Config.samsungGameLauncher.icon, "--https--play.XYYX.com/" + (Config.samsungGameLauncher.urlID || Config.id) + "/?method=trackPlay", A()), function (e) {
                        if ("undefined" != typeof XYYXInstant) return console.warn("Missing SDK XYYXInstant");
                        XYYXInstant.canCreateShortcut(Config.id).then((function (t, i) {
                            XS.track.customEvent("gl_shortcut_test_success", 1, {statusCode: t, state: i});
                            var n = "?method=library_icon";
                            0 == t ? (n = "?method=homescreen", XS.track.customEvent("gl_shortcut_create_native", 1, {
                                statusCode: t,
                                state: i
                            })) : XS.track.customEvent("gl_shortcut_create_library", 1, {
                                statusCode: t,
                                state: i
                            }), XYYXInstant.createShortcut(Config.id, Config.shareTitle.toString(), Config.samsungGameLauncher.icon, "--https--play.XYYX.com/" + (Config.samsungGameLauncher.urlID || Config.id) + "/" + n).then((function () {
                                0 == t ? XS.track.customEvent("gl_shortcut_create_native_success", 1, {
                                    statusCode: t,
                                    state: i
                                }) : XS.track.customEvent("gl_shortcut_create_library_success", 1, {
                                    statusCode: t,
                                    state: i
                                }), e && e(!0)
                            })).catch((function (n) {
                                0 == t ? XS.track.customEvent("gl_shortcut_create_native_failure", 1, {
                                    statusCode: t,
                                    state: i,
                                    msg: n
                                }) : XS.track.customEvent("gl_shortcut_create_library_failure", 1, {
                                    statusCode: t,
                                    state: i,
                                    msg: n
                                }), e && e(!1)
                            }))
                        })).catch((function (t) {
                            XS.track.customEvent("gl_shortcut_test_failure", 1, {msg: t}), e && e(!1)
                        }))
                    }()
                }

                function g(e) {
                    XS.isFrozen() || XS.freeze(), Modal.show(e)
                }

                function p(e) {
                    Modal.hide((function () {
                        XS.isFrozen() && XS.unfreeze(), e && e()
                    }))
                }

                function v(e, t) {
                    for (var i in t) "object" != typeof t[i] ? e[i] = t[i] : (e[i] || (e[i] = {}), v(e[i], t[i]));
                    return e
                }

                function w(e, t) {
                    var i = document.createElement(e);
                    return i.draggable = !1, v(i, t || {})
                }

                window.Social = function () {
                    if (!e.done && (e.done = !0, !window.inScreenshotMode)) {
                        XS.setTimeout((function () {
                            var e = document.getElementsByTagName("content")[0] || document.getElementsByTagName("main")[0];
                            e && e.parentNode && e.parentNode.removeChild(e)
                        }), 1e3, [], ENG_FRZ_GRP), XS.is.windowsApp && (XS.is.enableAppStoreLinks = !1), XS.showRewardAd = function (e, t, i) {
                            i = i || !1, XS.ads.show(e, (function (e) {
                                !function (e, t) {
                                    "success" == e ? t("success") : "nofill" == e || "error" == e ? (window.Social.showFailToLoadAdsModal(), XS.setTimeout((function () {
                                        window.Social.hideFailToLoadAdsModal((function () {
                                            t("error")
                                        }))
                                    }), 2e3, [], ENG_FRZ_GRP)) : "skipped" == e ? (window.Social.showAdSkippedModal(), XS.setTimeout((function () {
                                        window.Social.hideAdSkippedModal((function () {
                                            t("skipped")
                                        }))
                                    }), 2e3, [], ENG_FRZ_GRP)) : "blocked" == e ? (window.Social.showAdBlockModal(), XS.setTimeout((function () {
                                        window.Social.hideAdBlockModal((function () {
                                            t("adBlocked")
                                        }))
                                    }), 2e3, [], ENG_FRZ_GRP)) : "throttled" == e ? (console.log("Throttling reward ad, not showing"), window.Social.showFailToLoadAdsModal(), XS.setTimeout((function () {
                                        window.Social.hideFailToLoadAdsModal((function () {
                                            t("throttled")
                                        }))
                                    }), 2e3, [], ENG_FRZ_GRP)) : t("error")
                                }(e, t)
                            }), {showForce: i, format: "reward", maxRetries: 1, timeoutInterval: 5e5})
                        }, XS.showInterstitialAd = function (e) {
                            console.warn("XS.showInterstitialAd is depricated, please use XS.emit('showFullscreenAd')"), XS.emit("showFullscreenAd")
                        };
                        var t = document.getElementById("overlay");
                        if (Config.ads && Config.ads.web && Config.ads.web.interstitial && Config.ads.web.interstitial.providers && XS.is.huawei && (Config.ads.web.interstitial.providers["house-interstitial"] = {
                            priority: 3,
                            config: {
                                huaweidiscoverycard: {
                                    chance: 100,
                                    portrait: {path: "--https--cdn.XYYX.com/huawei/card/huawei_card_portrait.jpg"},
                                    landscape: {path: "--https--cdn.XYYX.com/huawei/card/huawei_card_landscape.jpg"},
                                    data: {huaweiquickapp: "com.huawei.intelligent://service.hag/service_detail?abilityId=889771d62614416aa230f417d93e2307&isNeedSubscribe=1"}
                                }
                            }
                        }), Config && Config.ads && Config.ads.web) {
                            var i = [];
                            if (Config.ads.web.interstitial && Config.ads.web.interstitial.providers) for (var n in Config.ads.web.interstitial.providers) i.push(n);
                            if (Config.ads.web.reward && Config.ads.web.reward.providers) for (var r in Config.ads.web.reward.providers) i.push(r);
                            for (var o = 0; o < i.length; o++) if (i[o] && -1 !== i[o].indexOf("pbgam")) {
                                Config.prebid = {
                                    url: "--https--cdn.XYYX.com/fran/prebid.7.22.0.js",
                                    analytics: {enabled: !0, provider: "XYYX", options: {}},
                                    config: {
                                        cache: {
                                            url: "--https--usc.cache.XYYX.com/cache",
                                            vasttrack: !0,
                                            ignoreBidderCacheKey: !0
                                        },
                                        instreamTracking: {enabled: !0},
                                        consentManagement: {
                                            gdpr: {
                                                cmpApi: "iab",
                                                timeout: 8e3,
                                                allowAuctionWithoutConsent: !0,
                                                defaultGdprScope: !0
                                            }
                                        },
                                        s2sConfig: [{
                                            enabled: !0,
                                            timeout: 2500,
                                            maxBids: 1,
                                            adapter: "prebidServer",
                                            accountId: "9a3c6c23-1111-1111-1111-123456789123",
                                            bidders: ["rubicon", "pubmatic", "openx"],
                                            endpoint: {
                                                p1Consent: "--https--fran.XYYX.com/openrtb2/auction",
                                                noP1Consent: "--https--fran.XYYX.com/openrtb2/auction"
                                            },
                                            syncEndpoint: {
                                                p1Consent: "--https--fran.XYYX.com/cookie_sync",
                                                noP1Consent: "--https--fran.XYYX.com/cookie_sync"
                                            }
                                        }],
                                        schain: {
                                            validation: "strict",
                                            config: {
                                                ver: "1.0",
                                                complete: 1,
                                                nodes: [{asi: "XYYX.com", sid: "001", hp: 1}]
                                            }
                                        },
                                        userSync: {
                                            userIds: [{
                                                name: "pubCommonId",
                                                storage: {type: "cookie", name: "_pubcid", expires: 365}
                                            }]
                                        },
                                        userIdTargeting: {GAM: !0},
                                        bidderTimeout: 2500,
                                        currency: {
                                            adServerCurrency: "EUR",
                                            conversionRateFile: "--https--cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json",
                                            granularityMultiplier: 1
                                        },
                                        enableSendAllBids: !1,
                                        priceGranularity: {
                                            buckets: [{max: 20, increment: .01}, {
                                                max: 40.2,
                                                increment: .1
                                            }, {max: 60.25, increment: .25}, {max: 100, increment: .5}]
                                        }
                                    }
                                };
                                var a = Config.gpt || {}, s = {};
                                for (var c in a) s[c] = a[c];
                                s.url = "--https--cdn.XYYX.com/fran/gpt_2021120601.js", s.pubadsUrl = "--https--cdn.XYYX.com/fran/pubads_2021120601.js", Config.gpt = s;
                                break
                            }
                        }
                        if (Config.ads && Config.ads.web && (XS.is.game8 || XS.is.microsoftPwa) && delete Config.ads.web, Config.ads && XS.is.crazyGames && (console.warn("social.web: overriding ads for crazygames"), Config.ads.web = {
                            interstitial: {
                                maxfrequency: 3e4,
                                providers: {"crazygames-interstitial": {timeout: 500, priority: 1}}
                            }, reward: {providers: {"crazygames-reward": {timeout: 500, priority: 1}}}
                        }), Config.ads && XS.is.harman && (console.warn("social.web: overriding ads for harman"), Config.ads.web = {}), XS.ads && XS.ads._init && XS.ads._init("web"), Config.twitterTexts && (window.shareDialogueCallback = function (e) {
                           // XS.navigate("--https--twitter.com/share?url=" + Host.makeGameShareURL() + "&via=XYYXGames&related=" + encodeURI(Config.twitterRelated) + "&hashtags=" + encodeURI(Config.twitterHashTags) + "&text=" + encodeURI(w()))
                            XS.navigate("/games/index01ue.html")
                        }), XS.is.samsungGameLauncher && (window.shareDialogueCallback = function (e) {
                            XYYXInstant.share(window.__requestOffset++, Config.shareTitle.toString(), "--https--play.XYYX.com/" + (Config.samsungGameLauncher.urlID || Config.id) + "/?method=share")
                        }), XS.is.kik ? window.shareDialogueCallback = function (e) {
                            top.postMessage("share_kik", "*")
                        } : XS.is.kongregate || XS.is.spilGamesWrapper || XS.is.twitch || XS.is.vkru || XS.is.okru || XS.is.rocketChat || (Config.facebookAppId ? function () {
                            var e;

                            function i(e) {
                                var t;
                                t = Config.facebookGamingLogin && Config.facebookGamingLogin.permissions ? Config.facebookGamingLogin.permissions : "", FB.login((function (t) {
                                    t.authResponse ? (n(t.authResponse), e && e()) : r(!1)
                                }), {scope: t})
                            }

                            function n(e) {
                                Config.facebookGamingLogin ? XS.crossplay.onFBAuth(e) : XC.onFBAuth(e), r(!0)
                            }

                            function r(t) {
                                XS.can.showWebLoginWithFacebook() && (XS.is.facebookApp ? t || i() : t ? (window.facebookAuthed = !0, e = Sidebar.addMenuItem(new Sprite(d()), Host.Localize.Translate("Logout"), (function () {
                                    Sidebar.removeMenuItem(e);
                                    var t = !1;
                                    FB.logout((function (e) {
                                        t || (t = !0, XC.onFBDeauth(), r(!1))
                                    }))
                                }))) : (window.facebookAuthed = !1, e = Sidebar.addMenuItem(new Sprite(d()), Host.Localize.Translate("Login with Facebook"), (function () {
                                    requestFacebookLogin()
                                }))))
                            }

                            window.facebookAuthed = !1, window.requestFacebookLogin = function (t) {
                                Sidebar.removeMenuItem(e), i(t)
                            };
                            var o = !1;
                            XS.is.facebookAppWeb && !Config.facebookAdsDisabled && function (e) {
                                function t() {
                                    return e + "?rnd=" + (new Date).getTime()
                                }

                                var i = document.createElement("div");
                                i.style.position = "absolute", i.style.height = "90px", i.style.bottom = "-100px", i.style.left = "50%";
                                var n = document.createElement("iframe");
                                n.src = t(), n.frameborder = "0", n.scrolling = "no", n.allowTransparency = "true", n.id = "adframe", n.style.cssText = "border:none;overflow:hidden;height:90px;width:728px;margin-left:-364px", i.appendChild(n), document.body.appendChild(i), XS.showGameOverAd = function (e) {
                                    height / XS.devicePixelRatio > (e || 450) && (o = !0, i.style.bottom = "0px", XS.emit("toggleoverlayad", {visible: !0}))
                                }, XS.hideGameOverAd = function () {
                                    i.style.bottom = "-500px", o && (o = !1, n.src = t()), XS.emit("toggleoverlayad", {visible: !1})
                                }
                            }("//" + Config.domain + "/ad/facebookLSM/");
                            var a = XS.setTimeout((function e() {
                                XS.clearTimeout(a), t.className = "", XS.setTimeout((function () {
                                    t.className = "w"
                                }), 500, [], ENG_FRZ_GRP), a = XS.setTimeout(e, 18e4, [], ENG_FRZ_GRP)
                            }), 18e4, [], ENG_FRZ_GRP), s = !1, c = !1, l = !1, u = !1;

                            function h() {
                                var e = !s && !l && !u;
                                Config.hideSocialWhilePlaying && !c && (e = !1), t.style.visibility = e ? "visible" : "hidden", t.style.bottom = e ? "3px" : "-200px"
                            }

                            XS.on("toggleoverlayad", (function (e) {
                                s = e.visible, h()
                            }), {freezeGroup: ENG_FRZ_GRP}), XS.on("togglemodal", (function (e) {
                                c = e.visible, h()
                            }), {freezeGroup: ENG_FRZ_GRP}), XS.on("togglerewardmodal", (function (e) {
                                u = e.visible, h()
                            }), {freezeGroup: ENG_FRZ_GRP}), XS.on("togglesidebar", (function (e) {
                                l = e.visible, h()
                            }), {freezeGroup: ENG_FRZ_GRP}), h(), XS.is.huaweiquickapp || XS.is.lgtv || XS.is.oppoGlobal || (window.fbAsyncInit = function () {
                                FB.init({
                                    appId: Config.facebookGamingLoginId ? Config.facebookGamingLoginId : Config.facebookAppId,
                                    status: !0,
                                    xfbml: !0,
                                    version: "v10.0",
                                    cookie: !0
                                }), FB.AppEvents.logPageView(), XS.can.showSidebarSaveProgressHeader() && Sidebar.addMenuHeader(Host.Localize.Translate("Save your progress!")), FB.getLoginStatus((function (e) {
                                    "connected" === e.status ? n(e.authResponse) : r(!1), XS.emit("userloaded")
                                }))
                            }, function (e, t, i) {
                                var n, r = e.getElementsByTagName(t)[0];
                                e.getElementById(i) || ((n = e.createElement(t)).id = i,
                                    // n.src = "//connect.facebook.net/en_US/sdk.js",
                                    r.parentNode.insertBefore(n, r))
                            }(document, "script", "facebook-jssdk"))
                        }() : console.warn("Config.facebookAppId not defined"), XS.can.createWebSocialFrame() && function () {
                            var e = Host.Localize.GetLanguage();

                            function i(e) {
                                var i = document.createElement("img");
                                i.src = window.__resolvePath(u), i.style.verticalAlign = "top", i.style.marginRight = "5px", i.style.cursor = "pointer", e ? (i.style.width = "82px", i.style.height = "30px") : (i.style.width = "58px", i.style.height = "20px", i.style.paddingLeft = "5px"), t.appendChild(i), i.onmousedown = i.ontouchstart = window.shareDialogueCallback
                            }

                            if (null != e.match(/zh/i) || e.match(/\-CN/i), XS.is.twitter) Config.twitterMobileHTML && Config.twitterTexts && Config.twitterNewMode && (t.innerHTML = "", i(!0), t.style.marginLeft = "-38px"); else if (t.innerHTML = "", Config.twitterHTML && Config.twitterTexts && !XS.is.microsoftPwa && i(), Config.facebookPageUrl && Config.facebookAppId && !XS.is.microsoftPwa) {
                                var n = '<span class="fb-like" data-href="' + Config.facebookPageUrl + '" data-layout="button_count" data-action="like" data-size="small" data-share="false"></span>',
                                    r = document.createElement("span");
                                r.innerHTML = v(n), t.appendChild(r)
                            }
                        }()), XS.is.samsungBixby && window.fbq && fbq("trackCustom", "samsung", {
                            game: Config.id,
                            version: Config.version,
                            tag: Config.tag || ""
                        }), XS.is.pwa && Host.Preferences.GetString("rcs.id", (function (e) {
                            e && (XS.is.rcs = e)
                        })), window.rcs = {
                            url: XS.is.rcsKr ? "--https--XYYX-rcs-kr.appspot.com" : "--https--XYYX-rcs-235815.appspot.com",
                            blockProgression: !1,
                            phone: null,
                            init: function (e, t) {
                                this.phone = XS.is.rcs, this.phone && (this.phone = this.phone.replace(/\s/g, ""), Host.Preferences.SetString("rcs.id", this.phone), this.createPlayer(e, (function () {
                                    if (console.log("created player"), t) return t()
                                }))), console.log("initiated rcs")
                            },
                            getTasks: function (e, t) {
                                var i = new XMLHttpRequest;
                                i.onload = function () {
                                    var e = JSON.parse(i.response);
                                    return t(e)
                                }, i.open("GET", this.url + "/" + e + "/tasks/" + this.phone, !0), i.send()
                            },
                            createPlayer: function (e, t) {
                                var i = new XMLHttpRequest;
                                i.onload = function () {
                                    return t()
                                }, i.open("POST", this.url + "/" + e + "/players/" + this.phone, !0), i.setRequestHeader("Content-Type", "application/json"), i.send()
                            },
                            updateStory: function (e, t) {
                                var i = new XMLHttpRequest, n = this.url + "/" + e + "/story/" + this.phone;
                                t && t.task && (n += "?task=true"), i.open("PATCH", n, !0), i.send()
                            },
                            postGameSession: function (e, t) {
                                var i = new XMLHttpRequest;
                                i.onload = function () {
                                    console.log(i.response)
                                }, console.log("posting data", t);
                                var n = this.url + "/" + e + "/gamesession/" + this.phone;
                                i.open("POST", n, !0), i.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), i.send(JSON.stringify({
                                    rcs: !0,
                                    data: t
                                }))
                            }
                        }, XS.is.rcs && XS.emit("RCS"), XS.is.vkru) {
                            y("access_token", A = window.frames.document.URL), y("auth_key", A);
                            var l = y("user_id", A), h = y("viewer_id", A), f = 6715022;
                            console.warn("loading vk..."), XS.loadScript("--https--vk.com/js/api/xd_connection.js?2"), XS.loadScript("--https--ad.mail.ru/static/admanhtml/rbadman-html5.min.js"), XS.loadScript("--https--vk.com/js/api/adman_init.js"), XS.loadScript("--https--js.appscentrum.com/scr/preroll.js"), XS.waitForSDK("VK", (function () {
                                VK.init((function () {
                                    VK.storage = {
                                        user: h, set: function (e, t) {
                                            VK.api("storage.set", {
                                                user_id: this.user,
                                                key: e,
                                                value: t
                                            }, (function (e) {
                                            }))
                                        }, get: function (e, t) {
                                            VK.api("storage.get", {user_id: this.user, keys: e}, (function (e) {
                                                return t(e)
                                            }))
                                        }
                                    }
                                })), console.log(admanInit({user_id: l, app_id: f, type: "preloader"}, (function (e) {
                                    e.onStarted((function () {
                                        console.log("Adman: Started"), admanStat(f, l)
                                    })), e.onCompleted((function () {
                                        console.log("Adman: Completed")
                                    })), e.onSkipped((function () {
                                        console.log("Adman: Skipped")
                                    })), e.onClicked((function () {
                                        console.log("Adman: Clicked")
                                    })), e.start("preroll")
                                }), (function (e) {
                                    console.log("Adman: No ads")
                                })))
                            }))
                        }
                        if (window.API_callback = function (e, t, i) {
                            console.log(e, t, i)
                        }, XS.is.okru) {
                            var A = window.frames.document.URL;
                            console.warn("Loading OK.ru..."), XS.loadScript("--https--api.ok.ru/js/fapi5.js"), XS.waitForSDK("FAPI", (function () {
                                var e = FAPI.Util.getRequestParameters(), t = e.logged_user_id, i = e.application_key;
                                FAPI.init(e.api_server, e.apiconnection, (function (e) {
                                    console.warn("Initiated OK.ru!"), FAPI.invokeUIMethod("prepareMidroll"), XC.loginOKRU(t.toString(), i.toString())
                                }))
                            }))
                        }
                        if (Config.enablePWA || XS.is.microsoftPwa) {
                            "serviceWorker" in navigator && (navigator.serviceWorker.register("./sw.js").then((function (e) {
                                console.log("ServiceWorker registration successful with scope: ", e.scope)
                            }), (function (e) {
                                console.log("ServiceWorker registration failed: ", e)
                            })), XS.is.pwa && XS.track.event("PWA Activated", "Activated"));
                            var g = 0, p = !1;
                            window.addEventListener("beforeinstallprompt", (function (e) {
                                XS.track.event("PWA Install Prompt", "Install Prompt"), g = setTimeout(m, 5e3), e.userChoice && e.userChoice.then((function (e) {
                                    "accepted" === (e = e.outcome) && XS.track.event("PWA Installed", "Successfully Installed"), "dismissed" === e && XS.track.event("PWA Dismissed", "Install Prompt Dismissed"), m()
                                })).catch((function (e) {
                                    console.log(e)
                                }))
                            })), window.addEventListener("appinstalled", (function (e) {
                                XS.track.event("PWA Installed", "Successfully Installed"), m()
                            }))
                        }
                        Config.oneSignalWebId && !XS.is.iframed && (XS.is.android && !XS.is.pwa && Config.enablePWA || m())
                    }

                    function v(e) {
                        var t = e += "";
                        for (var i in Config) t = t.split("{{" + i + "}}").join(Config[i]);
                        return t
                    }

                    function w() {
                        return Host.Localize.Translate(Config.twitterTexts[Config.twitterTexts.length * Math.random() >> 0], {game_name: Config.shareTitle})
                    }

                    function y(e, t) {
                        e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                        var i = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(t);
                        return null === i ? "" : decodeURIComponent(i[1].replace(/\+/g, " "))
                    }

                    function m() {
                        clearTimeout(g), p || window.location.href.indexOf(Config.domain) > -1 && (window.OneSignal = window.OneSignal || [], OneSignal.push(["init", {
                            appId: Config.oneSignalWebId,
                            autoRegister: !0,
                            notifyButton: {enable: !1},
                            welcomeNotification: {disable: !0}
                        }]), XS.loadScript("--https--cdn.onesignal.com/sdks/OneSignalSDK.js"), p = !0)
                    }
                }, window.Social.ShowTryAgainModal = function (e, t) {
                    if (Config.testLocalCanvasAds || XS.is.facebookAppWeb || XS.is.chromeWrapper) {
                        if (Config.testLocalCanvasAds && console.error("Config.testLocalCanvasAds is true. Should only be used for testing!"), !Config.useXSAdsForFbCanvasRewards) return !1;
                        e = "reward_canvas"
                    }
                    XS.showTryAgainModal ? XS.showTryAgainModal(e, t) : (I.showTryAgainModal(e, t), Host.Log("XS.showTryAgainModal plugin is not configured"), console.error("XS.showTryAgainModal plugin is not configured")), console.error("window.Social.ShowTryAgainModal is deprecated should use XS.showTryAgainModal instead")
                }, window.Social.showFailToLoadAdsModal = function () {
                    s.showFailToLoadAdsModal()
                }, s.showFailToLoadAdsModal = function () {
                    var e;
                    g(c || (c = new (Modal.ModalOverlayContent.expand((function () {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("No Ads Ready", {}, "Headline for no reward advertisement available")), this.addLead(Host.Localize.Translate("Please try again later", {}, "Description for no reward advertisement available")), this.blurClose = e || !1, this.innerHeight = 230
                    })))))
                }, window.Social.hideFailToLoadAdsModal = function (e) {
                    p(e)
                }, window.Social.showAdSkippedModal = function () {
                    s.showAdSkippedModal()
                }, s.showAdSkippedModal = function () {
                    var e;
                    g(l || (l = new (Modal.ModalOverlayContent.expand((function () {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("No reward received", {}, "Headline for advertisement skipped by user")), this.addLead(Host.Localize.Translate("You did not receive a reward\nbecause the ad was skipped", {}, "Description for advertisement skipped by user")), this.blurClose = e || !1, this.innerHeight = 300
                    })))))
                }, window.Social.hideAdSkippedModal = function (e) {
                    p(e)
                }, window.Social.showAdBlockModal = function () {
                    s.showAdBlockModal()
                }, s.showAdBlockModal = function () {
                    var e;
                    g(h || (h = new (Modal.ModalOverlayContent.expand((function () {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("Ad blocker detected", {}, "Headline for advertisement adblocker message")), this.addLead(Host.Localize.Translate("You did not receive a reward because\nyou are using an adblocker.\nPlease disable it to receive rewards", {}, "Description for advertisement adblocker detected")), this.blurClose = e || !1, this.innerHeight = 350
                    })))))
                }, window.Social.hideAdBlockModal = function (e) {
                    p(e)
                };
                var y = null;

                function m(e, t, i) {
                    !function (e, t, i) {
                        e.addEventListener("mousedown", (function (e) {
                            (I.visible || i) && (C || t(e))
                        })), e.addEventListener("touchstart", (function (e) {
                            C = !0, t(e.touches[0])
                        }))
                    }(e, (function (t) {
                        t.pageX, t.pageY, y = e
                    }), i), function (e, t, i) {
                        e.addEventListener("mouseup", (function (e) {
                            (I.visible || i) && (C || t())
                        })), e.addEventListener("touchend", (function (e) {
                            C = !0, t()
                        }))
                    }(e, (function () {
                        y == e && t()
                    }), i)
                }

                var C = !1, I = new function () {
                    var e = this, t = {elements: {}};
                    t.elements.blurOverlayNode = {
                        style: {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            background: " rgba(0, 0, 0, .75)",
                            fontFamily: "Segoe UI, Helvetica Neue, Helvetica, Arial, sans-serif",
                            cursor: "default",
                            overflow: "hidden",
                            MozUserSelect: "none",
                            webkitUserSelect: "none",
                            userSelect: "none",
                            webkitTouchCallout: "none",
                            zIndex: 20
                        }
                    }, t.elements.loaderOverlay = {
                        style: {
                            border: "10px solid rgba(255,255,255,.3)",
                            borderTop: "10px solid #ffffff",
                            borderRight: "10px solid #ffffff",
                            borderRadius: "50%",
                            width: "100px",
                            height: "100px",
                            position: "absolute",
                            zIndex: 20,
                            left: "50%",
                            top: "50%",
                            marginLeft: "-60px",
                            marginTop: "-60px"
                        }
                    }, t.retryOverlay = {}, t.retryOverlay.overlay = {
                        style: {
                            width: "500px",
                            left: "50%",
                            position: "absolute",
                            marginLeft: "-250px",
                            bottom: "0px",
                            zIndex: "20",
                            textAlign: "center",
                            MozUserSelect: "none",
                            webkitUserSelect: "none",
                            userSelect: "none",
                            webkitTouchCallout: "none",
                            fontFamily: "Segoe UI, Helvetica Neue, Helvetica, Arial, sans-serif",
                            transformOrigin: "center bottom"
                        }
                    }, t.retryOverlay.headline = {
                        style: {
                            color: "#ffffff",
                            fontSize: "70px",
                            marginBottom: "0px",
                            margin: "0px",
                            padding: "0px",
                            fontWeight: "500"
                        }, innerHTML: Host.Localize.Translate("Continue?", {}, "Headline in retry overlay").toString()
                    }, t.retryOverlay.subtext = {
                        style: {
                            color: "#ffffff",
                            fontSize: "30px",
                            marginBottom: "0px",
                            margin: "0px",
                            padding: "0px",
                            fontWeight: "500"
                        },
                        innerHTML: Host.Localize.Translate("Undo throw and keep playing", {}, "Headline subtext in retry overlay").toString()
                    }, t.retryOverlay.counter = {
                        style: {
                            color: "#ffffff",
                            fontSize: "150px",
                            margin: "0px",
                            padding: "0px",
                            marginTop: "-25px",
                            marginBottom: "0px",
                            fontWeight: "300"
                        }, innerHTML: "9"
                    }, t.retryOverlay.ad = {
                        style: {
                            width: "240px",
                            height: "80px",
                            backgroundImage: "url(" + window.__resolvePath("i/web/ad.png") + ")",
                            display: "inline-block",
                            backgroundSize: "100% 100%",
                            paddingTop: "160px",
                            fontSize: "30px",
                            margin: "4px",
                            cursor: "pointer"
                        },
                        innerHTML: Host.Localize.Translate("Watch Ad", {}, "Watch Ad button in retry overlay").toString()
                    }, t.retryOverlay.noThanks = {
                        style: {
                            display: "block",
                            fontSize: "50px",
                            fontWeight: "200",
                            color: "#ffffff",
                            marginTop: "40px",
                            marginBottom: "60px",
                            cursor: "pointer"
                        },
                        innerHTML: Host.Localize.Translate("Tap to continue", {}, "Tap to continue button text in retry overlay").toString()
                    };
                    var i = void 0;

                    function n() {
                        var e = this, i = w("div", t.retryOverlay.overlay), n = w("h1", t.retryOverlay.headline),
                            r = w("h2", t.retryOverlay.subtext), o = w("h1", t.retryOverlay.counter),
                            a = w("a", t.retryOverlay.ad), s = w("a", t.retryOverlay.noThanks);
                        e.update = function (e) {
                            e.headline && (n.innerHTML = e.headline.toString()), e.subtext && (r.innerHTML = e.subtext.toString())
                        }, i.appendChild(n), i.appendChild(r), i.appendChild(o), i.appendChild(a), i.appendChild(s);
                        var c = !1, l = 0, d = !1, u = function () {
                        }, h = void 0;

                        function f() {
                            i.parentNode && i.parentNode.removeChild(i)
                        }

                        m(a, (function () {
                            d = !0, f(), e.hide(), XS.showRewardAd(h, (function (e) {
                                console.log("ad result: " + e), u("success" == e)
                            }))
                        }), !0), m(s, (function () {
                            e.hide(), u(!1)
                        }), !0), e.hide = function () {
                            c = !1, f(), I.hideLoadOverlay()
                        }, e.show = function (t, n, r) {
                            u = r;
                            var s = !!n;
                            h = n, I.showLoadOverlay(), function () {
                                if (!s) return u(!1);
                                a.style.display = s ? "inline-block" : "none", o.innerHTML = l = t || 9, d = !1, c = !0, document.body.appendChild(i), e.handleResize()
                            }()
                        }, e.handleResize = function () {
                            if (c) {
                                var e = Math.min(width / (i.offsetWidth || 500), Math.min(height / (i.offsetHeight || 577), Math.min(width / 500, 1)));
                                i.style.transform = 1 == e ? "" : "scale(" + e + "," + e + ")"
                            }
                        }, XS.on("resize", e.handleResize), setInterval((function () {
                            if (c && !d) {
                                if (--l < 0 && (l = 0), 0 == l) return e.hide(), void u(!1);
                                o.innerHTML = l
                            }
                        }), 1e3)
                    }

                    e.showTryAgainModal = function (e, t) {
                        (i = i || new n).show(5, e, t)
                    };
                    var r = w("div", t.elements.blurOverlayNode), o = w("div", t.elements.loaderOverlay), a = 0;
                    e.showLoadSpinner = function () {
                        document.body.appendChild(o);
                        var e = 0;
                        o.style.transform = "rotate(" + e + "deg)", clearInterval(a), a = setInterval((function () {
                            e += 4, o.style.transform = "rotate(" + e + "deg)"
                        }), 16)
                    }, e.hideLoadSpinner = function () {
                        clearInterval(a), o.parentNode && o.parentNode.removeChild(o)
                    };
                    var s = 0;
                    e.showLoadOverlay = function () {
                        s++, r.parentNode || document.body.appendChild(r)
                    }, e.hideLoadOverlay = function () {
                        if (--s < 0 && (s = 0), 0 == s) {
                            if (!r.parentNode) return;
                            r.parentNode.removeChild(r)
                        }
                    }, window.Social.hideLoadSpinner = function () {
                        e.hideLoadSpinner()
                    }, window.Social.showLoadOverlay = function (t) {
                        1 == t && (XS.isFrozen() || XS.freeze()), e.showLoadOverlay(), e.showLoadSpinner()
                    }, window.Social.hideLoadOverlay = function (t) {
                        1 == t && XS.isFrozen() && XS.unfreeze(), e.hideLoadOverlay(), e.hideLoadSpinner()
                    }
                };
                if (XS.is.microsoftPwa && Host.Localize.GetLanguage()) {
                    var E = Host.Localize.GetLanguage();
                    (E = {
                        "zh-HK": "zh-Hant",
                        "zh-TW": "zh-Hant",
                        "zh-CN": "zh-Hans",
                        zh: "zh-Hans"
                    }[E] || E).startsWith("en") || Host.Localize.Load(E)
                }
            })), XS.modulesToPreload.push((function () {
                function e() {
                }

                e.prototype.onScore = function (e) {
                    XS.emit("std:score", {score: e})
                }, e.prototype.onFinalScore = function (e, t) {
                    XS.emit("std:final_score", {score: e, params: t})
                }, e.prototype.onEndGame = function (e, t) {
                    XS.emit("std:end_game", t), e && XS.once("std:new_game", e, {freezeGroup: ENG_FRZ_GRP})
                }, XS.social = XS.social || new function () {
                }, XS.events = XS.events || new e, XS.score = XS.score || {}, XS.score.submitScore = XS.score.submitScore || e.prototype.onScore, XS.score.submitFinalScore = XS.score.submitFinalScore || e.prototype.onFinalScore, XS.state = XS.state || {}, XS.state.endGame = XS.state.endGame || e.prototype.onEndGame
            })), XS.modulesToPreload.push((function () {
                if (XS.is.huaweiquickapp && window.system && window.system.postMessage) {
                    var e, t, i, n, r = (e = 0, t = {}, {
                        register: function (i) {
                            return t[++e] = i, e
                        }, clear: function (e) {
                            t[e] && delete t[e]
                        }, get: function (e) {
                            return t[e]
                        }
                    });
                    window.Social = (i = window.Social, n = function () {
                        var e, t;
                        Social.huaweiDone || (Social.huaweiDone = !0, e = o, t = window.system.onmessage, window.system.onmessage = function (i) {
                            var n;
                            try {
                                n = JSON.parse(i)
                            } catch (r) {
                                console.error(r)
                            }
                            "object" == typeof n && n.event && e(n), t && t(i)
                        }, window.addEventListener("load", (function () {
                            var e, t;
                            e = function (e, t) {
                                e && console.error(e);
                                var i = !e && t ? t.userId : null;
                                XS.abtest.init(i || window.__XYYX.globalUserId())
                            }, t = {event: "xsinit", id: r.register(e)}, window.system.postMessage(JSON.stringify(t))
                        })))
                    }, function () {
                        i && i(), n && n()
                    })
                }

                function o(e) {
                    var t = e.id, i = t && r.get(t), n = !0;
                    switch (e.event) {
                        case"xsinit-response":
                            i(null, e.data);
                            break;
                        case"xsinit-error":
                            i(e.err);
                            break;
                        default:
                            n = !1
                    }
                    i && n && r.clear(t)
                }
            })), XS.modulesToPreload.push((function () {
                if (XS.is.huaweiquickapp && !(window.system && window.system.postMessage ? Config.iap ? !Config.iap.huawei && (console.error("Missing configuration Config.iap.huawei"), 1) : (console.error("Missing configuration Config.iap"), 1) : (console.error("Missing window.system.postMessage"), 1))) {
                    var e = Config.iap.productCatalog;
                    XS.iap.addProvider(new function () {
                        var t = this;
                        t.priority = 0, t.name = "Huawei";
                        var i = {}, n = !1;
                        t.isReady = function () {
                            return n
                        }, t.init = function () {
                            var r, o;
                            r = s, o = window.system.onmessage, window.system.onmessage = function (e) {
                                var t;
                                try {
                                    t = JSON.parse(e)
                                } catch (i) {
                                    console.error(i)
                                }
                                "object" == typeof t && t.event && r(t), o && o(e)
                            };
                            var a = Config.iap.huawei;
                            c("iap-is-ready", {
                                applicationId: a.applicationId,
                                publicKey: a.publicKey,
                                signerUrl: a.signerUrl
                            }, (function (r, o) {
                                if (!r && o) {
                                    var s = [];
                                    for (var l in a.catalog) s.push(a.catalog[l].productNo);
                                    i = {}, c("iap-get-products-info", {keys: s}, (function (r, o) {
                                        if (!r) {
                                            for (var a = 0; a < o.length; a++) {
                                                var s = o[a], c = {productNo: s.productId, label: s.price};
                                                if (s.originalLocalPrice) {
                                                    var l = s.originalLocalPrice.match(/\d/).index;
                                                    c.currencyCode = s.originalLocalPrice.substr(0, l).trim(), c.priceValue = s.originalLocalPrice.substr(l).trim()
                                                }
                                                e[s.productId] && (c.trackingName = e[s.productId]), i[s.productId] = c
                                            }
                                            t.restorePurchases(), n = !0, XS.emit("iapReady")
                                        }
                                    }))
                                }
                            }))
                        }, t.getCatalog = function () {
                            return i
                        }, t.getProductById = function (e) {
                            return i[e]
                        }, t.requestPayment = function (e, t) {
                            c("iap-create-purchase-intent", {productId: e}, t)
                        }, t.consumePurchase = function (e, t) {
                            c("iap-consume-purchase", {purchase: e}, t)
                        }, t.restorePurchases = function () {
                            c("iap-get-incomplete-purchases", null, (function (e, t) {
                                if (!e) for (var i = 0; i < t.length; i++) {
                                    var n = t[i];
                                    XS.emit("iapPurchaseRestored", n)
                                }
                            }))
                        };
                        var r, o, a = (r = 0, o = {}, {
                            register: function (e) {
                                return o[++r] = e, r
                            }, clear: function (e) {
                                o[e] && delete o[e]
                            }, get: function (e) {
                                return o[e]
                            }
                        });

                        function s(e) {
                            var t = e.id, i = t && a.get(t), n = !0;
                            switch (e.event) {
                                case"iap-response":
                                    i(null, e.data);
                                    break;
                                case"iap-error":
                                    i(e.err);
                                    break;
                                default:
                                    n = !1
                            }
                            i && n && a.clear(t)
                        }

                        function c(e, t, i) {
                            var n = JSON.parse(JSON.stringify(t || {}));
                            if (n.event = e, i) {
                                var r = a.register(i);
                                n.id = r
                            }
                            window.system.postMessage(JSON.stringify(n))
                        }
                    })
                }
            }));
            var h = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/sliderbg.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="774" height="78"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="387.5" y1="78" x2="387.5" y2="1"><stop offset="0" stop-color="#fff"/><stop offset=".048" stop-color="#e0e0e0"/><stop offset=".474" stop-color="#e0e0e0"/><stop offset=".952" stop-color="#e0e0e0"/><stop offset="1" stop-color="#a8a8a8"/></linearGradient><path fill="url(#a)" stroke="#494949" stroke-width="2" stroke-miterlimit="10" d="M774 6.583C774 3.553 772.292 1 769.538 1H7.655C4.9 1 1 3.553 1 6.583v65.352C1 74.967 4.9 78 7.655 78h761.883c2.754 0 4.462-3.033 4.462-6.064V6.583z"/><path fill="none" stroke="#ACACAC" stroke-width="2" stroke-miterlimit="10" d="M257 2v75"/><path fill="none" stroke="#F9F9F9" stroke-width="2" stroke-miterlimit="10" d="M259 2v75"/><path fill="none" stroke="#ACACAC" stroke-width="2" stroke-miterlimit="10" d="M515 2v75"/><path fill="none" stroke="#F9F9F9" stroke-width="2" stroke-miterlimit="10" d="M517 2v75"/></svg>',
                    width: 774,
                    height: 78,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), f = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/sliderslider.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="284" height="96"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="140" y1="7" x2="140" y2="87.001"><stop offset="0" stop-color="#6cf076"/><stop offset="1" stop-color="#48dd53"/></linearGradient><linearGradient id="b" gradientUnits="userSpaceOnUse" x1="140" y1="6" x2="140" y2="88.001"><stop offset="0" stop-color="#369d3d"/><stop offset="1" stop-color="#36893d"/></linearGradient><path fill="url(#a)" stroke="url(#b)" stroke-width="2" stroke-miterlimit="10" d="M274 81.841c0 2.819-2.258 5.159-5.044 5.159H11.044C8.258 87 6 84.66 6 81.841V12.104C6 9.285 8.258 7 11.044 7h257.912C271.742 7 274 9.285 274 12.104v69.737z"/></svg>',
                    width: 284,
                    height: 96,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0);
            Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("modalSliderComplexity", "modal.slider.complexity.v1", "Int", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), XS.modulesToPreload.push((function () {
                if (!window.Modal) {
                    XS.data.addIntWithLocalKey("modalSliderComplexity", "modal.slider.complexity.v1", {remote: !1}), 0 == XS.data.modalSliderComplexity && (XS.data.modalSliderComplexity = 2), function () {
                        var e = Container.expand((function () {
                            Container.call(this);
                            var e = this;
                            this.backgroundColor = 16777215, this.isShowing = !1;
                            var t = new Graphics;
                            t.beginFill(0, .6), t.drawRect(0, 0, 200, 200), this.addChild(t), e.sounds = {button: void 0}, t.interactive = !0, t.defaultCursor = "pointer";
                            var i = new Container;
                            this.addChild(i);
                            var n = new Graphics;
                            i.addChild(n);
                            var r = 800;

                            function o() {
                                return ((XS.gui.height - XS.styles.margins.top - XS.styles.margins.bottom) / e.scale.y - r) / 2 + XS.styles.margins.top / e.scale.y
                            }

                            this.setHeight = function (t) {
                                r = t, n.clear(), this.hideInnerBackground || (n.beginFill(e.backgroundColor, 1), n.drawRoundedRect(0, 0, 800, r, 35)), this.ratio && this.setRatio && this.setRatio(1)
                            }, this.setHeight(800), this.redraw = function () {
                                i.x = (XS.gui.width / e.scale.x - 800) / 2, t.width = XS.gui.width / e.scale.x, t.height = XS.gui.height / e.scale.y
                            }, this.handleResize = function () {
                                Tween.complete(i);
                                var t = c && c.additionalHeight || 0,
                                    n = Math.min(Math.min((XS.gui.width - XS.styles.margins.left - XS.styles.margins.right) / 900, (XS.gui.height - XS.styles.margins.top - XS.styles.margins.bottom) / (r + 50 + t)), 1);
                                e.scale.set(n), i.y = o(), e.redraw()
                            }, XS.on("resize", this.handleResize, {freezeGroup: ENG_FRZ_GRP});
                            var a, s = !1, c = null, l = !1, d = [];

                            function u() {
                                e.isShowing = !1, c && c.destroy && c.destroy(), i.removeChild(c), XS.gui.removeChild(e), c = null
                            }

                            this.show = function (t, i, n, r) {
                                e.isShowing ? d.push({
                                    new_content: t,
                                    ignoreBackground: i,
                                    disableInteractive: n,
                                    hideInnerBackground: r
                                }) : this.renderModal(t, i, n, r)
                            }, this.renderModal = function (n, r, a, d) {
                                e.isShowing = !0, s = !1, l = !1, this.hideInnerBackground = d, XS.emit("togglemodal", {visible: !0}), u(), e.isShowing = !0, (c = n).off("down", void 0, {freezeGroup: ENG_FRZ_GRP}), c.on("down", (function () {
                                    s = !0
                                }), {freezeGroup: ENG_FRZ_GRP}), this.interactive = !a, t.interactive = !a, this.setHeight(c.innerHeight), i.addChild(c), this.handleResize(), i.y = XS.gui.height, t.alpha = 0, new Tween(i, {y: o()}, .3, void 0, ENG_FRZ_GRP), !0 !== r && new Tween(t, {alpha: 1}, .3, void 0, ENG_FRZ_GRP), XS.gui.addChild(e), c.onShow && c.onShow()
                            }, this.hide = function (t) {
                                XS.hideGameOverAd(), e.isShowing ? (new Tween(i, {y: -r}, .3, void 0, ENG_FRZ_GRP).call((function () {
                                    u(), XS.emit("togglemodal", {visible: !1}), t instanceof Function && t()
                                })), a && XS.clearTimeout(a), a = XS.setTimeout((function () {
                                    if (d.length > 0) {
                                        var t = d.shift();
                                        e.renderModal(t.new_content, t.ignoreBackground, t.disableInteractive, t.hideInnerBackground)
                                    }
                                }), 400, null, ENG_FRZ_GRP)) : t instanceof Function && t()
                            }, n.on("down", (function () {
                                s = !0
                            }), {freezeGroup: ENG_FRZ_GRP}), t.on("up", (function () {
                                s || (c.blurClose ? l || (e.hide(), l = !0) : c.blurCallback instanceof Function && (l || (c.blurCallback(), l = !0))), s = !1
                            }), {freezeGroup: ENG_FRZ_GRP})
                        }));
                        window.Modal = new e
                    }();
                    var e = Container.expand((function (e) {
                        var t = Container.call(this), i = new Sprite(h());
                        i.anchor.set(.5, 0), i.x = 400, this.addChild(i);
                        var n = new Sprite(f());

                        function r(e, i, n) {
                            var r = 0;
                            if (e) {
                                var o = new Sprite(e), a = 50 / 171;
                                o.scale.set(a, a), o.y = 39, o.anchor.set(0, .5), r = 55
                            }
                            var s = new Text2(i, {weight: 400, size: 34, maxWidth: 190, dropShadowDistance: 2});
                            s.anchor.set(0, .5);
                            var c = n + (255 - (s.width + r)) / 2;
                            return s.y = 41, s.x = c + r, e && (o.x = c, t.addChild(o)), t.addChild(s), s
                        }

                        n.anchor.set(.5, 0), n.y = -8, this.addChild(n);
                        var o = r(e.challengingStar, e.challenging, 527), a = r(e.normalStar, e.normal, 273),
                            s = [r(e.casualStar, e.casual, 19), a, o], c = [148, 400, 655], l = -1;
                        t.setSelected = function (e, i, r) {
                            var o = c[e];
                            if (r || (Tween.clear(n), i ? new Tween(n, {x: o}, .3, void 0, ENG_FRZ_GRP) : n.x = o), e != l) {
                                l = e, t.emit("complexity", {selected: l});
                                for (var a = 0; a < 3; a++) {
                                    var d = a == e;
                                    s[a].updateStyle({fill: d ? "#FFFFFF" : "#000000", dropShadow: d})
                                }
                            }
                        };
                        var d = null != e.selected ? e.selected : XS.data.modalSliderComplexity - 1;
                        t.setSelected(d, !1), i.on("down", (function (e) {
                            var n = e.event.getLocalPosition(i),
                                r = Math.max(0, Math.min(2, (n.x + 127 + 260) / 258 >> 0));
                            t.setSelected(r, !0)
                        }), {freezeGroup: ENG_FRZ_GRP});
                        var u = void 0, A = 0;

                        function g() {
                            u = void 0, XS.stageContainer.off("stageup", g, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.off("move", p, {freezeGroup: ENG_FRZ_GRP}), t.setSelected(l, !0)
                        }

                        function p(e) {
                            var i = e.event.getLocalPosition(stage).x - u.x;
                            n.x = Math.min(Math.max(A + i, c[0]), c[2]);
                            for (var r = 0; r < c.length; r++) {
                                var o = c[r];
                                Math.abs(n.x - o) < 30 ? t.setSelected(r, !1) : Math.abs(n.x - o) < 100 && t.setSelected(r, !1, !0)
                            }
                        }

                        n.on("down", (function (e) {
                            u = e.event.getLocalPosition(stage), A = n.x, XS.stageContainer.on("stageup", g, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.on("move", p, {freezeGroup: ENG_FRZ_GRP})
                        }), {freezeGroup: ENG_FRZ_GRP}), t.getComplexity = function () {
                            return l
                        }
                    }));
                    window.Modal.ModalButton = Container.expand((function (e, t, i, n, r, o, a) {
                        Container.call(this);
                        var s, c, l, d = this;
                        n = void 0 === n ? 15748651 : n, s = new Graphics, d.addChild(s), d.callback = i;
                        var u, h = void 0 !== a ? a + r : 165 + r;
                        c = new Graphics, (l = new Text2(e, {
                            width: 400,
                            size: o,
                            fill: "#ffffff",
                            maxWidth: 780
                        })).anchor.set(.5, 0), l.x = 400, l.y = 30 + r, l.interactive = !0, l.buttonMode = !0, d.addChild(l), t ? ((u = new Text2(t, {
                            width: 400,
                            size: 40,
                            fill: "#ffffff"
                        })).anchor.set(.5, 0), u.x = 400, u.y = 30 + r + 60, d.addChild(u)) : l.y = (h + r) / 2 - l.height / 2, i && s.on("down", (function () {
                            Modal.sounds.button && Modal.sounds.button.play(0), XS.stageContainer.off("stageup", void 0, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.once("stageup", i, {freezeGroup: ENG_FRZ_GRP})
                        }), {freezeGroup: ENG_FRZ_GRP}), d.setRatio = function (e) {
                            s.width = 800, s.height = 1 * h, c && (c.width = 800, c.height = 35)
                        }, d.setColor = function (e) {
                            s.beginFill(e), r ? (s.drawRoundedRect(0, 0, 800, 200, r), c.clear(), c.beginFill(16777215, 1), c.drawRect(0, 0, 800, r), d.addChild(c)) : s.drawRect(0, 0, 800, h)
                        }, d.setText = function (e) {
                            l.setText(e)
                        }, d.updateTextStyle = function (e) {
                            l.updateStyle(e)
                        }, d.centerText = function () {
                            l.y = (h + r) / 2 - l.height / 2
                        }, d.setSubtext = function (e) {
                            u && u.setText(e)
                        }, d.setColor(void 0 === n ? 16711680 : n, 1), d.getHeight = function () {
                            return h
                        }, d.getWidth = function () {
                            return 800
                        }
                    })), window.Modal.PictureButton = Container.expand((function (e, t) {
                        Container.call(this);
                        var i = this;
                        preload(e, (function () {
                            var n = new Sprite(fetch(e));
                            n.anchor.set(.5, 0), n.x = 400, i.addChild(n);
                            var r = new Graphics;
                            r.beginFill(16777215, .7), r.drawRect(0, 0, 800, 165), r.y = 0, i.setRatio = function (e) {
                                r.x = 470, r.width = 330, r.height = 45
                            };
                            var o = new Text2(Host.Localize.Translate("More great XYYX Games!", {}, "Cross-promo overlay text"), {
                                weight: 400,
                                size: 50,
                                maxWidth: 300,
                                fill: "#000"
                            });
                            o.anchor.set(1, 0), o.ratio = -1, o.y = 6, o.x = 790, i.addChild(r), i.addChild(o), i.setRatio(i.ratio), t && (n.buttonMode = !0, n.on("down", t, {freezeGroup: ENG_FRZ_GRP}))
                        }))
                    }));
                    var t = 1337 * Math.random() >> 0;
                    window.Modal.ModalOverlayContent = Container.expand((function () {
                        var i = Container.call(this);

                        function n(e, t, i) {
                            var n = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), r = -1 !== e.indexOf("?") ? "&" : "?";
                            return e.match(n) ? e.replace(n, "$1" + t + "=" + i + "$2") : e + r + t + (i ? "=" + i : "")
                        }

                        return this.innerHeight = 800, this.blurClose = !0, i.addHeadline = function (e, t) {
                            var n = new Text2(e, t || {weight: 200, size: 90, fill: "#2c2c2c", maxWidth: 780});
                            return n.anchor.set(.5, 0), n.x = 400, n.y = 40, i.addChild(n), n
                        }, i.addTextBlock = function (e, t, n, r) {
                            var o = new Text2(e, r || {
                                weight: n || 200,
                                size: t || 90,
                                fill: "#2c2c2c",
                                maxWidth: 700
                            });
                            return o.anchor.set(.5, 0), o.x = 400, o.y = 50, i.addChild(o), o
                        }, i.addLead = function (e, t, n, r) {
                            var o = new Text2(e, r || {
                                width: 200,
                                size: n || 45,
                                fill: "#2c2c2c",
                                maxWidth: 800,
                                align: "center"
                            });
                            return o.anchor.set(.5, 0), o.x = 400, o.y = 140 + (t || 0), i.addChild(o), o
                        }, i.addButton = function (e, t, n, r, o, a) {
                            var s = new Modal.ModalButton(e, r || "", t, n, void 0 === a ? 35 : a, o || 90);
                            return s.y = 370, i.addChild(s)
                        }, i.addMiddleButton = function (e, t, n, r, o, a) {
                            var s = new Modal.ModalButton(e, t, n, r, 0, o || 60, a);
                            return s.y = 370, i.addChild(s)
                        }, i.addSocialButton = function (e, t, n, r, o) {
                            var a = i.addMiddleButton(e, t, n, r);
                            return a.y = 405 + (o || 0), i.addChild(a)
                        }, i.addPictureButton = function (e, t, n) {
                            var r = new Modal.PictureButton(e, t);
                            return r.y = 405 + (n || 0), r.x = 2, i.addChild(r)
                        }, i.addSlider = function (t) {
                            return i.addChild(new e(t))
                        }, i.addMetaButton = function (e, r) {
                            if (!XS.can.showModalCrossPromo()) return !1;
                            var o,
                                a = !!(XS.remoteConfig && XS.remoteConfig.crosspromoteConfig && XS.remoteConfig.crosspromoteConfig.length),
                                s = !(!XS.crosspromo || !XS.crosspromo.getConfig("banner", !0)), c = [];
                            if (!XS.is.twitter) {
                                for (var l = s ? XS.crosspromo.getConfig("banner") : a ? XS.remoteConfig.crosspromoteConfig : [{
                                    facebookImage: "cdn.XYYX.com/2021/banners/800x165/basketball.jpg",
                                    facebookUrl: "--https--apps.facebook.com/basketballXYYX",
                                    webImage: "cdn.XYYX.com/2021/banners/800x165/basketball.jpg",
                                    webUrl: "http://basketball.XYYX.com/"
                                }, {
                                    facebookImage: "cdn.XYYX.com/2021/banners/800x165/hex.jpg",
                                    facebookUrl: "--https--apps.facebook.com/hexXYYX",
                                    webImage: "cdn.XYYX.com/2021/banners/800x165/hex.jpg",
                                    webUrl: "http://hex.XYYX.com/"
                                }, {
                                    facebookImage: "cdn.XYYX.com/2021/banners/800x165/mahjong.jpg",
                                    facebookUrl: "--https--apps.facebook.com/mahjongXYYX",
                                    webImage: "cdn.XYYX.com/2021/banners/800x165/mahjong.jpg",
                                    webUrl: "http://mahjong.XYYX.com/"
                                }], d = [], u = 0; u < l.length; u++) {
                                    var h = l[u];
                                    if (XS.is.android && !XS.is.samsungBixby) XS.is.silk || (XS.is.samsungAppStore ? h.samsungUrl && h.samsungImage && d.push([h.samsungUrl, h.samsungImage]) : h.androidUrl && h.androidImage && d.push([h.androidUrl, h.androidImage])); else if (XS.is.iOS && h.iOSUrl && h.iOSImage) d.push([h.iOSUrl, h.iOSImage, "_top"]); else if (XS.is.facebookApp && h.facebookUrl && h.facebookImage) d.push([h.facebookUrl, h.facebookImage, "_top"]); else if (XS.is.chromeWrapper && h.chromeUrl && h.chromeImage) d.push([h.chromeUrl, h.chromeImage, "_blank"]); else if (!XS.is.chromeWrapper && h.webUrl && h.webImage) {
                                        if (XS.is.samsungBixby && -1 != h.webUrl.indexOf("solitaire.XYYX")) continue;
                                        d.push([(o = h.webUrl, XS.is.samsungBixby ? n(o, "samsung", "") : XS.is.samsungBrowser ? n(o, "samsungbrowser", "") : o), h.webImage, XS.is.mobile ? "_blank" : "_top"])
                                    }
                                }
                                d.length && c.push((function (t) {
                                    var i = d[d.length * Math.random() >> 0], n = i[0], r = XS.httpPrefix + i[1],
                                        o = i[2];
                                    XS.is.samsungBrowser && n.replace(/^market:\/\//, XS.httpPrefix + "market.android.com/"), XS.track.crossPromotionShow("standard_aftergame"), t.addPictureButton(r, (function () {
                                        XS.track.crossPromotionSuccess(n), XS.navigate(n, o)
                                    }), e).y = e
                                }))
                            }
                            return XS.can.showModalLoginWithFacebook() && c.push((function (t) {
                                t.addSocialButton(Host.Localize.Translate("Login with Facebook"), Host.Localize.Translate("Save your score!"), (function () {
                                    window.requestFacebookLogin((function () {
                                        Modal.hide(), r.mainActionCallback && r.mainActionCallback(), r.autoCallback && r.autoCallback()
                                    }))
                                }), 4675430, e).y = e
                            })),
                            XS.can.showModalShareDialog() && c.push((function (t) {
                                t.addSocialButton(Host.Localize.Translate(Config.buttonShareTitle, {game_name: Config.shareTitle}),
                                    Host.Localize.Translate(Config.buttonShareDescription, {game_name: Config.shareTitle}), (function () {
                                    window.shareDialogueCallback(""), r.mainActionCallback && r.mainActionCallback()
                                }), 4675430, e).y = e
                            })),
                            !!c.length && (c[++t % c.length](i), !0)
                        }, i
                    })), window.Modal.RateGameModal = Modal.ModalOverlayContent.expand((function (e, t) {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("Having Fun?")), this.addLead(Host.Localize.Translate("Help us improve the game!\nHow would you rate {game_name}?", {game_name: Config.shareTitle}), 10);
                        var i = this,
                            n = i.addMiddleButton(Host.Localize.Translate("Send Feedback"), Host.Localize.Translate("Help us improve {game_name}", {game_name: Config.shareTitle}, "We are asking the user to provide feedback for the game"), (function () {
                                XS.navigate(Config.feedbackURL), Modal.hide()
                            }), 6208638);
                        n.y = 430, n.visible = !1;
                        var r = i.addMiddleButton(Host.Localize.Translate("Write Review"), Host.Localize.Translate("Help us by writing a review!"), (function () {
                            XS.is.samsungAppStore ? XS.navigate(Config.samsungReviewUrl) : XS.is.chromeWrapper ? XS.navigate(Config.chromeReviewUrl) : XS.is.android ? XS.navigate(Config.androidReviewURL) : XS.navigate(Config.iOSReviewURL), Modal.hide()
                        }), 12303291);
                        r.y = 580, r.visible = !1;
                        var o = i.addButton(Host.Localize.Translate("No thanks"), (function () {
                            Modal.hide()
                        }), t);
                        o.visible = !1;
                        var a = [];

                        function s(t) {
                            var s = new Sheet(e, 136, 130);
                            return s.y = 270, s.x = 150 * c + 30, s.on("down", (function () {
                                for (var e = 0; e < 5; e++) a[e].frame = e <= t ? 1 : 0;
                                !function (e) {
                                    var t = 4 != e;
                                    n.visible = t, r.visible = !0;
                                    var a = t ? 150 : 0;
                                    r.y = 430 + a, r.setColor(t ? 12303291 : 6208638), o.visible = !0, i.innerHeight = 760 + a, Modal.setHeight(i.innerHeight), Modal.handleResize(), o.y = 560 + a, i.addChildAt(o, 0)
                                }(t)
                            }), {freezeGroup: ENG_FRZ_GRP}), s.buttonMode = !0, s
                        }

                        for (var c = 0; c < 5; c++) a.push(this.addChild(s(c)));
                        this.innerHeight = 450, this.blurClose = !1
                    })), window.Modal.AskRateGameModal = Modal.ModalOverlayContent.expand((function (e, t, i) {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("Having Fun?")), this.addLead(Host.Localize.Translate("Help us improve the game!\nHow would you rate {game_name}?", {game_name: Config.shareTitle}), 26);
                        var n = this.addButton(Host.Localize.Translate("Rate us"), (function () {
                            t && t(), i(!0), Modal.hide()
                        }), e);
                        n.visible = !0, n.y = 276, this.innerHeight = 450, this.blurClose = !1, this.blurCallback = function () {
                            Modal.hide(), i(!1)
                        }
                    })), window.Modal.AlertDialog = Modal.ModalOverlayContent.expand((function (e, t) {
                        var i = e.titleText || "", n = e.messageText || "", r = e.okButtonConfig;
                        Modal.ModalOverlayContent.call(this), this.addHeadline(i), this.addLead(n, 26);
                        if (r) {
                            var o = this.addButton(r.title, (function () {
                                t(!0), Modal.hide()
                            }), r.backgroundColor);
                            o.visible = !0, o.y = 276
                        }
                        this.innerHeight = 450, this.blurClose = !1, this.blurCallback = function () {
                            Modal.hide(), t(!1)
                        }
                    })), window.Modal.FacebookLogin = Modal.ModalOverlayContent.expand((function (e) {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("Login to facebook")), this.addLead(Host.Localize.Translate("Please relogin to facebook \nto continue save your score"), 26);
                        var t = this.addButton(Host.Localize.Translate("Login"), (function () {
                            e(!0), Modal.hide()
                        }), 3889560);
                        t.visible = !0, t.y = 276, this.innerHeight = 450, this.blurClose = !1, this.blurCallback = function () {
                            Modal.hide(), e(!1)
                        }
                    })), window.Modal.BuyItemModal = Modal.ModalOverlayContent.expand((function (e, t, i, n, r, o, a) {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(e);
                        var s = this.addLead(t, 10);
                        s.updateStyle({wordWrapWidth: 790});
                        var c = this.addButton(i, n, 7463062);
                        (c.y = 200, r) ? (this.addMiddleButton(r, o, a, 8026746).y = 255, c.y += 185, this.innerHeight = 579) : (c.y += 20, this.innerHeight = 420);
                        this.addChild(s)
                    })), window.Modal.InstallGameModal = Modal.ModalOverlayContent.expand((function (e, t, i, n) {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("Install {game_name}?", {game_name: Config.shortTitle}));
                        var r = this.addButton(Host.Localize.Translate("Install Now"), (function () {
                            t && XS.navigate(t, "_top"), n && n()
                        }), 6274174);
                        r.y = 640, this.innerHeight += 40;
                        var o = XS.utils.asynchLoadImageFromPath(window.__resolvePath(e));
                        o.anchor.set(0, 0), this.addChild(o), o.buttonMode = !0, o.on("down", (function () {
                            t && XS.navigate(t, "_top"), n && n()
                        }), {freezeGroup: ENG_FRZ_GRP}), this.setRatio = function (e) {
                            o.scale.set(1.465, 1.465), o.y = 160
                        }, this.setText = function (e) {
                            r.setText(e)
                        }, this.blurClose = !1, this.blurCallback = function () {
                            Modal.hide(i)
                        }
                    })), window.Modal.GameEndModal = Modal.ModalOverlayContent.expand((function (e) {
                        var t = Modal.ModalOverlayContent.call(this);
                        gax("send", "event", Config.id, "Game Over");
                        var i = e.contentTop || 190;
                        e.headline && t.addHeadline(e.headline), e.lead && t.addLead(e.lead), this.blurClose = !1, t.blurCallback = function () {
                            e.mainActionCallback()
                        }, t.mainAction = t.addButton(e.mainActionText, e.mainActionCallback, e.mainActionColor || 7463062, e.mainActionLead, e.mainActionSize), e.disableMetaButton && !XS.can.showModalMetaButtonOnGameEnd() || t.addMetaButton(i + 50, e) && (i += 165), t.mainAction.y = 215 + i - 200, t.innerHeight = 215 + i
                    })), window.Modal.NewWinModal = Modal.ModalOverlayContent.expand((function (e) {
                        var t = Modal.ModalOverlayContent.call(this);
                        gax("send", "event", Config.id, "New Game"), t.addHeadline([Host.Localize.Translate("Amazing!"), Host.Localize.Translate("Impressive!"), Host.Localize.Translate("Breathtaking!")][3 * Math.random() >> 0]), t.blurClose = e.allowBlurClose || !1;
                        var i = 190, n = CalendarView.getCalendarViewDay({
                            currentDate: CalendarView.getDateFromOffset(e.seed),
                            isToday: CalendarView.isToday(e.seed),
                            isLarge: !0,
                            dateOffset: e.seed,
                            stars: [e.bronze, e.silver, e.gold],
                            animate: !0
                        });
                        (t.addChild(n), n.x = 400, n.y = 380, e.lead) && (t.addTextBlock(e.lead, 50, 300).y = i + 400, i += 61);
                        if (void 0 !== e.score) {
                            i += 130;
                            var r = t.addTextBlock(0, 150, 400);
                            r.y = 550, t.addChild(r);
                            var o = 0;
                            Object.defineProperty(r, "score", {
                                get: function () {
                                    return o
                                }, set: function (e) {
                                    o = e, this.setText((e >> 0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","))
                                }
                            });
                            var a = r.scale.x, s = r.scale.x;
                            new Tween(r, {score: e.score}, 1, Tween.linary, ENG_FRZ_GRP).wait(.3).call((function () {
                                e.sounds && e.sounds.ding && e.sounds.ding.play(), r.scale.set(1.1 * a, 1.1 * s), new Tween(r.scale, {
                                    x: a,
                                    y: s
                                }, .3, void 0, ENG_FRZ_GRP)
                            })), e.sounds && e.sounds.count && e.sounds.count.play(.4)
                        }
                        (t.addMetaButton(i + 405, e) && (i += 165), e.secondActionText && e.secondActionCallback) && (t.addSocialButton(e.secondActionText, e.secondActionLead, e.secondActionCallback, e.secondActionColor || 7445472).y = i + 405, i += 165);
                        var c = t.addButton(e.mainActionText, e.mainActionCallback, e.mainActionColor || 7463062);
                        t.addChildAt(c, 1), c.y += i, t.innerHeight = 570 + i
                    })), window.Modal.StartGameModal = Modal.ModalOverlayContent.expand((function (e) {
                        var t = Modal.ModalOverlayContent.call(this);
                        gax("send", "event", Config.id, "New Game");
                        var i = e.contentTop || 190;
                        return e.headline && t.addHeadline(e.headline), e.lead && t.addLead(e.lead), this.blurClose = !1, t.blurCallback = function () {
                            e.mainActionCallback()
                        }, t.mainAction = t.addButton(e.mainActionText, e.mainActionCallback, e.mainActionColor || 7463062, e.mainActionLead, e.mainActionSize), e.disableMetaButton && !XS.can.showModalMetaButtonOnGameStart() || t.addMetaButton(i + 50, e) && (i += 165), t.mainAction.y = 215 + i - 200, t.innerHeight = 215 + i, t
                    })), window.Modal.GameOverModal = Container.expand((function (e, t) {
                        Modal.ModalOverlayContent.call(this);
                        var i = this;
                        i.addHeadline(Host.Localize.Translate("Game Over")), i.addLead(Host.Localize.Translate("No more valid moves")), i.blurClose = !1;
                        var n = i.addButton(Host.Localize.Translate("Start over"), e, 7463062), r = 250;
                        (i.addMetaButton(r, {mainActionCallback: t}) && (r += 165), t) && (i.addMiddleButton(Host.Localize.Translate("Return to Calendar"), Host.Localize.Translate("Play another level?"), t, 7445472).y = r, r += 165);
                        n.y = r - 35, i.innerHeight = r + 165
                    })), window.Modal.NewGameModal = Container.expand((function (e, t) {
                        var i = Modal.ModalOverlayContent.call(this), n = -170,
                            r = i.addButton(Host.Localize.Translate("Start"), (function () {
                                e()
                            }), 7463062);
                        if (t) {
                            var o = i.addSlider({
                                casual: Host.Localize.Translate("Casual"),
                                normal: Host.Localize.Translate("Normal"),
                                challenging: Host.Localize.Translate("Challenging"),
                                casualStar: t.casualStar,
                                normalStar: t.normalStar,
                                challengingStar: t.challengingStar,
                                selected: t.complexity
                            });
                            o.on("complexity", (function (e) {
                                XS.data.modalSliderComplexity = e.selected + 1
                            }), {freezeGroup: ENG_FRZ_GRP}), o.y = 595;
                            var a = e;
                            e = function () {
                                a(o.getComplexity())
                            }, n = 290, i.innerHeight = 570 + n
                        }
                        r.y += n, i.innerHeight = 570 + n
                    })), window.Modal.Toast = Modal.ModalOverlayContent.expand((function (e, t) {
                        var i = Modal.ModalOverlayContent.call(this);
                        e && i.addHeadline(e), t && i.addLead(t, 20), i.innerHeight = 250
                    })), window.Modal.showToast = function (e, t, i) {
                        t = t || 3e3;
                        Modal.show(e, !0, !0), XS.setTimeout((function () {
                            Modal.hide(i)
                        }), t)
                    }, window.Modal.TryAgainModal = Modal.ModalOverlayContent.expand((function () {
                        Modal.ModalOverlayContent.call(this), this.addHeadline([Host.Localize.Translate("Try again", {}, "Shown when a user plays bad"), Host.Localize.Translate("Once more", {}, "Shown when a user plays bad"), Host.Localize.Translate("Again", {}, "Shown when a user plays bad"), Host.Localize.Translate("One more time", {}, "Shown when a user plays bad")][4 * Math.random() | 0]), this.blurClose = !0, this.innerHeight = 200
                    })), window.Modal.VBox = Container.expand((function (e, t) {
                        Container.call(this);
                        for (var i = 0, n = 0; n < e.length; n++) {
                            var r = e[n];
                            this.addChild(r), r.y = i, i += r.height + (t || 0)
                        }
                        this.innerHeight = i
                    })), window.Modal.ContentModal = Modal.ModalOverlayContent.expand((function (e, t, i, n) {
                        var r;

                        function o(e) {
                            return "string" == typeof e || e instanceof String || e instanceof Host.Localize.LocalizedString
                        }

                        Modal.ModalOverlayContent.call(this), e && (o(e) ? this.headline = this.addHeadline(e) : this.headline = this.addHeadline(e.text, e.style), r = this.headline), t && (o(t) ? this.textBlock = this.addTextBlock(t) : this.textBlock = this.addTextBlock(t.text, void 0, void 0, t.style), r = this.textBlock), i && (o(i) ? this.lead = this.addLead(i) : this.lead = this.addLead(i.text, void 0, void 0, i.style), r = this.lead), n && (this.addChild(n), n.y = (r ? r.y + r.height : 0) + 40, this.innerHeight = n.y + n.height)
                    })), window.Modal.ActionButton = Container.expand((function (e, t, i, n, r) {
                        Container.call(this);
                        var o = this;
                        i = void 0 === i ? 15748651 : i;
                        var a = new Graphics;
                        this.addChild(a);
                        var s = new Text2(e, {width: 400, size: r, fill: "#ffffff", maxWidth: 780});
                        s.anchor.set(.5, 0), s.x = 400, s.y = 30, s.interactive = !0, s.buttonMode = !0, this.addChild(s), t && a.on("down", (function () {
                            Modal.sounds.button && Modal.sounds.button.play(0), XS.stageContainer.off("stageup", void 0, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.once("stageup", (function () {
                                t(o)
                            }), {freezeGroup: ENG_FRZ_GRP})
                        }), {freezeGroup: ENG_FRZ_GRP}), this.setColor = function (e) {
                            a.beginFill(e), n ? (a.drawRoundedRect(0, 0, 800, 165, n), a.drawRect(0, 0, 800, n)) : a.drawRect(0, 0, 800, 165)
                        }, this.setText = function (e) {
                            s.setText(e)
                        }, this.updateTextStyle = function (e) {
                            s.updateStyle(e)
                        }, this.setColor(void 0 === i ? 16711680 : i, 1), this.select = function (e) {
                            t && t(o)
                        }
                    })), window.Modal.ButtonListModal = window.Modal.ContentModal.expand((function (e) {
                        var t = (e = e || {}).title, n = e.textBlock, r = e.lead, o = e.buttons, a = e.styles || {
                            focus: {style: {size: 90, fill: "#FFFFFF"}, color: 7463062},
                            unfocus: {style: {size: 70, fill: "#666666"}, color: 16777215},
                            select: {color: 4886882}
                        };

                        function s(e, t) {
                            var i = a[t ? "select" : "unfocus"],
                                n = new Modal.ActionButton(e.text, e.callback, i.color, t ? 35 : 0, i.size || 90);
                            return n.updateTextStyle(i.style), n
                        }

                        for (var c = [], l = 0; l < o.length; l++) {
                            var d = l === o.length - 1;
                            c.push(s(o[l], d))
                        }
                        var u = new window.Modal.VBox(c, 0);
                        window.Modal.ContentModal.call(this, t, n, r, u), this.initTabGroup = function (e) {
                            var t = window.XS && window.XS.TabGroup;
                            if (t) {
                                for (var n = [], r = 0; r < o.length; r++) n.push(new i(c[r], r, a));
                                return this.tabgroup = new t(n, {wrap: !0, defaultTabFocusIndex: e}), this.tabgroup
                            }
                        }, this.focus = function () {
                            this.tabgroup && this.tabgroup.focus()
                        }, this.unfocus = function () {
                            this.tabgroup && this.tabgroup.unfocus()
                        }, this.onShow = function () {
                            this.tabgroup && this.tabgroup.push()
                        }, this.destroy = function () {
                            this.tabgroup && this.tabgroup.pop()
                        }, o.length > 0 && this.initTabGroup(o.length - 1)
                    }))
                }

                function i(e, t, i) {
                    var n = this;
                    n.button = e, n.tabindex = t, n.config = i, this.focus = function () {
                        n.button.setColor(n.config.focus.color), n.button.updateTextStyle(n.config.focus.style)
                    }, this.unfocus = function () {
                        n.button.setColor(n.config.unfocus.color), n.button.updateTextStyle(n.config.unfocus.style)
                    }, this.select = function (e) {
                        n.button.select && n.button.select()
                    }
                }
            }));
            var A = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/branded-modal-base.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="620" height="916"><path data-name="Tracciato 923" d="M142.374.005H70.882A71.091 71.091 0 0 0-.001 70.888v31.079h142.452Z" fill="#00bdff"/><path data-name="Tracciato 924" d="M263.059.004h-121.66l-17.481 26.1v75.867h139.141Z" fill="#9b00ff"/><path data-name="Tracciato 925" d="M383.759.004H262.095l-17.481 26.1v75.867H383.76Z" fill="#ff0029"/><path data-name="Tracciato 926" d="M504.338.004H382.673l-17.481 26.1v75.867h139.146Z" fill="#ff9603"/><path data-name="Tracciato 927" d="M620 70.884A71.092 71.092 0 0 0 549.117.001h-45.64l-17.516 26.082v75.88H620Z" fill="#ffc700"/><path data-name="banner bg" d="M620.002 97.995c0-39.553-32.217-71.914-71.591-71.914H71.59C32.215 26.081 0 58.442 0 97.995v653.858h620Z" fill="#fff"/><g data-name="btn play"><path d="M.002 758v86.025C.002 883.612 32.217 916 71.592 916h476.819c39.374 0 71.591-32.388 71.591-71.975V758Z" fill="#1d9d3e"/><path data-name="btn" d="M.002 748v86.025C.002 873.612 32.217 906 71.592 906h476.819c39.374 0 71.591-32.388 71.591-71.975V748Z" fill="#2abb4f"/></g></svg>',
                    width: 620,
                    height: 916,
                    mimetype: "svg+xml"
                })
            }), !0), g = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/Buttonclose.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="93" height="99"><g data-name="close btn"><g><circle cx="46.5" cy="46.5" transform="translate(0 6)" fill="#008ebf" r="46.5"/><circle data-name="Ellisse 59" cx="46.5" cy="46.5" r="46.5" fill="#00bdff"/></g><path data-name="icon close" d="m51.74 47 14.286-14.289a3.348 3.348 0 0 0-4.734-4.735L47.005 42.264l-14.29-14.29a3.348 3.348 0 1 0-4.73 4.737l14.286 14.29L27.985 61.29a3.348 3.348 0 1 0 4.73 4.735l14.29-14.29 14.286 14.29a3.348 3.348 0 1 0 4.734-4.735Z" fill="#fff"/></g></svg>',
                    width: 93,
                    height: 99,
                    mimetype: "svg+xml"
                })
            }), !0);
            XS.modulesToPreload.push((function () {
                window.Modal.BrandedDialog = Container.expand((function (e, t) {
                    var i = "Helvetica neue, helvetica, Verdana, Arial", n = 400, r = 100, o = "#0a7cb0", a = 60,
                        s = "#888888";

                    function c(e, t, i, n) {
                        var r = new Graphics;
                        return r.beginFill(i, void 0 === n ? 1 : n), r.drawRect(0, 0, e, t), r.endFill(), r
                    }

                    var l = Container.call(this), d = 620, u = 916;
                    l.width = d, l.height = u, l.x = 100;
                    var h = new Sprite(A());
                    if (l.addChild(h), e.shouldShowCloseButton) {
                        var f = new Sprite(g()), p = LEGACY_COORD_SYSTEM ? 93 : f.width,
                            v = LEGACY_COORD_SYSTEM ? 99 : f.height;
                        f.x = d - .7 * p, f.y = .3 * -v, l.addChild(f), f.once("up", (function () {
                            l.blurCallback()
                        }))
                    }
                    e.title = e.title || {};
                    var w = {
                        font: e.title.font || i,
                        weight: e.title.weight || n,
                        size: e.title.size || r,
                        fill: e.title.fill || o,
                        maxWidth: 540,
                        align: "center"
                    }, y = new Text2(e.title.text, w);
                    y.x = 310 - .5 * y.width, y.y = e.title.topMargin || 80, l.addChild(y);
                    var m, C, I = 742, E = 20, S = new Container, b = 722 - (y.y + y.height + E);
                    (e.details1 || e.details2) && (e.details1 && ((m = new Text2(e.details1, {
                        font: i,
                        weight: n,
                        size: a,
                        fill: s,
                        maxWidth: 590,
                        align: "center"
                    })).x = 310 - .5 * m.width, m.y = 0, S.addChild(m)), e.details2 && ((C = new Text2(e.details2, {
                        font: i,
                        weight: e.details2Style && e.details2Style.weight || n,
                        size: e.details2Style && e.details2Style.size || a,
                        fill: e.details2Style && e.details2Style.fill || s,
                        maxWidth: 580,
                        align: "center"
                    })).x = 310 - .5 * C.width, C.y = b - C.height - E, S.addChild(C)));
                    var x = new Sprite(e.image), B = 0;
                    m && (B = m.height);
                    var P = 0;
                    C && (P = C.height);
                    var Q = b - B - P - 40, R = 580 / x.width, D = Q / x.height, k = R < D ? R : D;
                    x.scale.set(k, k), x.x = 310 - .5 * x.width, x.y = m ? m.height + E : E, S.addChild(x), S.y = y.y + y.height + E, l.addChild(S);
                    var M = c(d, 174, "#FFFFFF", 1e-4);
                    M.y = I, l.addChild(M);
                    var H = new Container, T = new Text2(e.okButtonText || Host.Localize.Translate("OK"), {
                        font: i,
                        weight: e.okButtonStyle && e.okButtonStyle.weight || n,
                        size: e.okButtonStyle && e.okButtonStyle.size || 100,
                        fill: e.okButtonStyle && e.okButtonStyle.fill || "#FFFFFF",
                        maxWidth: 420
                    });
                    if (T.x = 310, T.y = 87, T.anchor.set(.5, .5), H.addChild(T), e.okButtonImage) {
                        T.x -= 46;
                        var L = new Sprite(e.okButtonImage);
                        L.x = T.x + T.width / 2 + 20, L.y = T.y;
                        var O = T.height / L.height;
                        L.scale.set(O, O), L.anchor.set(0, .5), H.addChild(L)
                    }
                    if (l.addChild(H), H.y = M.y, M.on("up", (function () {
                        Modal.hide((function () {
                            t && t(!0)
                        }))
                    })), !e.hideCancelButton) {
                        var F = new function (e, t, i, n) {
                            var r = new Container;
                            i = i || 10, r.label = new Text2(e, t);
                            var o = Object.assign({}, t);
                            return o.fill = n || "#558093", r.shadow = new Text2(e, o), r.shadow.y += i, r.addChild(r.shadow), r.addChild(r.label), r
                        }(e.cancelButtonText || Host.Localize.Translate("No thanks"), {
                            font: i,
                            size: 40,
                            weight: 300,
                            fill: "#555555",
                            maxWidth: 500
                        }, 4, "#272727");
                        F.x = 310 - .5 * F.width, F.y = 936, l.addChild(F);
                        var X = c(F.width, F.height, "#FFFFFF", 1e-4);
                        X.x = F.x, X.y = F.y, l.addChild(X), X.on("up", (function () {
                            l.blurCallback()
                        }))
                    }

                    function G() {
                        if (LEGACY_COORD_SYSTEM) {
                            M.y = I * l.ratio;
                            M.height = 174 * l.ratio, M.width = d * l.ratio
                        } else M.width = XS.gui.width / l.scale.x, M.height = XS.gui.height / l.scale.y
                    }

                    l.innerHeight = u, XS.on("resize", G), LEGACY_COORD_SYSTEM && (l.setRatio = function (e) {
                        l.ratio = e, G()
                    }), l.ratio = 1, l.blurClose = !1, l.blurCallback = function () {
                        Modal.hide((function () {
                            t && t(!1)
                        }))
                    }
                })), window.Modal.showBrandedModal = function (e, t) {
                    Modal.show(new Modal.BrandedDialog(e, t), !1, !1, !0)
                }
            })), window.ScrollContainer = function (e, t) {
                var i = Container.call(this);
                i.scrollWidth = e, i.scrollHeight = t, i.allowScrollX = !0, i.allowScrollY = !0, i.content = new Container, i.content._x = i.content._y = 0, i.addChild(i.content), i.content.addChild.bind(i.content);
                var n = i.content.addChildAt.bind(i.content), r = i.content.removeChild.bind(i.content),
                    o = i.addChildAt.bind(i), a = [];

                function s() {
                    for (var e = 0, t = 0; t < a.length; t++) {
                        var o = a[t], s = !0;
                        i.mask && (o.y + i.content.y > i.scrollHeight && (s = !1), o.x + i.content.x > i.scrollWidth && (s = !1), o.y + o.height + i.content.y < 0 && (s = !1), o.x + o.width + i.content.x < 0 && (s = !1)), s ? (i.content.children[e] !== o && n(o, e), e++) : r(o)
                    }
                }

                Object.defineProperty(i.content, "x", {
                    get: function () {
                        return this._x
                    }, set: function (e) {
                        this._x != e && (this._x = e, this.position.x = LEGACY_COORD_SYSTEM ? e * (this.parent && this.parent.ratio || 1) : e, s(), i.emit("scroll"))
                    }
                }), Object.defineProperty(i.content, "y", {
                    get: function () {
                        return this._y
                    }, set: function (e) {
                        this._y != e && (this._y = e, this.position.y = LEGACY_COORD_SYSTEM ? e * (this.parent && this.parent.ratio || 1) : e, s(), i.emit("scroll"))
                    }
                }), i.addChild = function (e) {
                    return a.push(e), s(), e
                }, i.setMaskEnabled = function (e) {
                    if (e) {
                        if (!i.mask) {
                            var t = new Graphics;
                            o(t, i.children.length), i.mask = t, i.resizeMask(i.scrollWidth, i.scrollHeight)
                        }
                    } else i.mask && (i.mask = null)
                }, i.addChildAt = function (e, t) {
                    if (t < 0 || t > a.length) throw"Child index outside of valid scroll container range";
                    return i.removeChild(e), a.splice(t, 0, e), s(), e
                }, i.removeChild = function (e) {
                    for (var t = 0; t < a.length; t++) a[t] == e && (a.splice(t, 1), r(e));
                    return e
                }, i.resize = function (e, t) {
                    i.scrollWidth = e, i.scrollHeight = t, i.resizeMask(e, t), s()
                }, i.resizeMask = function (e, t) {
                    i.mask && (i.mask.clear(), i.mask.beginFill(16777215), i.mask.drawRect(0, 0, e, t), i.mask.endFill())
                }, i.getChildren = function () {
                    return i.content.children
                }, i.moved = !1;
                var c = null, l = 0, d = 0, u = null, h = 0, f = 0, A = 0;

                function g() {
                    return i.scrollWidth - Math.max(function () {
                        for (var e = 0, t = 0; t < a.length; t++) {
                            var i = a[t], n = i.x + i.width;
                            n > e && (e = n)
                        }
                        return e
                    }(), i.scrollWidth)
                }

                function p() {
                    return i.scrollHeight - Math.max(function () {
                        for (var e = 0, t = 0; t < a.length; t++) {
                            var i = a[t], n = i.y + i.height;
                            n > e && (e = n)
                        }
                        return e
                    }(), i.scrollHeight)
                }

                function v(e) {
                    var t = e.event;
                    if (null !== c) {
                        var n = t.getLocalPosition(i);
                        if (i.moved || i.allowScrollY && Math.abs(c.y - n.y) > 25 || i.allowScrollX && Math.abs(c.x - n.x) > 25) {
                            if (i.moved = !0, u && (h = n.y - u.y, f = n.x - u.x, A = (new Date).getTime()), u = n, i.allowScrollX) {
                                var r = l - (c.x - n.x) / 1, o = g();
                                if (r > 0) r = Math.min(r, 7 * Math.sqrt(r)); else if (r < o) {
                                    var a = -r + o;
                                    r = o - Math.min(a, 7 * Math.sqrt(a))
                                }
                                i.content.x = r
                            }
                            if (i.allowScrollY) {
                                var s = d - (c.y - n.y) / 1, v = p();
                                s > 0 ? s = Math.min(s, 7 * Math.sqrt(s)) : s < v && (a = -s + v, s = v - Math.min(a, 7 * Math.sqrt(a))), i.content.y = s
                            }
                        }
                    }
                }

                function w(e) {
                    c && (!i.moved && i.callback && i.callback(), i.callback = null, i.clean()), XS.stageContainer.off("up", w, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.off("move", v, {freezeGroup: ENG_FRZ_GRP})
                }

                var y = !1;

                function m(e) {
                    if (function (e, t) {
                        for (var i = 0; e && e != t && ++i < 100;) e = e.parent;
                        return e == t
                    }(i, XS.stageContainer)) {
                        XS.stageContainer.on("up", w, {freezeGroup: ENG_FRZ_GRP}), XS.stageContainer.on("move", v, {freezeGroup: ENG_FRZ_GRP});
                        var t = e.event.getLocalPosition(i), n = t.x / 1, r = t.y / 1;
                        l = i.content.x, d = i.content.y, n >= 0 && r >= 0 && n <= i.scrollWidth && r <= i.scrollHeight && (c = t), i.moved = y, Tween.clear(i.content), y = !1
                    }
                }

                function C(e) {
                    if (i.allowScrollY) {
                        var t = window.event || e, n = t.detail ? -10 * t.detail : t.wheelDelta, r = p();
                        i.content.y + n >= 0 ? i.content.y = 0 : i.content.y + n < r ? i.content.y = r : i.content.y = i.content.y + n, window.dirtyOnce = !0
                    }
                }

                function I() {
                    y = !1
                }

                window.addEventListener("DOMMouseScroll", C), window.addEventListener("mousewheel", C), XS.stageContainer.on("down", m, {freezeGroup: ENG_FRZ_GRP}), i.dispose = function () {
                    window.removeEventListener("DOMMouseScroll", C), window.removeEventListener("mousewheel", C), XS.stageContainer.off("down", m, {freezeGroup: ENG_FRZ_GRP})
                }, i.clean = function () {
                    u = null;
                    var e = g(), t = p(), n = .2, r = {};
                    i.content.x >= 0 ? r.x = 0 : i.content.x < e && (r.x = e), i.content.y >= 0 ? r.y = 0 : i.content.y < t ? r.y = t : ((new Date).getTime() - A < 250 && Math.abs(h) > 5 && i.allowScrollY && (r.y = Math.max(Math.min(i.content.y + 20 * h, 0), t), n = .4), (new Date).getTime() - A < 250 && Math.abs(f) > 5 && i.allowScrollX && (r.x = Math.max(Math.min(i.content.x + 20 * f, 0), e), n = .4)), void 0 === r.x && void 0 === r.y || (y = !0, new Tween(i.content, r, n, void 0, ENG_FRZ_GRP).call(I)), h = 0, f = 0, c = null, i.moved = !1
                }, i.scrollTo = function (e, t) {
                    if (i.allowScrollX && void 0 !== e) {
                        var n = g();
                        e = i.content.x, i.content.x = e >= 0 ? 0 : e < n ? n : e
                    }
                    if (i.allowScrollY && void 0 !== t) {
                        var r = p();
                        i.content.y = t >= 0 ? 0 : t < r ? r : t
                    }
                }, i.scrollToChild = function (e) {
                    var t, n;
                    if (i.allowScrollX) {
                        var r = -i.content.x, o = i.scrollWidth;
                        e.x < r ? t = -e.x : e.x + e.width > r + o && (t = -(e.x - o + e.width))
                    }
                    if (i.allowScrollY) {
                        var a = -i.content.y, s = i.scrollHeight;
                        e.y < a ? n = -e.y : e.y + e.height > a + s && (n = -(e.y - s + e.height))
                    }
                    i.scrollTo(t, n)
                }, i.content.addChild = i.addChild, i.content.addChildAt = i.addChildAt, i.content.removeChild = i.removeChild
            }, ScrollContainer.prototype = Object.create(Container.prototype), ScrollContainer.prototype.constructor = ScrollContainer;
            var p, v = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_new.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><circle fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" cx="24.899" cy="25.077" r="21.917"/><path fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" d="M24.979 13.122v23.479M36.816 24.861H13.191"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml"
                })
            }), !0), w = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/menuopen.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="68" height="46"><path fill="#fff" d="M14 10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2zm0 16a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2zm0 16a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2zm49-32a2 2 0 0 1-2 2H22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h39a2 2 0 0 1 2 2zm0 16a2 2 0 0 1-2 2H22a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h39a2 2 0 0 1 2 2zm0 16a2 2 0 0 1-2 2H22a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h39a2 2 0 0 1 2 2z"/></svg>',
                    width: 68,
                    height: 46,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), y = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/menuclose.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="68" height="46"><path fill="#fff" d="M53.689 7.354a2 2 0 0 1 0 2.828L21.27 42.6a2 2 0 0 1-2.828 0L14.2 38.357a2 2 0 0 1 0-2.828L46.618 3.11a2 2 0 0 1 2.828 0z"/><path fill="#fff" d="M49.211 42.734a2 2 0 0 1-2.828 0L13.965 10.316a2 2 0 0 1 0-2.828l4.243-4.243a2 2 0 0 1 2.828 0l32.418 32.418a2 2 0 0 1 0 2.828z"/></svg>',
                    width: 68,
                    height: 46,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), m = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/ui-sidebar-shadow.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="268 0 25 25"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="267" y1="12.5" x2="293" y2="12.5"><stop offset="0" stop-opacity="0"/><stop offset="1" stop-opacity=".4"/></linearGradient><path fill="url(#a)" d="M267 0h26v25h-26z"/></svg>',
                    width: 25,
                    height: 25,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), C = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/ui-sidebar-background.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="60" viewBox="167 0 100 60"><path fill="#4CDA64" d="M267 32.179C267 48.097 254.097 61 238.18 61h-42.36C179.903 61 167 48.097 167 32.179v-3.357C167 12.904 179.903 0 195.82 0h42.359C254.097 0 267 12.904 267 28.821v3.358z"/></svg>',
                    width: 100,
                    height: 60,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), I = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/ui-sidebar-outline.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="104" height="64"><path fill="none" stroke="#FCFCFC" stroke-width="3" stroke-miterlimit="10" d="M102.5 33.679c0 15.918-12.903 28.821-28.821 28.821H31.321C15.403 62.5 2.5 49.597 2.5 33.679v-3.357C2.5 14.404 15.403 1.5 31.321 1.5h42.358c15.917 0 28.821 12.904 28.821 28.821v3.358z"/></svg>',
                    width: 104,
                    height: 64,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), E = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/ui-sidebar-toggle.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="61" height="59" viewBox="105 0 61 59"><circle fill="#FFF" cx="135.627" cy="27.772" r="27.273"/></svg>',
                    width: 61,
                    height: 59,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), S = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_XYYX.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><g style="opacity:1;fill:#fff"><path class="st0" d="M45.9 18.7c-.2-.3-.4-.7-.6-1-2.2-3.3-5.8-5.6-9.9-6-5.1-.5-10 2.1-12.8 6.3L18 25l-1.3 2c-2.9 4.1-8.9.4-6.5-4 1.1-1.8 3.6-2.4 5.4-1.1.4.3.8.7 1.1 1.2l4-6.1c-2-1.8-4.6-2.9-7.4-2.9-8.7 0-13.9 10-8.9 17.1 4.4 6.1 13.3 6.1 17.8.1l4.2-6.3c.3-.5 1-1.5 1.4-2 .8-1.2 1.5-2.3 2.7-3.2 4.2-2.9 9.8.1 9.9 5.2 0 4.5-4.6 7.5-8.8 5.8-1.8-.7-2.8-2.3-3.8-3.8 0-.1-.1-.1-.2-.2L23.2 33c.9 1.2 1.9 2.1 1.9 2.1 2.1 1.8 4.8 3 7.6 3.3C43.3 39.4 51 28 45.9 18.7Z" style="fill:#fff" transform="translate(.051 .814)"/></g></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), b = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_twitter.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill="#FFF" d="M48.553 10.206a19.44 19.44 0 0 1-5.604 1.542 9.839 9.839 0 0 0 4.297-5.403 19.44 19.44 0 0 1-6.213 2.366 9.744 9.744 0 0 0-7.111-3.075c-5.387 0-9.757 4.369-9.757 9.754 0 .77.091 1.508.25 2.223-8.116-.41-15.3-4.286-20.119-10.193a9.674 9.674 0 0 0-1.323 4.908 9.738 9.738 0 0 0 4.34 8.113 9.587 9.587 0 0 1-4.411-1.219v.12c0 4.73 3.366 8.677 7.822 9.58a10.14 10.14 0 0 1-4.41.16 9.793 9.793 0 0 0 9.116 6.778 19.634 19.634 0 0 1-12.122 4.162c-.784 0-1.554-.043-2.323-.127a27.62 27.62 0 0 0 14.964 4.381c17.944 0 27.756-14.864 27.756-27.752l-.029-1.263a19.713 19.713 0 0 0 4.877-5.055zm0 0"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), x = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_sound.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" fill="#FFF" d="M26.938 26.027c0 4.648.018 9.296-.02 13.944-.006.716.26 1.852-.98 1.99-.729.081-1.495-.085-1.994-.543-2.2-2.017-4.235-4.215-6.345-6.324-2.139-2.139-2.139-2.139-5.129-2.139-1.817 0-3.649.074-5.474.027-2.158-.055-2.995-.78-3.038-2.793a227.835 227.835 0 0 1 0-9.462c.037-1.789.887-2.657 2.61-2.715 2.155-.073 4.318.02 6.47.02 2.422 0 2.422 0 4.257-1.836 1.875-1.875 3.726-3.784 5.604-5.661.469-.47.882-1.022 1.42-1.392 1.069-.733 2.604.12 2.61 1.446.02 5.147.009 10.293.009 15.438z"/><path fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" d="M40.551 10.934s4.564 7.817 4.564 15.093c0 7.48-4.564 15.94-4.564 15.94M36.008 15.934s3.107 5.322 3.107 10.276c0 5.093-3.107 10.853-3.107 10.853M31.225 20.073s1.891 3.237 1.891 6.25c0 3.098-1.891 6.602-1.891 6.602"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), B = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_music.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" fill="#FFF" d="M19.559 1.392c7.838 2.937 13.254 3.819 20.35 4.92 4.903.761 4.955.657 4.969 5.553.027 9.372.114 18.746-.028 28.117-.086 5.759-5.295 9.959-10.971 9.104-2.637-.397-4.88-1.552-5.679-4.314-.734-2.532.195-4.966 2.245-6.21 2.816-1.712 5.896-1.613 9.823-3.297 0-2.615.309-7.291.063-10.829-.065-.926-.316-2.083-2.094-2.557-5.362-1.425-10.833-2.414-16.947-3.722 0 5.731.105 11.102-.027 16.467-.148 5.98-5.675 10.141-11.549 8.85-2.453-.539-4.749-1.813-4.903-4.356-.116-1.906.593-4.71 1.956-5.68 2.784-1.982 6.222-1.49 10.276-3.287 0-6.603-.04-15.644.081-23.17.034-2.09-.081-4.11-.081-6.257.36 0 2.154.668 2.516.668z"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), P = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_credits.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" style="enable-background:new 0 0 50 50" xml:space="preserve"><path d="M38 36.6H18.4c-1.3 0-2.3-1-2.3-2.3 0-1.3 1-2.3 2.3-2.3H38c1.3 0 2.3 1 2.3 2.3 0 1.2-1 2.3-2.3 2.3zm-24-.9v-2.8c0-.5-.4-.9-.9-.9h-2.4c-.5 0-.9.4-.9.9v2.8c0 .5.4.9.9.9h2.4c.5 0 .9-.4.9-.9zm24-8.3H18.4c-1.3 0-2.3-1-2.3-2.3 0-1.3 1-2.3 2.3-2.3H38c1.3 0 2.3 1 2.3 2.3 0 1.3-1 2.3-2.3 2.3zm-24-.8v-2.8c0-.5-.4-.9-.9-.9h-2.4c-.5 0-.9.4-.9.9v2.8c0 .5.4.9.9.9h2.4c.5-.1.9-.5.9-.9zm24-8.3H18.4c-1.3 0-2.3-1-2.3-2.3 0-1.3 1-2.3 2.3-2.3H38c1.3 0 2.3 1 2.3 2.3 0 1.3-1 2.3-2.3 2.3zm-24-.9v-2.8c0-.5-.4-.9-.9-.9h-2.4c-.5 0-.9.4-.9.9v2.8c0 .5.4.9.9.9h2.4c.5 0 .9-.4.9-.9zM44.5 2.1h-39C3.2 2.1 1.3 4 1.3 6.4v37.3c0 2.3 1.9 4.2 4.2 4.2h39c2.3 0 4.2-1.9 4.2-4.2V6.4c0-2.4-1.9-4.3-4.2-4.3zm.2 41.5c0 .1-.1.2-.2.2h-39c-.1 0-.2-.1-.2-.2V6.4c0-.1.1-.2.2-.2h39c.1 0 .2.1.2.2v37.2z" style="fill:#fff"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), Q = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_legal.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><circle fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" cx="24.899" cy="25.077" r="21.917"/><path fill="#FFF" d="m23.434 30.974-.072-.936c-.216-1.944.432-4.068 2.232-6.228 1.619-1.908 2.52-3.312 2.52-4.932 0-1.835-1.152-3.06-3.42-3.096-1.295 0-2.735.432-3.635 1.116l-.864-2.268c1.188-.864 3.239-1.439 5.147-1.439 4.139 0 6.012 2.556 6.012 5.291 0 2.448-1.369 4.211-3.096 6.263-1.584 1.872-2.16 3.456-2.053 5.292l.037.936h-2.808zm-.792 5.039c0-1.332.9-2.268 2.16-2.268 1.261 0 2.124.936 2.124 2.268 0 1.26-.828 2.231-2.16 2.231-1.26 0-2.124-.972-2.124-2.231z"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml"
                })
            }), !0), R = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_feedback.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" d="M47.108 20.788c0 9.643-10.056 17.458-22.458 17.458-.936 0-1.858-.044-2.764-.131l-8.099 7.41-.018-9.461C6.865 33.087 2.191 27.362 2.191 20.788c0-9.642 10.055-17.458 22.458-17.458 12.404 0 22.459 7.816 22.459 17.458z"/><g fill="#FFF"><path d="M17.038 29.058c0-1.08.75-1.859 1.77-1.859 1.08 0 1.77.779 1.77 1.859 0 1.051-.69 1.86-1.77 1.86-1.05 0-1.77-.81-1.77-1.86zm.75-4.29-.42-14.399h2.88l-.42 14.399h-2.04zM26.488 24.858l-.061-.78c-.18-1.62.36-3.39 1.86-5.19 1.351-1.59 2.101-2.76 2.101-4.11 0-1.53-.961-2.55-2.851-2.58-1.08 0-2.28.36-3.03.93l-.72-1.89c.99-.72 2.7-1.2 4.29-1.2 3.449 0 5.01 2.13 5.01 4.41 0 2.04-1.141 3.51-2.58 5.22-1.32 1.56-1.8 2.88-1.71 4.41l.03.78h-2.339zm-.66 4.2c0-1.109.75-1.89 1.8-1.89s1.771.78 1.771 1.89c0 1.051-.69 1.86-1.801 1.86-1.049 0-1.77-.81-1.77-1.86z"/></g></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), D = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_hand.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><path fill="none" stroke="#FFF" stroke-width="1.5" stroke-miterlimit="10" d="m16.03 32.9 10.03 13.3V49h7.4s1.32-2.63 3-2.63c1.25 0 3.28 2.62 3.28 2.62h2.35s-.1-4.1 0-5.6c0-2.15 4.3-4.5 4.3-6.56V30.8c0-.7.44-4.3-1.4-4.85-3.4-1.02-2.5 3.05-3.4 3.05-1.25 0-.25-4.45-3.76-4.45C35.1 24.55 36.2 29 35 29c-.7 0 .4-5-3.43-5-2.8 0-1.85 5.03-2.84 5.03-1.2 0-.96-15.7-5.9-15-6.12.86 2.73 18.67 1.2 18.85-.7.08-.42-.34-3.4-3.16-1.98-1.9-6.32-.7-4.67 3.16z"/><path fill="#FFF" d="M39.24 43.1c-.6 0-1.1-.6-1.1-1.35V34.1c0-.75.5-1.36 1.1-1.36.6 0 1.1.6 1.1 1.35v7.6c0 .74-.5 1.34-1.1 1.34zm-4.08 0c-.6 0-1.1-.6-1.1-1.35V34.1c0-.75.5-1.36 1.1-1.36.6 0 1.1.6 1.1 1.35v7.6c0 .74-.5 1.34-1.1 1.34zm-3.9 0c-.6 0-1.1-.6-1.1-1.35V34.1c0-.75.5-1.36 1.1-1.36.6 0 1.1.6 1.1 1.35v7.6c0 .74-.5 1.34-1.1 1.34z"/><path fill="none" stroke="#FFF" stroke-width="3" stroke-miterlimit="10" d="M31.6 17.2h10.17m-38.27 0h10.17m.56-15.9 4.24 9.26M32.13 1l-4.23 9.26"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), k = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_restart.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" style="enable-background:new 0 0 50 50" xml:space="preserve"><path d="M25 1.6C12.2 1.6 1.7 12 1.6 24.8h3C4.7 13.6 13.8 4.6 25 4.6c11.3 0 20.4 9.2 20.4 20.4S36.3 45.4 25 45.4c-6.3 0-12-2.9-15.8-7.5l6.6-7.2H1.6v15.6l5.6-6.1c4.3 5 10.7 8.2 17.8 8.2 12.9 0 23.4-10.5 23.4-23.4S37.9 1.6 25 1.6z" style="fill:#fff"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), M = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_shop.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill="#FFF" d="M7.078 27.922h35.843v17.076H7.078zM47.441 18.844c0 2.401-3.079 3.865-4.442 3.865-1.364 0-4.449-3.222-4.449-3.222s-3.272 3.217-4.686 3.222c-1.426.004-4.745-3.222-4.745-3.222s-3.225 3.213-4.626 3.222c-1.425.008-4.745-3.222-4.745-3.222s-2.898 3.188-4.214 3.222c-1.413.036-4.686-3.222-4.686-3.222s-3.228 3.3-4.626 3.222c-1.208-.068-3.664-1.406-3.664-3.865 0-3.572 8.582-11.424 8.582-11.424h27.526s8.775 7.823 8.775 11.424z"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), H = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_map.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><g clip-rule="evenodd"><path fill="none" d="M16.56 31.82c-.95-.84-1.7-1.63-2.6-2.25-3.14-2.23-5.63-1.54-7.05 2-1.7 4.3-3.3 8.68-5.1 13-.6 1.7-.2 2.3 1.6 2.3 4.2-.05 8.4 0 12.6 0 9.8 0 19.6 0 29.5-.02 3.73-.02 3.75-.08 2.3-3.66-1.5-3.8-3.05-7.5-4.63-11.2-1.87-4.4-4.42-5-8.04-1.9-.57.5-1 1.1-1.5 1.7.7.13 1.4.52 2.1.44 2.5-.3 3.9.77 4.6 3.14.4 1.4 1.05 2.7 1.56 4.03 1.14 3.08 1.1 3.25-2.2 3.28-8.36.1-16.7.06-25.1.06-1.75 0-3.53.06-5.3-.1-.56-.1-1.6-1-1.53-1.27.9-2.77 1.56-5.7 3.16-8 .8-1.17 3.4-1.07 5.8-1.7z"/><path fill-rule="evenodd" fill="#FFF" d="M27.98 2.5c1.38.34 2.52 1.3 3.75 2.02 8.02 4.64 9.7 15.25 3.25 21.9-2.55 2.64-5.66 4.75-8.45 7.17-1.2 1-2.2 1-3.38 0-2.45-2.1-5.1-4-7.46-6.2C7.6 20 9.6 8.1 19.5 3.6c.84-.4 1.64-1 2.6-1.2 1.9-.4 3.9-.5 5.8 0zm-3.22 23.83c5.18.05 9.58-4.3 9.62-9.5.05-5.22-4.23-9.53-9.5-9.57-5.3-.03-9.52 4.13-9.56 9.44-.03 5.26 4.2 9.6 9.44 9.63z"/><path fill-rule="evenodd" fill="#FFF" d="M16.56 31.82c-2.4.62-4.98.52-5.78 1.66-1.6 2.3-2.53 5.2-3.16 8-.2.85.97 1.2 1.55 1.25 1.75.2 3.53.12 5.3.12 8.36 0 16.72.04 25.1-.03 3.3-.03 3.32-.2 2.2-3.27-.53-1.35-1.1-2.6-1.6-4.03-.8-2.32-2.1-2.7-4.6-3.14-1.22-.2-1.4-.3-2.07-.48.5-.6.92-1.26 1.5-1.75 3.6-3.06 6.16-2.46 8.04 1.92 1.58 3.7 3.1 7.4 4.62 11.12 1.45 3.5 1.43 3.6-2.3 3.6H15.93c-4.18 0-8.37-.1-12.55 0-1.78 0-2.26-.6-1.57-2.3 1.8-4.3 3.4-8.7 5.1-13 1.5-3.6 4-4.2 7.1-2 .9.6 1.7 1.4 2.6 2.2z"/><path fill="none" d="M24.76 26.33c-5.23-.04-9.47-4.37-9.44-9.63.04-5.3 4.26-9.47 9.57-9.44 5.2.04 9.5 4.35 9.5 9.57-.1 5.2-4.5 9.55-9.7 9.5z"/></g></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0), T = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/icon_share.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" xml:space="preserve"><path fill="none" stroke="#FFF" stroke-width="4" stroke-miterlimit="10" d="M28.951 15.059H41.5v33.008H8.499V15.059h11.953"/><path fill="#FFF" d="M31.801 7.038 24.763 0l-7.038 7.038 2.1 2.099 2.852-2.852v25.278h4.172V6.284l2.852 2.853z"/></svg>',
                    width: 50,
                    height: 50,
                    mimetype: "svg+xml",
                    ignoreScaleCache: !0
                })
            }), !0);

            function L() {
                p || ((p = document.createElement("div")).style.cssText = "position:absolute;top:0px;left:0px;z-index:9999999999;background:rgba(0,0,0,.9);padding:10px;color:#FFFFFF", p.onclick = function () {
                    p.parentNode && p.parentNode.removeChild(p)
                })
            }

            XS.modulesToPreload.push((function () {
                window.Sidebar = function () {
                    var e = this, t = 510, i = 81, n = 84, r = XS.gui.scale.x;
                    e.downloadItems = [];
                    var o, a, s, c = 0, l = void 0, u = 0, h = !1, f = e.defaultIcon = v();
                    Container.call(e), e.icon = (o = XS.utils.composeButton(w(), "Menu"), a = XS.utils.composeButton(y(), "Close"), (s = new Container).addChild(o), s.addChild(a), Object.defineProperty(s, "hasFrame", {
                        set: function (e) {
                            o.visible = !e, a.visible = !!e
                        }
                    }), Object.defineProperty(s, "anchor", {
                        get: function () {
                            return {
                                set: function (e, t) {
                                    o.anchor.set(e, t), a.anchor.set(e, t)
                                }
                            }
                        }
                    }), s.hasFrame = !1, s.buttonMode = !0, s.interactive = !0, s.on("down", (function () {
                        "showing" === e.status ? e.hide() : "hidden" === e.status && e.show()
                    }), {freezeGroup: ENG_FRZ_GRP}), Object.defineProperty(s, "tint", {
                        get: function () {
                            return this.children[0].children[0].tint
                        }, set: function (e) {
                            this.children.forEach((function (t) {
                                t.children.forEach((function (t) {
                                    t.tint = e
                                }))
                            }))
                        }
                    }), s), e.status = "hidden", e.scale.set(XS.gui.scale.x, XS.gui.scale.y);
                    var A = new Graphics;
                    e.addChild(A), A.on("down", (function () {
                        h || 16 == ++u && (h = !0, XS.emit("spawndebugmenu"))
                    }), {freezeGroup: ENG_FRZ_GRP}), e.interactive = !0, A.beginFill(3355443), A.drawRect(0, 0, 200, 200);
                    var g = 1;
                    A.width = (t + XS.styles.margins.left) * g * r;
                    var p, L = new Sprite(m());
                    e.sounds = {
                        show: void 0,
                        hide: void 0
                    }, XS.gui.addChild(e.icon), L.x = -24, e.content = new ScrollContainer(500, 500), e.content.allowScrollX = !1, e.content.y = XS.styles.margins.top * g, e.addChild(e.content);
                    var O = 1;

                    function F() {
                        if (e.parent) {
                            var t = e.toLocal(new Point(0, XS.size.canvas.height));
                            A.height = t.y, L.height = XS.size.canvas.height
                        }
                    }

                    var X = -510 * (g = 1) * r;
                    e.show = function () {
                        if ("hidden" === e.status) {
                            e.status = "transitioning", XS.stageContainer.addChild(window.Sidebar), XS.stageContainer.addChild(L), F(), window.Sidebar.x = X, L.x = -24, window.Sidebar.content.content.y = 0, Tween.clear(stage), Tween.clear(L), Tween.clear(e.icon);
                            new Tween(window.Sidebar, {x: 0}, .3, void 0, ENG_FRZ_GRP), new Tween(stage, {x: 1 * (t * r + XS.styles.margins.left)}, .3, void 0, ENG_FRZ_GRP), new Tween(L, {x: 1 * (t * r + XS.styles.margins.left) - 24}, .3, void 0, ENG_FRZ_GRP), new Tween(XS.gui, {x: 1 * (t * r + XS.styles.margins.left)}, .3, void 0, ENG_FRZ_GRP), new Tween(e.icon, {alpha: 0}, .15, void 0, ENG_FRZ_GRP).call((function () {
                                e.icon.hasFrame = !0, new Tween(e.icon, {alpha: 1}, .15, void 0, ENG_FRZ_GRP)
                            })), e.sounds.show && e.sounds.show.play(), XS.emit("togglesidebar", {visible: !0}), XS.track.customEvent("sidebar_open", 1), XS.freeze(), XS.setTimeout((function () {
                                e.status = "showing"
                            }), 400, [], ENG_FRZ_GRP)
                        }
                    }, e.hide = function (t) {
                        "showing" === e.status && (c = 0, u = 0, e.status = "transitioning", Tween.clear(stage), Tween.clear(L), Tween.clear(e.icon), new Tween(window.Sidebar, {x: X}, .3, void 0, ENG_FRZ_GRP), new Tween(stage, {x: 0}, .3, void 0, ENG_FRZ_GRP).call((function () {
                            window.Sidebar.parent && window.Sidebar.parent.removeChild(window.Sidebar)
                        })), new Tween(L, {x: -24}, .3, void 0, ENG_FRZ_GRP), new Tween(XS.gui, {x: 0}, .3, void 0, ENG_FRZ_GRP), new Tween(e.icon, {x: XS.styles.margins.left ? (XS.styles.margins.left + 5) / .5 : 25}, .3, void 0, ENG_FRZ_GRP), new Tween(e.icon, {alpha: 0}, .15, void 0, ENG_FRZ_GRP).call((function () {
                            e.icon.hasFrame = !1, new Tween(e.icon, {alpha: 1}, .15, void 0, ENG_FRZ_GRP)
                        })), e.sounds.hide && e.sounds.hide.play(), XS.setTimeout((function () {
                            XS.unfreeze(), XS.emit("togglesidebar", {visible: !1}), e.status = "hidden", "function" == typeof t && t()
                        }), 400, [], ENG_FRZ_GRP))
                    };
                    var G = 0;

                    function z(t, i, n, r) {
                        return t.ratio = .5, t.x = i, t.y = n, t.resolution = 1, t.hitArea = new Rectangle(0, 0, 50, 50), void 0 !== r && (t.interactive = !0, t.buttonMode = !0, t.defaultCursor = "pointer", t.on("down", (function () {
                            e.content.callback = function () {
                                XS.navigate(r)
                            }
                        }), {freezeGroup: ENG_FRZ_GRP})), t
                    }

                    e.addMenuHeader = function (t) {
                        var i = new Container, r = new Graphics;
                        r.beginFill(2236962), r.drawRect(-100, -2, 610, 68), i.addChild(r), r.on("down", (function () {
                            h || (l != r ? (debugShadowPressCount = 0, c++, l = r, 8 == c && (h = !0, XS.emit("spawndebugmenu"))) : c = 0)
                        }), {freezeGroup: ENG_FRZ_GRP});
                        var o = 510 / (e.content.ratio / 1 || 1) - 22;
                        (t = new Text2(t, {
                            weight: XS.is.safari || XS.is.iOS ? 300 : 200,
                            size: 35,
                            fill: "#FFFFFF",
                            maxWidth: o
                        })).x = 22, t.y = 34 - .5 * t.height, window.headerText = t, i.addChild(t), i.y = G, e.content.addChild(i);
                        i.scrollHeight = 64, XS.is.usingCanvasRenderer, G += n
                    }, e.addMenuToggle = function (t, i, r, o, a) {
                        var s = new Container;
                        t.resolution = XS.devicePixelRatio, t.x = 15, t.y = 15, s.addChild(t);
                        var c = new Graphics;
                        s.addChild(c), c.lineStyle(1, 0, .2), c.moveTo(-100, 0), c.lineTo(510, 0), c.lineStyle(1, 16777215, .2), c.moveTo(-100, 1), c.lineTo(510, 1), c.y = 81, c.scale.set(1, 1 / e.scale.y), s.interactive = !0, s.buttonMode = !0, s.defaultCursor = "pointer", s.y = G;
                        var l = z(new Sprite(C()), 388, 10);
                        s.addChild(l);
                        var d = z(new Sprite(I()), 386, 8);
                        s.addChild(d);
                        var u = z(new Sprite(E()), 427, 12);
                        s.addChild(u);
                        var h = 510 / (e.content.ratio / 1 || 1) - 80 - 140, f = new Text2(i, {
                            weight: XS.is.safari || XS.is.iOS ? 300 : 200,
                            size: 35,
                            fill: "#ffffff",
                            maxWidth: h
                        });
                        s.addChild(f), f.x = 80, f.y = 40.5 - .5 * f.height;
                        var A = !0;

                        function g(e) {
                            (A = void 0 !== e ? e : !A) ? (new Tween(u, {x: 427}, .2, void 0, ENG_FRZ_GRP), new Tween(l, {alpha: 1}, .2, void 0, ENG_FRZ_GRP)) : (new Tween(u, {x: 389}, .2, void 0, ENG_FRZ_GRP), new Tween(l, {alpha: 0}, .2, void 0, ENG_FRZ_GRP))
                        }

                        return s.hitArea = new Rectangle(-100, 0, 610, 81), s.on("down", (function () {
                            e.content.callback = function () {
                                g(!A), o(A)
                            }
                        }), {freezeGroup: ENG_FRZ_GRP}), g(r), e.content.addChild(s), s.scrollHeight = n, G += n, s.toggle = g, s
                    }, e.hideIcon = function () {
                        e.icon.visible = !1, window.dirtyOnce = !0, e.emit("hideicon")
                    }, XS.can.showSidebar() || e.hideIcon(), e.showIcon = function () {
                        XS.can.showSidebar() && (e.icon.visible = !0, window.dirtyOnce = !0, e.emit("showicon"))
                    }, e.popIcon = function () {
                        e.icon.parent.addChild(e.icon)
                    }, e.addMenuItem = function (t, i, r) {
                        var o = new Container;
                        t.resolution = XS.devicePixelRatio, t.x = 15, t.y = 15, o.addChild(t);
                        var a = new Graphics;
                        o.addChild(a), a.lineStyle(1, 0, .2), a.moveTo(-100, 0), a.lineTo(510, 0), a.lineStyle(1, 16777215, .2), a.moveTo(-100, 1), a.lineTo(510, 1), a.y = 81, a.scale.set(1, 1 / e.scale.y), o.interactive = !0, o.buttonMode = !0, o.defaultCursor = "pointer", o.y = G, o.hitArea = new Rectangle(-100, 0, 610, 81);
                        var s = 510 / (e.content.ratio / 1 || 1) - 80, c = new Text2(i, {
                            weight: XS.is.safari || XS.is.iOS ? 300 : 200,
                            size: 35,
                            fill: "#ffffff",
                            maxWidth: s
                        });
                        return o.addChild(c), c.x = 80, c.y = 40.5 - .5 * c.height, e.content.addChild(o), o.scrollHeight = n, G += n, o.on("down", (function () {
                            e.content.callback = function () {
                                r && r()
                            }
                        }), {freezeGroup: ENG_FRZ_GRP}), o
                    }, e.addMenuItemAt = function (t, i, n, r) {
                        var o = e.addMenuItem(i, n, r);
                        return e.content.addChildAt(o, t), e.reAlignItems(), o
                    }, e.addMenuItemAfter = function (t, i, n, r) {
                        for (var o = e.addMenuItem(i, n, r), a = e.content.getChildren(), s = 0; s < a.length && a[s] != t; s++) ;
                        return e.content.addChildAt(o, s + 1), e.reAlignItems(), o
                    }, e.removeMenuItem = function (t) {
                        e.content.removeChild(t) && (G -= n)
                    }, e.reAlignItems = function () {
                        G = 0;
                        for (var t = e.content.getChildren(), i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.y = G, G += n.scrollHeight
                        }
                    }, e.addItem = function (t) {
                        var i, n = (t = t || {}).name || t.label, r = t.type, o = t.icon || f, a = t.label || "N/A",
                            s = t.value || !1, c = t.handler;

                        function l(t) {
                            "button" === r ? s = !0 : "toggle" === r && (s = t), "function" == typeof c ? c.call(i, s) : e.emit("toggle", n, s)
                        }

                        switch (r) {
                            case"header":
                                i = e.addMenuHeader(a);
                                break;
                            case"button":
                                i = e.addMenuItem(new Sprite(o), a, l);
                                break;
                            case"toggle":
                                i = e.addMenuToggle(new Sprite(o), a, s, l);
                                break;
                            default:
                                console.error("Invalid menu item options:", t)
                        }
                        return i
                    }, e.addSocialBar = function () {
                        // if (XS.can.showSidebarSocial()) {
                        //     var t = new Container;
                        //     t.addChild(z(new Sprite(S()), 20, 15, "http://XYYX.com")), t.addChild(z(new Sprite(b()), 220, 15, "--https--twitter.com/XYYXgames")), t.addChild(z(new Sprite(d()), 420, 15, Config.facebookPageUrl || "--https--www.facebook.com/XYYXgames")), t.y = G, e.content.addChild(t), t.scrollHeight = 82, G += 82
                        // }
                    }, e.settings = [], e.addSetting = function (t) {
                        e.settings.push(t)
                    }, e.addSettings = function () {
                        if (!Config.disableSidebarSettings && (XS.is.twitch && (XS.muteSound(!0), XS.muteMusic(!0)), XS.audio.muteSounds(XS.soundSettings.muteSound.get()), XS.audio.muteSounds(XS.soundSettings.muteSound.get()), (0 !== e.settings.length || !Host.supports.hideSidebarSoundButton || !Host.supports.hideSidebarMusicButton) && (e.addMenuHeader(Host.Localize.Translate("Settings")), Host.supports.hideSidebarSoundButton || (e.lastMenuItem = e.addMenuToggle(new Sprite(x()), Host.Localize.Translate("Sound Effects"), !XS.Sound.muted, (function (e) {
                            XS.audio.muteSounds(!e)
                        }))), XS.audio.muteMusics(XS.soundSettings.muteMusic.get()), !XS.audio.isMusicMuted() && XS.backgroundMusic && XS.backgroundMusic.play(0, !0), Host.supports.hideSidebarMusicButton || (e.lastMenuItem = e.addMenuToggle(new Sprite(B(), 1), Host.Localize.Translate("Music"), !XS.Music.muted, (function (e) {
                            XS.audio.muteMusics(!e)
                        }))), e.settings.length > 0))) for (var t = 0; t < e.settings.length; t++) {
                            var i = e.settings[t];
                            e.lastMenuItem = e.addMenuToggle(i.image, i.text, i.state, i.callback)
                        }
                    }, e.addLegal = function () {
                        var t, i;
                        Host.supports.showSidebarLegal && (e.addMenuHeader(Host.Localize.Translate("Legal Information")), XS.is.samsung ? (t = "--https--XYYX.com/legal/samsung/#TermsofService", i = "--https--XYYX.com/legal/samsung/#PrivacyPolicy") : (t = "--https--XYYX.com/legal/#TermsofService", i = "--https--XYYX.com/legal/#PrivacyPolicy"), e.addMenuItem(new Sprite(P()), Host.Localize.Translate("Terms & Conditions"), (function () {
                            XS.navigate(t)
                        })), e.lastMenuItem = Sidebar.addMenuItem(new Sprite(Q()), Host.Localize.Translate("Privacy Policy"), (function () {
                            XS.navigate(i)
                        })))
                    }, e.addMore = function () {
                        if (XS.can.showSidebarMore()) {
                            // if (XS.is.snapchat) return Sidebar.addMenuHeader(Host.Localize.Translate("More")), Sidebar.addMenuItem(new Sprite(Q()), Host.Localize.Translate("Privacy Policy"), (function () {
                            //     sc.presentPrivacyPolicy()
                            // })), void Sidebar.addMenuItem(new Sprite(P()), Host.Localize.Translate("Terms of Service"), (function () {
                            //     sc.presentTermsOfService()
                            // }));
                            // Sidebar.addMenuHeader(Host.Localize.Translate("More")),
                            // XS.is.lgtv || Sidebar.addMenuItem(new Sprite(S()), Host.Localize.Translate("XYYX Games"), (function () {
                            //     XS.is.samsung ? XS.navigate("--https--play.XYYX.com") : XS.navigate("--https--XYYX.com")
                            // })),
                            // XS.is.samsungGameLauncher || Sidebar.addMenuItem(new Sprite(R()), Host.Localize.Translate("Send Feedback"), (function () {
                            //     XS.navigate("--https--XYYX.com/support/?platform=" + window.__XYYX.getChannel() + "&game=" + Config.id)
                            // })),
                            // window.__XYYX && window.__XYYX.consent && Sidebar.addMenuItem(new Sprite(D()), Host.Localize.Translate("Manage Consent"), window.__XYYX.consent.show), e.lastMenuItem = Sidebar.addMenuItem(new Sprite(P()), Host.Localize.Translate("Credits"), (function () {
                            //     XS.navigate("--https--XYYX.com/credits/" + Config.id + ".html")
                            // }))
                        }
                    }, e.addDownloadItem = function (t, i, n) {
                        e.downloadItems.push({image: t, text: i, callback: n})
                    }, e.addRestartItem = function (t, i) {
                        var n = i || Host.Localize.Translate("Restart Level", {}, "Level in this context is a level in a game");
                        e.restartItem = {
                            image: new Sprite(k()), text: n, callback: function () {
                                e.hide(), XS.emit("restart"), t && t()
                            }
                        }
                    }, e.topItems = [], e.addTopItem = function (t, i, n) {
                        e.topItems.push({image: t, text: i, callback: n})
                    }, e.addNewItem = function (t, i) {
                        var n = i || Host.Localize.Translate("New Game", {}, "");
                        e.newItem = {
                            image: new Sprite(v()), text: n, callback: function () {
                                e.hide(), XS.emit("newgame"), t && t()
                            }
                        }
                    }, e.addShopItem = function (t, i) {
                        var n = i || Host.Localize.Translate("Shop");
                        e.shopItem = {
                            image: new Sprite(M()), text: n, callback: function () {
                                e.hide(), t && t()
                            }
                        }
                    }, e.addExitToMapItem = function (t, i) {
                        var n = i || Host.Localize.Translate("Exit to Map");
                        e.exitToMapItem = {
                            image: new Sprite(H()), text: n, callback: function () {
                                e.hide(), t && t()
                            }
                        }
                    }, e.addToturialRestartItem = function (t, i) {
                        var n = i || Host.Localize.Translate("Show Tutorial");
                        e.toturialRestartItem = {
                            image: new Sprite(Q()), text: n, callback: function () {
                                e.hide(), t && t()
                            }
                        }
                    }, e.addStandards = function () {
                        if (Sidebar.addMenuHeader(Config.shareTitle), e.newItem) {
                            var t = e.newItem;
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        if (e.restartItem) {
                            t = e.restartItem;
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        for (var i = 0; i < e.topItems.length; i++) {
                            t = e.topItems[i];
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        if (e.shopItem) {
                            t = e.shopItem;
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        if (e.exitToMapItem) {
                            t = e.exitToMapItem;
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        if (e.toturialRestartItem) {
                            t = e.toturialRestartItem;
                            e.lastItem = e.addMenuItem(t.image, t.text, t.callback)
                        }
                        if (!XS.is.twitch) {
                            var n = void 0;
                            XS.insertRemoveAdsButton = function (t, i, r) {
                                Host.Log("Sidebar: Inserting 'Remove Ads' button");
                                var o = e.content.getChildren(), a = 1;
                                e.restartItem && (a += 1), o.length > a ? n = Sidebar.addMenuItemAfter(o[a], t, i, r) : (Host.WrapperLog("Warning: Sidebar: Remove Ads menu item added to bottom of menu"), Sidebar.addMenuItem(t, i, r))
                            }, XS.removeAdsButton = function () {
                                n ? (Host.Log("Sidebar: Removing 'Remove Ads' button"), e.removeMenuItem(n), e.reAlignItems(), n = void 0) : Host.Log("Sidebar: No adsButton defined")
                            }, XS.is.facebookInstant || XS.is.spilGamesWrapper || (window.insertButton = function (t, i, n) {
                                if (!(t instanceof Sprite)) throw"Please update your code to use the new SVG icons: " + i;
                                return e.lastItem ? Sidebar.addMenuItemAfter(e.lastItem, t, i, n) : Sidebar.addMenuItem(t, i, n)
                            }), XS.can.showSidebarShare() && Sidebar.addMenuItem(new Sprite(T()),
                                // Host.Localize.Translate("Share {game_name}",
                                Host.Localize.Translate("More Games æ´å¤æ¸¸æ",
                                    {game_name: Config.shareTitle}), (function () {
                                window.shareDialogueCallback()
                            }))
                        }
                        if (e.downloadItems.length > 0) for (var r = 0; r < e.downloadItems.length; ++r) {
                            t = e.downloadItems[r];
                            Sidebar.addMenuItem(new Sprite(t.image), t.text, t.callback)
                        }
                        Sidebar.addSettings(), Sidebar.addLegal(), Sidebar.addMore(), Sidebar.addSocialBar(), Sidebar.buildDefaultQaDebugItems()
                    }, e.addAdsDebug = function () {
                        XS.ads && (Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Preload Interstitial", (function () {
                            XS.ads.preload("interstitial", (function (e) {
                            })), Sidebar.hide()
                        })), Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Show Interstitial", (function () {
                            XS.ads.show("interstitial", (function (e) {
                            })), Sidebar.hide()
                        })), Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Force Interstitial", (function () {
                            XS.ads.force("interstitial", (function (e) {
                            })), Sidebar.hide()
                        })), Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Preload Reward Ad", (function () {
                            XS.ads.preload("reward", (function (e) {
                            })), Sidebar.hide()
                        })), Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Show Reward Ad", (function () {
                            XS.ads.show("reward", (function (e) {
                            })), Sidebar.hide()
                        })), Sidebar.addMenuItem(new Sprite(v()), "XS Ads: Force Reward Ad", (function () {
                            XS.ads.force("reward", (function (e) {
                            })), Sidebar.hide()
                        })))
                    };
                    var j = [];
                    e.addQaDebugItem = function (e, t) {
                        "object" == typeof e ? j.push(e) : j.push({type: "button", label: e, handler: t})
                    }, e.addQaDebug = function () {
                        for (var t = 0; t < j.length; t++) e.addItem(j[t])
                    }, e.buildDefaultQaDebugItems = function () {
                        function t() {
                            "function" == typeof window.debugOutputData ? window.debugOutputData() : (console.warn("debugOutputData function not implemented in game. Trying standard XS.data.toString"), XS.data ? console.log(XS.data.toString()) : console.warn("Game doesn't use XS.data")), Sidebar.hide()
                        }

                        e.addQaDebugItem("Force Game Over", (function () {
                            "function" == typeof window.debugShowGameOver ? window.debugShowGameOver() : XS.is.facebookInstant ? (console.warn("debugShowGameOver function not implemented in game. Trying standards"), "function" == typeof window.Social.Instant.showGameOver ? window.Social.Instant.showGameOver() : "function" == typeof window.Social.Instant.onGameOver ? window.Social.Instant.onGameOver() : console.warn("No applicable standard functions found")) : console.warn("debugShowGameOver function not implemented in game."), Sidebar.hide()
                        })), e.addQaDebugItem("Force Retry Overlay", (function () {
                            "function" == typeof window.debugForceRetry ? window.debugForceRetry() : console.warn("debugForceRetry function not implemented in game."), Sidebar.hide()
                        })), e.addQaDebugItem("XS Data output elements", (function () {
                            t()
                        })), e.addQaDebugItem("XS Data reset to defaults", (function () {
                            "function" == typeof window.debugResetData ? (window.debugResetData(), t()) : (console.warn("debugResetData function not implemented in game. Trying standard XS.data.resetToDefaults"), XS.data ? (XS.data.resetToDefaults(), t()) : console.warn("Game doesn't use XS.data")), Sidebar.hide()
                        })), e.addQaDebugItem("Force Reload", (function () {
                            window.XYYXInterfaceCoreProxy && window.XYYXInterfaceCoreProxy.forceReload ? window.XYYXInterfaceCoreProxy.forceReload() : window.top.location.reload()
                        }));
                        var i = null, n = 0;
                        e.addQaDebugItem("Start rotating languages", (function () {
                            if (!i) {
                                var e = window.__XYYX.cohort().supportedLanguages.concat(["en"]);
                                i = setInterval((function () {
                                    Host.Localize.Load(e[++n % e.length])
                                }), 2e3)
                            }
                        })), e.addQaDebugItem("Stop rotating languages", (function () {
                            clearTimeout(i), i = null
                        }))
                    }, e.addBuildInfo = function () {
                        var t, i = window.__XYYX.cohort();
                        e.addMenuHeader("Game version: " + i.version), e.addMenuHeader("Engine version: " + window.__XYYX.XSEngineVersion), e.addMenuHeader("Engine branch: " + window.__XYYX.XSEngineBranch);
                        var n = window.__XYYX.fsxBuildId;
                        e.addMenuHeader("Fsx build id: " + n);
                        var r = new Date(null == i || null == (t = i.buildJson) ? void 0 : t.timeStamp);
                        e.addMenuHeader("Time: " + r.toDateString() + " " + r.toLocaleTimeString()), i.experiment && (e.addMenuHeader("------------------"), e.addMenuHeader("A/B: " + i.experiment.name), e.addMenuHeader("Cohort name: " + i.cohortName)), i.buildJson && e.addItem({
                            type: "button",
                            label: "_build.json",
                            handler: function () {
                                var e = JSON.stringify(i.buildJson, null, 2);
                                try {
                                    var t = window.open();
                                    t.document.open(), t.document.write("<html><body><pre>" + e + "</pre></body></html>"), t.document.close()
                                } catch (o) {
                                    var n = document.createElement("div"), r = document.createElement("pre");
                                    r.innerHTML = e, n.appendChild(r), document.body.appendChild(n), document.getElementById("gameCanvas").style.display = "none"
                                }
                            }
                        }), e.addMenuHeader("------------------");
                        for (var o = 0, a = Object.entries((null == i || null == (s = i.buildJson) ? void 0 : s.repos) || {}); o < a.length; o++) {
                            var s, c, l = a[o], d = l[0], u = l[1],
                                h = /game-/.test(d) ? "g" : /builder/.test(d) ? "b" : "x";
                            u.branch && e.addMenuHeader(h + ": " + u.branch), e.addMenuHeader(h + ": " + ((null == u || null == (c = u.hash) ? void 0 : c.slice(0, 8)) || u.version))
                        }
                        var f = XS.is.usingWebGLRenderer ? "WebGL" : XS.is.usingCanvasRenderer ? "Canvas" : "Unknown";
                        e.addMenuHeader("Renderer: " + f), e.addMenuHeader("Coords: New"), Host.GetMemoryUsage && Host.GetMemoryUsage((function (e) {
                            Host.Log("free memory: " + e.freememory), Host.Log("total memory: " + e.totalmemory)
                        }))
                    }, stage.on("down", (function () {
                        "showing" === e.status && e.hide()
                    }), {freezeGroup: ENG_FRZ_GRP}), XS.on("resize", (function () {
                        r = XS.gui.scale.x, e.scale.set(XS.gui.scale.x), O = 1 / e.scale.x, "hidden" === e.status ? (e.icon.x = XS.styles.margins.left ? (XS.styles.margins.left + 5) / .5 : 25, L.x = -24, stage.x = 0) : (L.x = (t * r + XS.styles.margins.left) * g - 24, stage.x = (t * r + XS.styles.margins.left) * g), e.icon.y = 25, XS.styles.margins.top > 0 && (e.icon.y = XS.styles.margins.top + 50), e.content.y = XS.styles.margins.top * g, e.content.x = XS.styles.margins.left * g, XS.styles.margins.top > 0 && (e.content.y = XS.styles.margins.top + 50), X = -(t * r + XS.styles.margins.left) * g, height != p && (p = height, L.width = 25, F()), A.width = (t * r + XS.styles.margins.left) * g * O, e.content.resize(2 * (t + XS.styles.margins.left) * g, 2 * (height - XS.styles.margins.top) - i)
                    }), {freezeGroup: ENG_FRZ_GRP})
                }, Sidebar.prototype = Object.create(Container.prototype), Sidebar.prototype.constructor = Sidebar, window.Sidebar = new Sidebar
            })), XS.qaAssertProviders = XS.qaAssertProviders || {}, XS.qaAssertProviders.sidebar = {
                display: "Sidebar Options",
                items: {
                    apiShow: {
                        display: function () {
                            return "Show through API"
                        }, scope: window, onRecord: function () {
                            Sidebar.show()
                        }, onReplay: function (e) {
                            Sidebar.show()
                        }
                    }
                }
            }, XS.on("spawndebugmenu", (function () {
                Sidebar.addMenuHeader(Host.Localize.Translate("Extra"));
                var e = XS.track.getDevelopmentFlag();
                Sidebar.addMenuToggle(new Sprite(S(), 1), Host.Localize.Translate("Development "), e, (function (t) {
                    XS.track.setDevelopmentFlag(!e)
                })), Sidebar.addMenuItem(new Sprite(v()), "XS: Show Debug", (function () {
                    L(), document.body.appendChild(p), Sidebar.hide()
                }))
            }), {freezeGroup: ENG_FRZ_GRP});
            var O = {};
            XS.on("debugOverlayCreateSource", (function (e) {
                L();
                var t = document.createElement("div"), i = document.createElement("h3");
                i.style.cssText = "padding:0px;margin:0px", i.innerHTML = e.source, t.style.cssText = "margin-bottom:5px", t.appendChild(i), O[e.source] = t, p.appendChild(t)
            }), {freezeGroup: ENG_FRZ_GRP}), XS.on("writeDebug", (function (e) {
                L();
                var t = O[e.source];
                if (t) {
                    var i = document.createElement("span");
                    i.style.cssText = "margin:0px;padding:0px;", i.innerHTML = (e.skipBreak || 1 == t.children.length ? "" : "<br/>") + e.message, t.appendChild(i), t.children.length > 26 && t.removeChild(t.children[1])
                } else console.warn("Unknown debug target", e)
            }), {freezeGroup: ENG_FRZ_GRP}), XS.modulesToPreload.push((function () {
                function e(e, t) {
                    Container.call(this);
                    var i = new Graphics;
                    i.beginFill(16777215, .9), this.addChild(i);
                    var n = new Text2(e, {weight: 400, size: 110, fill: "#000000", align: "center", maxWidth: 1950});
                    n.anchor.set(.5, 0), this.addChild(n), n.x = 1e3, n.y = 25;
                    var r = new Text2(t, {weight: 300, size: 80, fill: "#000000", align: "center", maxWidth: 1950});
                    r.anchor.set(.5, 0), this.addChild(r), r.x = 1e3, r.y = n.y + n.height + 20;
                    var o = r.y + r.height + 40;
                    i.drawRoundedRect(0, 0, 2e3, o, 35), this.setRatio = function (e) {
                        i.width = 2e3 * e, i.height = 400 * e
                    }
                }

                e.prototype = Object.create(Container.prototype), e.prototype.constructor = e;
                var t = null;
                window.Tutorial = new function () {
                    var i = this;
                    this.show = function (n, r, o, a, s) {
                        return t && i.hide(), (t = new e(a, s)).x = r - 1e3, t.y = o - 400 + 150, n.addChild(t), t.alpha = 0, new Tween(t, {
                            y: o - 400,
                            alpha: 1
                        }, .5, void 0, ENG_FRZ_GRP), t
                    }, this.hide = function () {
                        t && (new Tween(t, {y: t.y - 150, alpha: 0}, .5, void 0, ENG_FRZ_GRP).call((function () {
                            this.parent.removeChild(this)
                        })), t = void 0)
                    }, this.get = function () {
                        return t
                    }
                }
            })), XS.modulesToPreload.push((function () {
                var e = [];

                function t() {
                    return e.pop() || {}
                }

                function i(t) {
                    for (var i in t) delete t[i];
                    e.push(t)
                }

                function n(e) {
                    for (var t = 0; t < e.length; t++) i(e[t])
                }

                function r(e, t, i, n, r, o) {
                    var a = n - t, s = e - i, c = a * a + s * s;
                    if (0 != c) {
                        var l = a * e + s * t, d = -s * r + a * o;
                        return [(a * l - s * d) / c, (a * d + s * l) / c]
                    }
                }

                function o(e) {
                    var t = this, i = e.layerCount || 1, r = [], a = [];
                    t.layers = [];
                    for (var s = 0; s < i; s++) t.layers.push(new o.Layer);

                    function c(e) {
                        if (1 === e) for (var t = 0; t < r.length; t++) r[t].tick(e); else for (t = 0; t < r.length; t++) r[t].fractionalTick(e)
                    }

                    function l() {
                        for (var e = 0; e < r.length; e++) r[e].rollback()
                    }

                    function d() {
                        for (var e = 0; e < r.length; e++) r[e].commit()
                    }

                    function u(e, t) {
                        return !(!e.ignoreKeys || !e.ignoreKeys[t.key]) || !(!t.ignoreKeys || !t.ignoreKeys[e.key])
                    }

                    function h(e) {
                        for (var t = [], i = 0, n = r.length; i < n; i++) {
                            var o = r[i], s = o.layer;
                            if (!o.ignoreHulls) {
                                for (var c = 0, l = s.lines.length; c < l; c++) {
                                    (h = s.lines[c].intersectsCircle(o)) && t.push(h)
                                }
                                for (c = 0, l = s.curves.length; c < l; c++) {
                                    (h = s.curves[c].intersectsCircle(o)) && t.push(h)
                                }
                                for (c = 0, l = a.length; c < l; c++) {
                                    if (s === (d = a[c]).layer) (h = d.intersectsCircle(o)) && t.push(h)
                                }
                            }
                            for (c = i + 1; c < n; c++) {
                                var d, h;
                                if (s == (d = r[c]).layer && !u(o, d)) (h = d.intersectsCircle(o)) && t.push(h)
                            }
                        }
                        return t
                    }

                    t.getCircles = function () {
                        return r
                    }, t.addLine = function (e, i) {
                        var n = new o.Line(e);
                        return (i = i || t.layers[0]).addLine(n), n
                    }, t.removeLine = function (e) {
                        for (var i = 0; i < t.layers.length; i++) t.layers[i].removeLine(e)
                    }, t.addCurve = function (e, i) {
                        var n = new o.Curve(e);
                        return (i = i || t.layers[0]).addCurve(n), n
                    }, t.removeCurve = function (e) {
                        for (var i = 0; i < t.layers.length; i++) t.layers[i].removeCurve(e)
                    }, t.addCircle = function (e, i) {
                        e.layer = i || t.layers[0];
                        var n = new o.Circle(e);
                        return n.static ? a.push(n) : r.push(n), n
                    }, t.removeCircle = function (e) {
                        for (var t = e.static ? a : r, i = 0; i < t.length; i++) if (t[i] == e) return void t.splice(i, 1)
                    }, t.addHull = function (e, i) {
                        return e.simulation = t, e.layer = i || t.layers[0], new o.Hull(e)
                    }, t.removeHull = function (e) {
                        e.dispose()
                    }, t.step = function () {
                        !function e(t, i, o) {
                            if (!(i >= .25)) {
                                c(t);
                                var a = t, s = h(), u = s.length;
                                if (u) {
                                    for (var f = 0; f < 15; f++) {
                                        if (a /= 2, t += u ? -a : a, l(), o > 1 && t < .1) {
                                            c(t = .1);
                                            break
                                        }
                                        c(t), u = 0;
                                        for (var A = 0; A < s.length; A++) {
                                            switch ((g = s[A]).type) {
                                                case"circlecircle":
                                                    g.c1.intersectsCircle(g.c2) && u++;
                                                    break;
                                                case"curvecircle":
                                                    g.curve.intersectsCircle(g.circle) && u++;
                                                    break;
                                                case"linecircle":
                                                    g.line.intersectsCircle(g.circle) && u++
                                            }
                                        }
                                    }
                                    if (n(s), (s = h()).length, s.length) for (f = 0; f < s.length; f++) {
                                        var g;
                                        switch ((g = s[f]).type) {
                                            case"circlecircle":
                                                g.c1.bounceCircle(g.c2);
                                                break;
                                            case"curvecircle":
                                                g.circle.dirty || (g.circle.dirty = !0, g.curve.bounceCircle(g.circle));
                                                break;
                                            case"linecircle":
                                                g.circle.dirty || (g.circle.dirty = !0, g.line.bounceCircle(g.circle))
                                        }
                                    }
                                    n(s);
                                    for (f = 0; f < r.length; f++) r[f].dirty = !1;
                                    d(), e(.25 - i - t, i + t, o + 1)
                                }
                            }
                        }(.25, 0, 0), function () {
                            for (var e = 0; e < r.length; e++) {
                                var t = r[e], i = t.layer;
                                if (!t.ignoreHulls) {
                                    for (var n = 0; n < i.curves.length; n++) i.curves[n].pushbackCircle(t);
                                    for (var o = 0; o < i.lines.length; o++) i.lines[o].pushbackCircle(t);
                                    for (n = 0; n < a.length; n++) {
                                        var s = a[n];
                                        i == s.layer && s.pushbackCircle(t)
                                    }
                                }
                                for (var c = e + 1; c < r.length; c++) i != r[c].layer || u(t, r[c]) || r[c].pushbackCircle(t)
                            }
                        }(), d()
                    }
                }

                o.Layer = function () {
                    var e = this;
                    e.lines = [], e.curves = [], e.addLine = function (t) {
                        return e.lines.push(t), t
                    }, e.addCurve = function (t) {
                        return e.curves.push(t), t
                    }, e.removeLine = function (t) {
                        for (var i = 0; i < e.lines.length; i++) if (e.lines[i] == t) return e.lines.splice(i, 1), !0;
                        return !1
                    }, e.removeCurve = function (t) {
                        for (var i = 0; i < e.curves.length; i++) if (e.curves[i] == t) return e.curves.splice(i, 1), !0;
                        return !1
                    }
                }, o.Circle = function (e) {
                    var i = this;
                    i.radius = void 0 !== e.radius ? e.radius : 50, i.x = e.x || 0, i.y = e.y || 0, i.vectorY = e.vectorY || 0, i.vectorX = e.vectorX || 0, i.mass = void 0 !== e.mass ? e.mass : e.static ? 99999999 : 5, i.drag = void 0 === e.drag ? .99 : e.drag, i.static = e.static || !1, i.collisionMultiplier = void 0 !== e.collisionMultiplier ? e.collisionMultiplier : .86, i.layer = e.layer, i.callback = e.callback, i.isDeactivated = !1 === e.interactive, i.modifierX = e.modifierX || 0, i.modifierY = void 0 !== e.modifierY ? e.modifierY : i.mass, i.ignoreHulls = e.ignoreHulls, i.staticBounce = e.staticBounce, i.lineIntersectionCallback = e.lineIntersectionCallback, i.dirty = !1;
                    var n = i.vectorX, r = i.vectorY, o = i.x, a = i.y;
                    i.tick = function (e) {
                        i.isDeactivated || (i.vectorY = i.vectorY * i.drag + i.modifierY, i.y += i.vectorY, i.vectorX = i.vectorX * i.drag + i.modifierX, i.x += i.vectorX)
                    }, i.commit = function () {
                        o = i.x, a = i.y, r = i.vectorY, n = i.vectorX
                    }, i.fractionalTick = function (e) {
                        if (!i.isDeactivated) {
                            var t = i.vectorY, o = i.vectorX;
                            if (1 === i.drag) i.vectorY = t + e * i.modifierY, i.vectorX = o + e * i.modifierX; else {
                                var a = Math.pow(i.drag, e);
                                i.vectorY = t * a + (a - 1) / (i.drag - 1) * i.modifierY, i.vectorX = o * a + (a - 1) / (i.drag - 1) * i.modifierX
                            }
                            i.y += i.vectorY - t + r * e, i.x += i.vectorX - o + n * e
                        }
                    }, i.intersectsCircle = function (e) {
                        if (!i.isDeactivated && !e.isDeactivated) {
                            var n = i.x - e.x, r = i.y - e.y, o = i.radius + e.radius;
                            if (n * n + r * r < o * o) {
                                var a = t();
                                return a.type = "circlecircle", a.c1 = i, a.c2 = e, a
                            }
                        }
                    }, i.static || i.staticBounce ? i.bounceCircle = function (e) {
                        if (!i.isDeactivated && !e.isDeactivated) {
                            var t = e.x - i.x, n = e.y - i.y, r = Math.sqrt(t * t + n * n) || 1e-5, o = t / r,
                                a = n / r,
                                s = 2 * (o * i.vectorX + a * i.vectorY - (o * e.vectorX + a * e.vectorY)) / (i.mass + e.mass) * 2;
                            e.vectorX += o * s * i.mass * i.collisionMultiplier, e.vectorY += a * s * i.mass * i.collisionMultiplier, i.callback && i.callback(e, o * s * i.mass * i.collisionMultiplier, a * s * i.mass * i.collisionMultiplier)
                        }
                    } : i.bounceCircle = function (e) {
                        if (!i.isDeactivated && !e.isDeactivated) {
                            var t = e.x - i.x, n = e.y - i.y, r = Math.sqrt(t * t + n * n) || 1e-5, o = t / r,
                                a = n / r,
                                s = 2 * (o * i.vectorX + a * i.vectorY - (o * e.vectorX + a * e.vectorY)) / (i.mass + e.mass);
                            i.vectorX -= o * s * e.mass * e.collisionMultiplier, i.vectorY -= a * s * e.mass * e.collisionMultiplier, e.vectorX += o * s * i.mass * i.collisionMultiplier, e.vectorY += a * s * i.mass * i.collisionMultiplier, i.callback && i.callback(e, o * s * i.mass * i.collisionMultiplier, a * s * i.mass * i.collisionMultiplier)
                        }
                    }, i.static || i.ignoreHulls ? i.pushbackCircle = function (e, t) {
                        if (!i.isDeactivated && !e.isDeactivated) {
                            var n = e.x - i.x, r = e.y - i.y, o = n * n + r * r, a = i.radius + e.radius;
                            if (o < a * a) {
                                var s = Math.sqrt(o) || 1e-5, c = n / s, l = r / s,
                                    d = (i.radius + e.radius - s) / (e.mass + i.mass) * 2, u = a - s;
                                return e.x += c * u, e.y += l * u, t && (e.vectorX += c * d * u * t, e.vectorY += l * d * u * t), !0
                            }
                        }
                    } : i.pushbackCircle = function (e, t) {
                        if (!i.isDeactivated && !e.isDeactivated) {
                            var n = e.x - i.x, r = e.y - i.y, o = n * n + r * r, a = i.radius + e.radius;
                            if (o < a * a) {
                                var s = Math.sqrt(o) || 1e-5, c = n / s, l = r / s,
                                    d = (i.radius + e.radius - s) / (e.mass + i.mass), u = (a - s) / 2;
                                return i.x -= c * u, i.y -= l * u, i.vectorX -= c * d * e.mass, i.vectorY -= l * d * e.mass, e.x += c * u, e.y += l * u, t && (e.vectorX += c * d * i.mass * t, e.vectorY += l * d * i.mass * t), !0
                            }
                        }
                    }, i.rollback = function () {
                        i.isDeactivated || (i.vectorY = r, i.vectorX = n, i.x = o, i.y = a)
                    }
                }, o.Line = function (e) {
                    var i = this;
                    i.x1 = e.x1 || 0, i.y1 = e.y1 || 0, i.x2 = e.x2 || 0, i.y2 = e.y2 || 0, i.active = e.active || !1, i.callback = e.callback, i.refresh = function () {
                        i.xmin = Math.min(i.x1, i.x2), i.xmax = Math.max(i.x1, i.x2), i.ymin = Math.min(i.y1, i.y2), i.ymax = Math.max(i.y1, i.y2)
                    }, i.refresh(), i.intersectsCircle = function (e) {
                        var n = r(i.x1, i.y1, i.x2, i.y2, e.x, e.y);
                        if (n && n[0] >= i.xmin && n[0] <= i.xmax && n[1] >= i.ymin && n[1] <= i.ymax) {
                            var o = e.x - n[0], a = e.y - n[1];
                            if (o * o + a * a < e.radius * e.radius) {
                                var s = t();
                                return s.type = "linecircle", s.circle = e, s.line = i, s.closest = n, s
                            }
                        }
                    }, i.bounceCircle = function (e) {
                        if (!e.isDeactivated) {
                            var t = i.x2 - i.x1, n = i.y2 - i.y1, o = Math.sqrt(t * t + n * n) || 1e-5, a = -(n / o),
                                s = t / o, c = a * e.vectorX + s * e.vectorY;
                            if (e.vectorX -= 2 * c * a * e.collisionMultiplier, e.vectorY -= 2 * c * s * e.collisionMultiplier, i.active) {
                                var l = r(i.x1, i.y1, i.x2, i.y2, e.x, e.y),
                                    d = (t = e.x - l[0], n = e.y - l[1], Math.atan2(n, t));
                                e.vectorX += 20 * Math.cos(d), e.vectorY += 20 * Math.sin(d)
                            }
                            i.callback && (e.callback && e.callback(void 0, !0), i.callback(e)), e.lineIntersectionCallback && e.lineIntersectionCallback(i)
                        }
                    }, i.pushbackCircle = function (e, t) {
                        if (!e.isDeactivated) {
                            var n = r(i.x1, i.y1, i.x2, i.y2, e.x, e.y);
                            if (n && n[0] >= i.xmin && n[0] <= i.xmax && n[1] >= i.ymin && n[1] <= i.ymax) {
                                var o = e.x - n[0], a = e.y - n[1], s = Math.sqrt(o * o + a * a) || 1e-5;
                                if (0 != s && s < e.radius) {
                                    var c = o / s, l = a / s, d = e.radius - s;
                                    return e.x = n[0] + c * (e.radius + .01), e.y = n[1] + l * (e.radius + .01), t && (e.vectorX += c * d * t, e.vectorY += l * d * t), !0
                                }
                            }
                        }
                    }
                }, o.Curve = function (e) {
                    var i = this;
                    i.x = e.x || 0, i.y = e.y || 0, i.active = e.active || !1, i.callback = e.callback, i.radius = e.radius || 0, i.start = void 0 !== e.start ? e.start : -Math.PI, i.end = void 0 !== e.end ? e.end : Math.PI, i.intersectsCircle = function (e) {
                        if (!i.ignoreGhost || !e.isGhost) {
                            var n = e.x - i.x, r = e.y - i.y, o = (Math.sqrt(n * n + r * r) || 1e-5) - i.radius;
                            if (!(o > e.radius || o < -e.radius)) {
                                var a = Math.atan2(r, n);
                                if (i.end < i.start) {
                                    if (a < i.start && a > i.end) return
                                } else if (a < i.start || a > i.end) return;
                                var s = t();
                                return s.type = "curvecircle", s.curve = i, s.circle = e, s
                            }
                        }
                    }, i.bounceCircle = function (e) {
                        if (!i.ignoreGhost || !e.isGhost) {
                            var t = e.x - i.x, n = e.y - i.y, r = Math.sqrt(t * t + n * n) || 1e-5, o = t / r,
                                a = n / r, s = 2 * -(o * e.vectorX + a * e.vectorY);
                            e.vectorX += o * s * e.collisionMultiplier, e.vectorY += a * s * e.collisionMultiplier, i.active && (e.vectorX += 10 * o, e.vectorY += 10 * a, e.callback && e.callback(void 0, !0)), i.callback && i.callback(e)
                        }
                    }, i.pushbackCircle = function (e, t) {
                        if (!i.ignoreGhost || !e.isGhost) {
                            var n = e.x - i.x, r = e.y - i.y, o = Math.sqrt(n * n + r * r) || 1e-5, a = o - i.radius;
                            if (!(a < -e.radius || a > e.radius)) {
                                var s = Math.atan2(r, n);
                                if (i.end < i.start) {
                                    if (s < i.start && s > i.end) return
                                } else if (s < i.start || s > i.end) return;
                                var c = n / o, l = r / o, d = i.radius + (a < 0 ? -e.radius : e.radius),
                                    u = e.x - (i.x + c * d), h = e.y - (i.y + l * d);
                                return e.x = i.x + c * d, e.y = i.y + l * d, t && (e.vectorX -= u * t, e.vectorY -= h * t), !0
                            }
                        }
                    }
                }, o.Hull = function (e) {
                    var t = this;
                    t.closed = !1 !== e.closed, t.layer = e.layer;
                    var i = [];
                    t.add = function (e, t, n, r) {
                        i.push({node: e, inverse: t || !1, active: n || !1, callback: r})
                    };
                    var n = [];
                    t.close = function () {
                        for (var r, a, s, c, l, d, u, h, f, A, g, p = t.closed ? i.length : i.length - 1, v = 0; v < p; v++) {
                            var w = i[v], y = i[(v + 1) % i.length], m = w.node, C = y.node,
                                I = (r = m.x, a = m.y, s = m.radius * (w.inverse ? -1 : 1), c = C.x, l = C.y, d = C.radius * (y.inverse ? -1 : 1), u = void 0, h = void 0, f = void 0, A = void 0, g = void 0, u = c - r, h = l - a, f = Math.sqrt(u * u + h * h) || 1e-5, A = Math.atan2(h, u), g = Math.acos((s - d) / f), [[[r + s * Math.cos(A + g), a + s * Math.sin(A + g)], [c + d * Math.cos(A + g), l + d * Math.sin(A + g)]], [[r + s * Math.cos(A - g), a + s * Math.sin(A - g)], [c + d * Math.cos(A - g), l + d * Math.sin(A - g)]]]),
                                E = e.simulation.addLine({
                                    x1: I[1][0][0],
                                    y1: I[1][0][1],
                                    x2: I[1][1][0],
                                    y2: I[1][1][1],
                                    active: i[v].active,
                                    callback: i[v].callback
                                }, t.layer);
                            if (n.push(E), C instanceof o.Curve) {
                                var S = Math.atan2(C.y - I[1][1][1], C.x - I[1][1][0]) + Math.PI;
                                S > Math.PI && (S -= 2 * Math.PI), 0 != y.radius && (y.inverse ? C.end = S : C.start = S)
                            }
                            if (m instanceof o.Curve) {
                                var b = Math.atan2(m.y - I[1][0][1], m.x - I[1][0][0]) + Math.PI;
                                b > Math.PI && (b -= 2 * Math.PI), 0 != w.radius && (w.inverse ? m.start = b : m.end = b)
                            }
                        }
                    }, t.dispose = function () {
                        for (var r = 0; r < i.length; r++) {
                            var a = i[r].node;
                            a instanceof o.Curve ? e.simulation.removeCurve(a) : a instanceof o.Circle && e.simulation.removeCircle(a)
                        }
                        for (r = 0; r < n.length; r++) e.simulation.removeLine(n[r]);
                        t.layer = n = i = null
                    }
                }, o.CircleSwitch = o.Circle.expand((function (e) {
                    var t = this;
                    o.Circle.call(t, e), t.test = function (e) {
                        if (!t.ignoreGhost || !e.isGhost) {
                            var n = t.intersectsCircle(e);
                            return n ? (i(n), !0) : void 0
                        }
                    }
                })), o.LineSwitch = o.Line.expand((function (e) {
                    var t = this;
                    o.Line.call(t, e), t.test = function (e) {
                        if (!t.ignoreGhost || !e.isGhost) {
                            var n = t.intersectsCircle(e);
                            if (n) {
                                var r = (t.x2 - t.x1) * (e.y - n.closest[1]) + (t.y2 - t.y1) * (e.x - n.closest[0]) > 0;
                                return i(n), r
                            }
                        }
                    }
                })), window.Simulation = o
            })), XS.modulesToPreload.push((function () {
                var e = Container.expand((function (e) {
                    var t = e.width, i = e.height, n = e.image, r = e.offsets, o = e.letterWidths || {}, a = e.scale,
                        s = 0, c = void 0 !== e.spaceWidthMultiplier ? e.spaceWidthMultiplier : 1,
                        l = e.textAlign || "left", d = e.verticalAlign || "top", u = Container.call(this), h = [],
                        f = 0;

                    function A() {
                        var e = 0, t = 0;
                        "right" == l && (e = -s), "center" == l && (e = -s / 2), "bottom" == d && (t = -i), "center" == d && (t = -i / 2);
                        for (var n = 0; n < h.length; n++) h[n].x = e, h[n].y = t, e += h[n].letterWidth
                    }

                    Object.defineProperty(u, "tint", {
                        get: function () {
                            return f
                        }, set: function (e) {
                            f = e;
                            for (var t = 0; t < h.length; t++) h[t].tint = f
                        }
                    }), e.tint && (u.tint = e.tint), void 0 !== a && (u.scale.set(a), u.resolution = a), Object.defineProperty(u, "textAlign", {
                        get: function () {
                            return l
                        }, set: function (e) {
                            l = e, A()
                        }
                    }), Object.defineProperty(u, "verticalAlign", {
                        get: function () {
                            return d
                        }, set: function (e) {
                            d = e, A()
                        }
                    });
                    var g = [], p = {letterWidth: t * c};
                    u.getPixelWidth = function () {
                        return s * (a || 1)
                    }, u.text = "", u.setText = function (e) {
                        var a = e.toString();
                        if (a != u.text) {
                            u.text = a;
                            var c = a.split("");
                            s = 0;
                            for (var l = [], d = 0; d < c.length; d++) {
                                var v = c[d];
                                if (" " !== v && void 0 === r[v]) console.warn('Definition not defined for "' + v + '" defaulting to space'); else {
                                    if (" " === v) w = p; else {
                                        var w = h.shift();
                                        w && w != p || ((w = g.pop() || new Sheet(n, t, i)).tint = f, w.letterWidth = void 0 !== o[v] ? o[v] : t, u.addChild(w)), w.frame = r[v]
                                    }
                                    l.push(w), s += w.letterWidth
                                }
                            }
                            for (; h.length;) {
                                var y = h.pop();
                                y != p && (g.push(y), u.removeChild(y))
                            }
                            h = l, A()
                        }
                    }
                }));
                window.BitmapFont = e
            })), XS.modulesToPreload.push((function () {
                function e() {
                    var e = this, t = 0, i = void 0, n = void 0, r = void 0, o = void 0, a = !1;
                    e.force = function () {
                        !function () {
                            if (!i) {
                                i = document.createElement("div");
                                var e = {
                                    width: "100%",
                                    height: "100%",
                                    top: "0px",
                                    left: "0px",
                                    position: "absolute",
                                    backgroundColor: "#000",
                                    opacity: "0.7",
                                    zIndex: "102",
                                    display: "block"
                                };
                                for (prop in e) i.style[prop] = e[prop]
                            }
                            if (!n) {
                                n = document.createElement("div");
                                var t = {
                                    border: "10px solid rgba(255,255,255,.3)",
                                    borderTop: "10px solid #ffffff",
                                    borderRight: "10px solid #ffffff",
                                    borderRadius: "50%",
                                    width: "100px",
                                    height: "100px",
                                    position: "absolute",
                                    zIndex: 20,
                                    left: "50%",
                                    top: "50%",
                                    marginLeft: "-60px",
                                    marginTop: "-60px"
                                };
                                for (prop in t) n.style[prop] = t[prop]
                            }
                        }(), a || e.showSpinner(), document.body.appendChild(i);
                        var t = 0;
                        n.style.transform = "rotate(" + t + "deg)", clearInterval(r), r = setInterval((function () {
                            t += 4, n.style.transform = "rotate(" + t + "deg)"
                        }), 16)
                    }, e.show = function (i, n) {
                        a = i, 1 == ++t && (0 === n ? e.force() : o = setTimeout(e.force, n || 5))
                    }, e.hide = function () {
                        0 == --t && (clearTimeout(o), clearInterval(r), i && i.parentNode && i.parentNode.removeChild(i))
                    }, e.hideSpinner = function () {
                        n && n.parentNode && n.parentNode.removeChild(n), a = !0
                    }, e.showSpinner = function () {
                        i && i.appendChild(n), a = !1
                    }
                }

                window.LoadSpinner = e, XS.loadSpinner = new e
            })), XS.modulesToPreload.push((function () {
                if (XS.is.partnerWrapper) {
                    var e = !1;
                    XS.is.iOS && "object" == typeof webkit.messageHandlers.NativeBridge ? (Host.sendToHost = function (e) {
                        webkit.messageHandlers.NativeBridge.postMessage(e)
                    }, e = !0) : "object" == typeof NativeBridge && (Host.sendToHost = function (e) {
                        NativeBridge.postMessage(JSON.stringify(e))
                    }, e = !0), e && (Host.call = function (e, t, i) {
                        t._method = e, Host.sendToHost(t)
                    }, Config.ads = Config.ads || {}, Config.ads.web = Config.ads.web || {}, Config.ads.web.interstitial = Config.ads.web.interstitial || {}, Config.ads.web.interstitial.providers = Config.ads.web.interstitial.providers || {}, Config.ads.web.interstitial.providers["nativebridge-interstitial"] = {
                        timeout: 2500,
                        priority: 0,
                        config: {}
                    }, Config.ads.web.reward = Config.ads.web.reward || {}, Config.ads.web.reward.providers = Config.ads.web.reward.providers || {}, Config.ads.web.reward.providers["nativebridge-reward"] = {
                        timeout: 2500,
                        priority: 0,
                        config: {}
                    })
                }
            }));
            var F = "runtimedir/assets/golddiggericon.b4bdabb1.png", X = "runtimedir/assets/basketballicon.fd9519b6.png",
                G = "runtimedir/assets/hexicon.5ffba275.png", z = "runtimedir/assets/dragraceicon.cc685b31.png",
                j = "runtimedir/assets/caveicon.cc89865c.png";
            Host.bootstrapper.mnemonicMap[F] = "i/web/golddiggericon.png", Host.bootstrapper.mnemonicMap[X] = "i/web/basketballicon.png", Host.bootstrapper.mnemonicMap[G] = "i/web/hexicon.png", Host.bootstrapper.mnemonicMap[z] = "i/web/dragraceicon.png", Host.bootstrapper.mnemonicMap[j] = "i/web/caveicon.png", window.Config = {
                id: "spacebreaker",
                niceId: "spacebreaker",
                domain: "spacebreaker.XYYX.com",
                version: "1.1.0",
                stage: "live",
                facebookAppId: "293730788181865",
                facebookAppUrl: "--https--apps.facebook.com/spacebreakerXYYX",
                facebookPageUrl: "--https--www.facebook.com/spacebreakerXYYX/",
                facebookInstantGameID: "2077137145705092",
                useFacebookInstantRichGameplayFeatures: !0,
                backendPath: "--https--production-dot-XYYX-chatbot.appspot.com/spacebreaker",
                facebookInstantFillColor: "#b5cbd6",
                facebookInstantScoreOverlayTextColor: "#ffffff",
                facebookInstantScoreOverlayShadowColor: "#000000",
                facebookInstantBannerStyleOverwrite: {
                    style: {
                        backgroundSize: "auto 420px",
                        backgroundPosition: "center top"
                    }
                },
                facebookHighscoreProperty: "score",
                enableCrossPromotion: !0,
                facebookCrossPromotionGames: [[F, "578514565910482", !0], [X, "800772590062226", !1], [G, "226951481038868", !1], [z, "1182092508634251", !1], [j, "282513215569229", !1]],
                facebookInstantNamespace: "spcbrkrXYYXinstant",
                shareUrl: "--https--spacebreaker.XYYX.com/{{language_path}}",
                playTitle: Host.Localize.Translate("Play Space Breaker XYYX"),
                shareText: Host.Localize.Translate("I think you will like Space Breaker XYYX"),
                shareTitle: Host.Localize.Translate("Space Breaker XYYX"),
                shortTitle: Host.Localize.Translate("Space Breaker"),
                // buttonShareTitle: Host.Localize.Translate("Share Space Breaker XYYX", {}, "Button text for sharing Space Breaker XYYX"),
                buttonShareTitle: Host.Localize.Translate("More Games æ´å¤æ¸¸æ", {}, "Button text for sharing Space Breaker XYYX"),
                buttonShareDescription: Host.Localize.Translate("Invite your friends?"),
                iOSRemoveAdsProductIdentifier: "spacebreakerremoveads",
                androidRemoveAdsProductIdentifier: "spacebreakerremoveads",
                gameCenterEnabled: !1,
                feedbackURL: "--https--XYYX.com/support/",
                gaId: "UA-54081731-1",
                gaGameId: "UA-54081731-51",
                chromeAppEnabled: !1,
                pushNotificationText: Host.Localize.Translate("Your daily Space Breaker level is ready to play!", {}, "This is a push notification used on mobile phones to show that their daily level is ready"),
                twitterRelated: "XYYXgames,benjaminsen,brianmeidell",
                twitterHTML: '<div style="padding-right:10px"><a href="--https--twitter.com/share" class="twitter-share-button" data-url="{{shareUrl}}" data-text="{{TEXT}}" data-via="XYYXGames" data-hashtags="{{twitterHashTags}}" data-related="{{twitterRelated}}" target="_new"></a></div>',
                twitterMobileHTML: '<div><a href="--https--twitter.com/share" class="twitter-share-button" data-url="{{shareUrl}}" data-text="{{TEXT}}" data-via="XYYXGames" data-hashtags="{{twitterHashTags}}" data-related="{{twitterRelated}}" target="_new"></a></div><div style="margin-left:10px"><a class="twitter-follow-button" href="--https--twitter.com/XYYXGames"></a></div>',
                gplusHTML: '<div class="g-plusone" data-size="medium" data-href="{{shareUrl}}"></div>',
                remoteConfigVersion: "v2",
                plugins: "modal.js,scrollcontainer.js,sidebar.js,tutorial.js,simulation.js,bitmapfont.js",
                tagLine: "Shoot the Bricks and Survive! ",
                tagLineFree: "Shoot the Bricks and Survive! ",
                oneliner: "Jump into the spacecraft and start shooting at those walls of block! You're the only hope of the galaxy, Commander!",
                twitterDescription: "Jump into the spacecraft and start shooting at those walls of block! You're the only hope of the galaxy, Commander!",
                twitterTexts: [Host.Localize.Translate("Check out Space Breaker XYYX, no time limit and lot of fun!"), Host.Localize.Translate("Have you ever tried Space Breaker XYYX? Absolutely addictive!"), Host.Localize.Translate("You have not tried the new Space BreakerXYYX yet? Play for free!"), Host.Localize.Translate("Be careful! This game can be extremely addictive! Try it now!"), Host.Localize.Translate("Can you beat your friend's highscore in Space Breaker XYYX?")],
                twitterHashTags: "spacebreaker, XYYX, galaxy, spacemission, brickbreaker, classic, spacecraft, rocketgame, space, mobilegame, gaming",
                useXSAdsForWebInterstitials: !1,
                googleAdSiteId: "6879406107",
                googleAdSpilgamesId: "8131588652",
                fbInstantInterstitialIdAll: "2077137145705092_2142489625836510",
                facebookInstantPlacementId: "2077137145705092_2142490535836419",
                huaweiQuickAppInterstitialAdUnitId: "m259f50vaw",
                huaweiQuickAppRewardAdUnitId: "u0bs1snrdw",
                ads: {
                    yandex: {
                        interstitial: {
                            maxfrequency: 4e4,
                            forceFirstAd: !0,
                            providers: {"yandex-interstitial": {timeout: 500, priority: 1}}
                        }, reward: {forceFirstAd: !0, providers: {"yandex-reward": {timeout: 500, priority: 1}}}
                    },
                    "samsung-instant-play": {
                        interstitial: {
                            maxfrequency: 3e4,
                            forceFirstAd: !0,
                            providers: {
                                "samsung-instant-interstitial": {
                                    timeout: 500,
                                    priority: 1,
                                    placementId: "1b8b39584c6649fca20f8028bf3caa79"
                                }
                            }
                        },
                        reward: {
                            forceFirstAd: !0,
                            providers: {
                                "samsung-instant-reward": {
                                    timeout: 500,
                                    priority: 1,
                                    placementId: "1acef0df87c74128ad6ed2c49a3b4151"
                                }
                            }
                        }
                    },
                    web: {
                        interstitial: {
                            maxfrequency: 1e4,
                            forceFirstAd: !0,
                            providers: {
                                "huawei-quickapp-interstitial": {priority: 1},
                                "web-adsense-interstitial": {timeout: 500, priority: 2}
                            }
                        }
                    }
                },
                samsungGameLauncher: {icon: "--https--cdn.XYYX.com/2021/icons-center/128/spacebreaker.png"}
            }, function (e) {
                function t(e, i, n) {
                    if (i !== t.AD_TYPE_INTERSTITIAL && i !== t.AD_TYPE_REWARD) throw new Error(t.ERROR_INVALID_AD_TYPE);
                    this.platform = e, this.adType = i, this.config = n
                }

                t.AD_TYPE_INTERSTITIAL = "interstitial", t.AD_TYPE_REWARD = "reward", t.ERROR_INVALID_AD_TYPE = "BaseProvider: Invalid ad type. Please check BaseProvider.AD_TYPE_<type> for valid ones.", t.ERROR_MSG_NO_IMPL = "BaseProvider: implementation not defined", t.prototype._checkPlatform = function (e) {
                    throw new Error(t.ERROR_MSG_NO_IMPL)
                }, t.prototype._canPreload = function (e) {
                    throw new Error(t.ERROR_MSG_NO_IMPL)
                }, t.prototype._trackEvent = function (t, i, n, r) {
                    var o = this;

                    function a(t, i, n) {
                        e.XS.track.ad(o.adType, t, void 0, n)
                    }

                    function s(t, i, n) {
                        e.XS.track.ad(o.adType, t, i, void 0, n)
                    }

                    var c = {request: a, blocked: a, show: a, response: s, finish: s}, l = {provider: this.platform};
                    r = r || this._getAdId(this.adType), n = n || this._getAppId(this.adType), r && (l.advertisement_id = r + ":" + n || ""), c[t](t, i, l)
                }, t.prototype._init = function (e) {
                    throw new Error(t.ERROR_MSG_NO_IMPL)
                }, t.prototype._show = function (e) {
                    throw new Error(t.ERROR_MSG_NO_IMPL)
                }, t.prototype._pause = function () {
                    e.XS.muteAll(), e.XS.freeze()
                }, t.prototype._unPause = function () {
                    e.XS.unmuteAll(), e.XS.unfreeze()
                }, t.prototype._getAdId = function (e) {
                }, t.prototype._getAppId = function (e) {
                }, t.prototype.init = function (e) {
                    return !!this._checkPlatform(e) && (this._init(e), this._canPreload(e) && this.preload(), !0)
                }, t.prototype.name = function () {
                    return this._name || (this._name = this.platform + "-" + this.adType), this._name
                }, t.prototype.ready = function () {
                    throw new Error("BaseProvider: implementation not defined")
                }, t.prototype.show = function (e, t) {
                    if (!this.ready()) return t && t(!1), this._trackEvent("finish", "nofill"), void this.preload();
                    this.skipPauseOnShow || this._pause(), this._show(e, t)
                }, t.prototype.reject = function () {
                }, t.prototype.force = function (e, t) {
                    this.show(e, t)
                }, t.prototype.preload = function (e) {
                }, e.BaseProvider = t
            }(window);
            var U = "runtimedir/assets/XYYX-vertical.8ab73c6f.svg", N = "runtimedir/assets/XYYX-horizontal.a02bcf92.svg";
            Host.bootstrapper.mnemonicMap[U] = "i/g/s/XYYX-vertical.svg", Host.bootstrapper.mnemonicMap[N] = "i/g/s/XYYX-horizontal.svg", function (e) {
                if ((e = window).BaseProvider) {
                    var t, i, n = e.BaseProvider, r = 10 * Math.random() >> 0, o = !1, a = !1, s = function (e, t) {
                        var i, n = e;
                        this.show = function (e) {
                            (i = new c(t, n, n.adType)).Show(e)
                        }.bind(this), this.preload = function (e) {
                            e && e(!0)
                        }.bind(this), XS.on("resize", (function () {
                            i && i.onResize()
                        })), setTimeout((function () {
                            self.preload()
                        }), 1e4)
                    }, c = function (e, t, i) {
                        this.closeTime = 5, this.adType = i, this.config = t, this.callback = e, this.muted = !0, this.adContainer, this.Init()
                    };
                    c.prototype = Object.create(null), c.prototype.constructor = c, c.prototype.Init = function () {
                        height, width, this.view = document.createElement("div"), this.view.classList.add("ad-window"), this.footer = document.createElement("div"), this.footer.classList.add("ad-footer-base"), this.header = document.createElement("div"), this.header.classList.add("ad-header-base"), this.closeButton = document.createElement("button"), this.closeButton.classList.add("ad-close-button-base"), this.closeTimer(), this.playButton = document.createElement("button"), this.playButton.classList.add("ad-play-button-base"), this.playButton.textContent = "PLAY NOW", this.playButton.onclick = function () {
                            this.callback && this.callback(!0, this.config)
                        }.bind(this);
                        var e = document.createElement("div");
                        e.classList.add("ad-play-button-shine"), this.playButton.appendChild(e), this.XYYXLogo = document.createElement("img"), this.XYYXLogo.classList.add("ad-logo-base"), this.XYYXLogo.setAttribute("src", window.__resolvePath(U)), this.ad = document.createElement("img"), this.ad.setAttribute("rel", "preload"), this.ad.classList.add("ad-image-sm"), this.view.appendChild(this.header), this.view.appendChild(this.closeButton), this.view.appendChild(this.playButton), this.view.appendChild(this.XYYXLogo), this.view.appendChild(this.footer), this.view.appendChild(this.ad), this.onResize(), this.view.style.visibility = "hidden", document.body.appendChild(this.view)
                    }, c.prototype.Show = function (e) {
                        XS.muteAll(), XS.freeze(), this.view.style.visibility = "visible", this.muted = !1, XS.is.iOS && "video" === this.adType && this.SetAdAudio(), this.ad.muted = this.muted, XS.track.customEvent("house_ad_show", 1, {
                            gameid: this.config.data.gameid,
                            facebookid: this.config.data.facebookInstantId,
                            creative: this.config.portrait.path
                        }), e(!0)
                    }, c.prototype.Close = function () {
                        XS.unmuteAll(), XS.unfreeze(), this.view.remove(), XS.track.customEvent("house_ad_close", 1, {
                            gameid: this.config.data.gameid,
                            facebookid: this.config.data.facebookInstantId,
                            creative: this.config.portrait.path
                        }), this.callback && this.callback(!1, this.config)
                    }, c.prototype.closeTimer = function () {
                        this.closeTime > 0 ? (setTimeout(function () {
                            this.closeTimer()
                        }.bind(this), 1e3), this.closeButton.textContent = this.closeTime, this.closeTime--) : (this.closeButton.textContent = "X", this.closeButton.onclick = this.Close.bind(this))
                    }, c.prototype.calculateScreenSize = function (e) {
                        return e ? width > 727 && height > 1024 ? "-lg" : width > 359 && height > 639 ? "-md" : "-sm" : width > 1366 && height > 768 ? "-lg" : width > 962 && height > 601 ? "-md" : "-sm"
                    }, c.prototype.removeClasses = function (e, t, i) {
                        e.classList.remove(t + "-sm"), e.classList.remove(t + "-md"), e.classList.remove(t + "-lg"), e.classList.remove(i + "-sm"), e.classList.remove(i + "-md"), e.classList.remove(i + "-lg")
                    }, c.prototype.onResize = function () {
                        var e = height > width, t = this.calculateScreenSize(e);
                        this.view.style.width = width + "px", this.view.style.height = height + "px", this.removeClasses(this.closeButton, "ad-close-button-portrait", "ad-close-button-landscape"), e ? this.closeButton.classList.add("ad-close-button-portrait" + t) : this.closeButton.classList.add("ad-close-button-landscape" + t), this.header.style.width = width + "px", this.removeClasses(this.header, "ad-header-portrait", "ad-header-landscape"), e ? this.header.classList.add("ad-header-portrait" + t) : this.header.classList.add("ad-header-landscape" + t), this.footer.style.width = width + "px", this.removeClasses(this.footer, "ad-footer-portrait", "ad-footer-landscape"), e ? this.footer.classList.add("ad-footer-portrait" + t) : this.footer.classList.add("ad-footer-landscape" + t), this.removeClasses(this.playButton, "ad-portrait-play-button", "ad-landscape-play-button"), e ? this.playButton.classList.add("ad-portrait-play-button" + t) : this.playButton.classList.add("ad-landscape-play-button" + t);
                        var i = e ? U : N;
                        this.XYYXLogo.setAttribute("src", window.__resolvePath(i)), this.removeClasses(this.XYYXLogo, "ad-portrait-logo", "ad-landscape-logo"), e ? this.XYYXLogo.classList.add("ad-portrait-logo" + t) : this.XYYXLogo.classList.add("ad-landscape-logo" + t);
                        var n = e ? this.config.portrait.path : this.config.landscape.path;
                        n = a ? n : window.__resolvePath(n), this.ad.setAttribute("src", n);
                        var r = 2400 * (height - 45) / 874, o = 3260 * width / 1440;
                        this.ad.style.width = e ? width + "px" : r + "px", this.ad.style.height = e ? o + "px" : height - 90 + "px", this.ad.style.left = e ? "0px" : width / 2 - r / 2 + "px", this.ad.style.top = e ? height / 2 - o / 2 - 45 + "px" : "28px"
                    }, l.prototype = Object.create(n.prototype), l.prototype.constructor = l, l.prototype.skipPauseOnShow = !0, l.prototype._init = function (e) {
                        return a = !1, (!XS.is.iOS || !XS.is.facebookInstant) && (!XS.is.slow && (i = this.validateAdsDate(e), this.createInstanceFromRemote(), !0))
                    }, l.prototype._getAdId = function () {
                        return null
                    }, l.prototype._getAppId = function () {
                        return null
                    }, l.prototype._canPreload = function () {
                        return !1
                    }, l.prototype._checkPlatform = function (e) {
                        if (!e) return !1;
                        if (!e.priority || !e.config) return !1;
                        for (var t in e.config) {
                            var i = e.config[t];
                            if (!i.hasOwnProperty("chance")) return !1;
                            if (!i.hasOwnProperty("portrait")) return !1;
                            if (!i.hasOwnProperty("landscape")) return !1;
                            if (!i.hasOwnProperty("data")) return !1;
                            if (!i.data.hasOwnProperty("gameid") && !i.data.hasOwnProperty("huaweiquickapp")) return !1;
                            if (!i.data.hasOwnProperty("facebookInstantId") && !i.data.hasOwnProperty("huaweiquickapp")) return !1;
                            if (i.hasOwnProperty("startDate") && !Date.parse(i.startDate)) return !1;
                            if (i.hasOwnProperty("endDate") && !Date.parse(i.endDate)) return !1
                        }
                        return !0
                    }, l.prototype._show = function (e, t) {
                        if (XS.is.slow) return t && optionalCallback(!1);
                        this._trackEvent("show"), this.getOrCreateInstance(i.config).show(t, !1)
                    }, l.prototype.preload = function (e, t) {
                        if (XS.is.slow) return t && t(!1);
                        this.getOrCreateInstance(i.config).preload(t)
                    }, l.prototype.forcePreload = function (e, t) {
                        if (XS.is.slow) return t && t(!1);
                        this.getOrCreateInstance(i.config).preload(t, !1)
                    }, l.prototype.force = function (e, t) {
                        if (XS.is.slow) return t && t(!1);
                        this.getOrCreateInstance(i.config).show(t, !0)
                    }, l.prototype.ready = function () {
                        return XS.is.facebookInstant && -1 == FBInstant.getSupportedAPIs().indexOf("switchGameAsync") ? (this._trackEvent("response", "nofill"), !1) : XS.is.slow ? (this._trackEvent("request", "nofill"), !1) : this.getOrCreateInstance(i.config) ? (this._trackEvent("request", "success"), !0) : (this._trackEvent("request", "nofill"), !1)
                    }, l.prototype.makeInstance = function () {
                        var e = [], n = this;
                        for (var a in n._trackEvent("request"), i.config) e.push(a);
                        var c = e[++r % e.length], l = i.config[c];
                        return new s(l, (function (e, i) {
                            function r() {
                                t = n.makeInstance()
                            }

                            if (e) if (XS.is.facebookInstant) {
                                var a = l.data.facebookInstantId;
                                if (a) {
                                    if (o) return;
                                    o = !0, window.Social.Instant.showLoadOverlay(), XS.track.customEvent("house_ad_click", 1, {
                                        gameid: l.data.gameid,
                                        facebookid: l.data.facebookInstantId,
                                        creative: i.path
                                    });
                                    var s = n.catchHandler("cross_promotion > switchGameAsync > unhandled"), c = {
                                        utm_source: "instant",
                                        utm_medium: "crosspromotion",
                                        utm_campaign: Config.id
                                    }, d = {origin: Config.id, type: "house-interstitial", creative: i.path};
                                    FBInstant.switchGameAsync(a, {
                                        utm: c,
                                        previous_player_id: FBInstant.player.getID(),
                                        __logEvent: {id: "load_from_house_ad", data: d}
                                    }).then((function () {
                                        return !0
                                    })).catch((function (e) {
                                        return !1
                                    })).then((function (e) {
                                        return e ? XS.track.customEvent("house_ad_redirect_success", 1, {
                                            gameid: l.data.gameid,
                                            facebookid: l.data.facebookInstantId,
                                            creative: i.path
                                        }) : XS.track.customEvent("house_ad_redirect_failure", 1, {
                                            gameid: l.data.gameid,
                                            facebookid: l.data.facebookInstantId,
                                            creative: i.path
                                        }), o = !1, window.Social.Instant.hideLoadOverlay(), e
                                    })).catch(s)
                                } else r()
                            } else XS.is.huawei ? l.data.huaweiquickapp && window.open(l.data.huaweiquickapp) : l.data.gameid && window.open("--https--" + l.data.gameid + ".XYYX.com/"); else r()
                        }))
                    }, l.prototype.getOrCreateInstance = function (e) {
                        return t || (t = this.makeInstance()), t
                    }, l.prototype.filterValidAds = function (e) {
                        var t = {}, i = 0, n = function (e) {
                            return !(!e.portrait || !e.landscape)
                        }, r = function (e) {
                            return n(e) && e.data && e.data.gameid && e.data.gameid != Config.gameid
                        }, o = XS.is.huawei ? function (e) {
                            return XS.is.huawei && (r(e) && e.data.huaweiquickapp || n(e) && e.data.huaweiquickapp)
                        } : XS.is.facebookInstant ? function (e) {
                            return XS.is.facebookInstant && e.facebookInstantGameID && r(e) && e.data.facebookInstantId
                        } : r;
                        for (var a in e) {
                            var s = e[a];
                            o(s) && (t[a] = s, i++)
                        }
                        return 0 == i ? null : t
                    }, l.prototype.createInstanceFromRemote = function () {
                        var e;
                        if (XS.is.facebookInstant ? e = "instant" : XS.is.web && (e = "web"), e) {
                            var t = e + "-" + window.Config.id;
                            XS.crosspromo.fetchRemoteConfig(t, function (e, t) {
                                !e && this._checkPlatform(t) && (i = this.validateAdsDate(t), a = !0)
                            }.bind(this))
                        }
                    }, l.prototype.validateAdsDate = function (e) {
                        var t = JSON.parse(JSON.stringify(e));
                        for (var i in e.config) {
                            var n = e.config[i];
                            if (n.startDate && n.endDate) {
                                var r = new Date(Date.parse(n.startDate)), o = new Date(Date.parse(n.endDate));
                                o.setDate(o.getDate() + 1), (Date.now() < r || Date.now() > o) && delete t.config[i]
                            }
                        }
                        return t
                    }, l.prototype.catchHandler = function (e) {
                        var t = window.__XYYX.createErrorHandler("hAd");
                        return function (i) {
                            t('Promise failure"' + e + '" > ' + i.message, i)
                        }
                    }, e.HouseBaseProvider = l
                }

                function l(e) {
                    n.call(this, "XYYX", e)
                }
            }(window), function (e) {
                if (e.BaseProvider) {
                    if (XS.is.crazyGames) {
                        var t, i = e.BaseProvider, n = null;
                        r.prototype = Object.create(i.prototype), r.prototype.constructor = r, r.prototype.skipPauseOnShow = !0, r.prototype._init = function (e) {
                            var t = this, i = document.getElementById("crazySdkScript");
                            i || ((i = document.createElement("script")).setAttribute("id", "crazySdkScript"), i.setAttribute("type", "text/javascript"), i.setAttribute("src", "--https--sdk.crazygames.com/crazygames-sdk-v1.js"), document.getElementsByTagName("head")[0].appendChild(i)), window.CrazyGames && window.CrazyGames.CrazySDK ? t.onSDKLoaded() : (XS.on("crazySdkLoaded", (function () {
                                t.onSDKLoaded()
                            })), i.onload = function () {
                                XS.emit("crazySdkLoaded")
                            })
                        }, r.prototype.onSDKLoaded = function () {
                            window.CrazyGames && window.CrazyGames.CrazySDK && !t && ((t = window.CrazyGames.CrazySDK.getInstance()).init(), window.crazysdk = t, this.addListeners())
                        }, r.prototype.addListeners = function () {
                            var e = this;
                            t.addEventListener("initialized", (function () {
                                t.initialized = !0
                            })), t.addEventListener("adStarted", (function () {
                                e._trackEvent("show"), XS.muteAll(), XS.freeze()
                            })), t.addEventListener("adFinished", (function (t) {
                                e._trackEvent("finish", "success"), e.onAdResolved(!0)
                            })), t.addEventListener("adError", (function (t) {
                                e._trackEvent("finish", "error"), e.onAdResolved(!1)
                            }))
                        }, r.prototype.onAdResolved = function (e) {
                            XS.unmuteAll(), XS.unfreeze(), n && n(e)
                        }, r.prototype._getAdId = function () {
                            return null
                        }, r.prototype._getAppId = function () {
                            return null
                        }, r.prototype._canPreload = function () {
                            return !1
                        }, r.prototype._checkPlatform = function () {
                            return !0
                        }, r.prototype._show = function (e, r) {
                            n = r;
                            var o = function (e) {
                                switch (e) {
                                    case i.AD_TYPE_INTERSTITIAL:
                                        return "midgame";
                                    case i.AD_TYPE_REWARD:
                                        return "rewarded";
                                    default:
                                        return
                                }
                            }(this.adType);
                            if (void 0 === o) throw new Error("CrazyGamesBaseProvider: Missing conversion for BaseProvider adtype");
                            t.requestAd(o)
                        }, r.prototype.ready = function () {
                            return t && t.initialized
                        }, r.prototype.reject = function () {
                            n = null
                        }, e.CrazyGamesBaseProvider = r
                    }
                } else console.error("Crazygames: Unable to inherit from window.BaseProvider, not defined.");

                function r(e) {
                    i.call(this, "crazygames", e)
                }
            }(window), function (e) {
                if (e.BaseProvider) {
                    var t = e.BaseProvider, i = !1, n = null, r = null, o = null, a = !1, s = null, c = !1, l = {
                        3078524176: 9664346533,
                        6905222938: 1539085135,
                        8645981334: 4404921623,
                        8289067739: 4548391859,
                        6687910134: 8742147105,
                        9831349735: 3477733206,
                        1463804937: 3235310187,
                        7647348124: 5725101521,
                        1511956590: 7429065430,
                        4196077731: 5788680703,
                        1661744930: 3091839955,
                        9944902462: 9226003469,
                        8540348735: 9465676615,
                        9511672440: 8323344707,
                        7116648941: 7912921796,
                        9810477030: 7010263033,
                        5781080938: 6599840129,
                        1907949320: 4192528001,
                        3463089052: 6791411817,
                        5383746593: 2879446332,
                        3609613151: 1204043211,
                        5267290853: 8890961545,
                        1601204168: 5478330141,
                        5428378892: 3074887454,
                        9167804042: 1566364667,
                        1074763396: 7169566203,
                        6005657456: 1761805783,
                        6581072258: 4407671492,
                        1559694722: 7577879877,
                        6305391737: 4951716535,
                        3418344645: 4611330402,
                        5689634745: 3638634865,
                        8838890658: 9448724119,
                        1810535265: 7940201324,
                        8092992494: 4543402867,
                        6682900564: 3094589823,
                        1136474154: 8135642444,
                        4127083129: 3230321196,
                        3566756403: 9034431771,
                        9165482691: 1781508157,
                        8532226134: 6627119656,
                        9257964653: 6105016100,
                        4687607673: 4791934430,
                        3050063345: 9604157856,
                        9609759920: 7721350107,
                        2066412442: 1012471525,
                        7711130568: 3298248732,
                        5304245228: 6822560779,
                        4056808137: 5509479103,
                        6672071330: 4196397436,
                        2152122536: 8291076189,
                        4822698373: 5314037980,
                        9547456458: 4000956314,
                        4185858062: 1374792977,
                        8260783143: 6842263144,
                        1420430092: 1985167065,
                        9484119302: 8699389853,
                        2633738716: 7386308188,
                        3660984936: 5529181474,
                        7640790291: 1570234097,
                        1873844328: 9672085398,
                        2961002817: 6073226516,
                        1526015108: 4760144840,
                        3704760038: 9257152425,
                        9152813246: 3447063179,
                        9997971842: 7944070757,
                        3917207338: 2133981500,
                        3718604937: 6977994511,
                        5362404538: 5664912848,
                        7517011737: 4216099801,
                        6794212012: 6630989088,
                        4237578931: 3478852769,
                        7259516105: 2903018138,
                        9508446909: 4351831173,
                        8793151713: 1849435696,
                        4901070532: 1589936468,
                        5195338130: 3038749507,
                        7348809119: 8507818163,
                        7871893264: 9276854795,
                        6680931602: 7963773121,
                        8260978605: 2165771095,
                        3868538934: 5732840388,
                        6225636036: 7748629630,
                        4899645641: 9536354023,
                        8166612510: 9412586165,
                        2402315798: 6650691459,
                        6142190935: 5337609782,
                        3605255281: 6435547967,
                        8471269857: 5317907415,
                        8924310391: 4419758718,
                        1912410415: 3106677048,
                        2384551260: 7194736492,
                        8990371880: 5122466294,
                        6592001260: 5881654821,
                        1651142765: 4004825742,
                        2765561693: 3809384626,
                        7430391555: 4024528111,
                        7859627468: 3255491485,
                        8436188448: 1942409811,
                        7627870781: 1183221286,
                        4111954147: 8870139610,
                        7978894035: 6786422825,
                        3238562380: 2711446444,
                        3217022605: 1398364773,
                        8209630496: 9629328144,
                        6388800833: 6243976273,
                        6738957149: 5095186760,
                        3982547231: 9085283107,
                        8846287731: 5473341156,
                        2155121367: 9852689422,
                        4592458349: 4160259485,
                        5374938192: 7772201439,
                        8288405339: 6459119768,
                        2443106993: 8316246476,
                        6879406107: 7003164807,
                        3297429215: 2691744076,
                        3587369568: 5690083135,
                        4481639214: 3832956427,
                        6701854007: 2276811107,
                        5791200697: 7226526082,
                        7269966843: 2519874750,
                        7925670440: 5913444415,
                        4065057380: 9963729433,
                        6238202936: 4600362748,
                        4942292965: 3287281071,
                        5570875049: 8650647761,
                        8416254215: 2847177812,
                        3188724532: 8223272357,
                        9841433446: 1206793086,
                        5196972230: 7337566092,
                        6341560802: 6024484421,
                        8220757253: 1378662407,
                        8199816817: 1750838124,
                        2759337197: 7580629748,
                        1075554580: 1075554580,
                        6159024522: 9065580732
                    };
                    d.prototype = Object.create(t.prototype), d.prototype.constructor = d, d.prototype.skipPauseOnShow = !0, d.prototype._onClose = function (e) {
                        var i = this;
                        console.debug("adsbygoogle", e);
                        var n = {notReady: "nofill", frequencyCapped: "throttled", viewed: "success"};
                        if (("notReady" === e.breakStatus || "frequencyCapped" === e.breakStatus) && i.adType === t.AD_TYPE_REWARD) return i._trackEvent("response", n[e.breakStatus]), void setTimeout((function () {
                            a = !1, i.preload()
                        }), 5e3);
                        var r = n[e.breakStatus] || "error",
                            o = "dismissed" === e.breakStatus ? XS.ads.ERROR_SKIPPED : null;
                        s && s("success" === r, o), s = null, i._trackEvent("finish", r), i.preload()
                    }, d.prototype._checkPlatform = function () {
                        return !0
                    }, d.prototype._canPreload = function () {
                        return !1
                    }, d.prototype._getAdId = function () {
                        return n
                    }, d.prototype._getAppId = function () {
                        return r
                    }, d.prototype.preload = function () {
                        var e = this;
                        window.adsbygoogle && (this.adType !== t.AD_TYPE_REWARD || o || a || (a = !0, console.debug("adsbygoogle: reward ad preloading"), this._trackEvent("request"), u({
                            type: "reward",
                            adBreakDone: this._onClose.bind(this),
                            beforeReward: function (t) {
                                console.debug("adsbygoogle: reward ad ready"), e._trackEvent("response", "success"), o = t, a = !1
                            },
                            adDismissed: function () {
                            },
                            adViewed: function () {
                            },
                            beforeAd: e._pause,
                            afterAd: e._unPause
                        })))
                    }, d.prototype._init = function (e) {
                        if (!this.isInstanceInitialized) {
                            this.isInstanceInitialized = !0, XS.once("adsbygoogle:script_loaded", function () {
                                c = !0, this.preload()
                            }.bind(this))
                        }
                        if (i) return !n || n == e.placementId || (console.debug("adsbygoogle: placementId mismatch"), !1);
                        var t;

                        function o() {
                            var e = XS.Music.muted && XS.Sound.muted ? "off" : "on";
                            e != t && u({sound: t = e})
                        }

                        i = !0, n = e.placementId, console.debug("adsbygoogle: placementId", n);
                        var a = document.createElement("script");
                        a.async = !0, a.setAttribute("data-ad-client", e.placementId), a.setAttribute("data-ad-frequency-hint", "30s"), Host.Web.GetQueryString("testads") && a.setAttribute("data-adbreak-test", "on");
                        var s = window.__XYYX.getGoogleAdSenseGameChannelId();
                        s && ((r = l[s]) || (r = s, XS.track.customEvent("adsbygoogle_no_mapping", 1, {channel_id: s})), console.debug("adsbygoogle: mapped channel " + s + " to " + r), a.setAttribute("data-ad-channel", r)), a.onreadystatechange = a.onload = function () {
                            console.debug("adsbygoogle: loading progress", a.readyState), a.readyState && "loaded" !== a.readyState && "complete" !== a.readyState || (console.debug("adsbygoogle: loaded sdk"), a.onreadystatechange = null, a.onload = null, o(), XS.on("mutemusic", o), XS.on("mutesound", o), u({
                                preloadAdBreaks: "on",
                                onReady: function () {
                                    XS.emit("adsbygoogle:script_loaded")
                                }
                            }))
                        }, console.debug("adsbygoogle: loading sdk"), a.src = "--https--pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", document.body.appendChild(a)
                    }, d.prototype._show = function (e, i) {
                        var n = this;
                        if (s) return i && i(!1), console.error("Already showing ad");
                        if (s = i, this._trackEvent("show"), n.adType === t.AD_TYPE_REWARD) {
                            if (!o) return i && i(!1), console.error("Missing reward ad instance");
                            console.debug("adsbygoogle: showing reward ad"), o(), o = null
                        } else u({
                            type: "next",
                            adBreakDone: n._onClose.bind(this),
                            beforeAd: n._pause,
                            afterAd: n._unPause
                        })
                    }, d.prototype.ready = function () {
                        return this.adType === t.AD_TYPE_REWARD ? o : c && window.adsbygoogle
                    }, e.AdsByGoogleBaseProvider = d
                } else console.error("AdsByGoogleBaseProvider: Unable to inherit from window.BaseProvider, not defined.");

                function d(e) {
                    t.call(this, "adsbygoogle", e)
                }

                function u(e) {
                    return window.adsbygoogle && "function" == typeof window.adsbygoogle.push ? (console.debug("adsbygoogle: called sdk", e), window.adsbygoogle.push(e)) : console.error("adsbygoogle: failed to call sdk", e)
                }
            }(window), function (e) {
                if (!e.BaseProvider) throw new Error("PrebidGoogleAdManagerBaseProvider: Unable to inherit from window.BaseProvider, not defined.");
                e.pbjs = e.pbjs || {}, e.pbjs.que = e.pbjs.que || [], e.googletag = e.googletag || {}, e.googletag.cmd = e.googletag.cmd || [];
                var t = e.BaseProvider, i = [], n = "--https--cdn.XYYX.com/fran/gpt_2021120601.js",
                    r = "--https--cdn.XYYX.com/fran/pubads_2021120601.js",
                    o = [[1024, 768], [768, 1024], [480, 320], [336, 280], [320, 480], [300, 600], [300, 250], [250, 250], [728, 90]],
                    a = [[1024, 768], [768, 1024], [640, 480], [640, 390], [640, 360], [480, 320], [400, 300], [400, 225], [390, 640], [320, 480]],
                    s = !1, c = !1, l = !1, d = !1, u = !1;

                function h(e, i) {
                    if (e !== h.DEMAND_TYPE_DISPLAY && e !== h.DEMAND_TYPE_VIDEO) throw new Error("invalid demand type");
                    i || console.error("adType is required"), t.call(this, "pbgam-" + e, i), this.skipPauseOnShow = !0, this.prebidTimeout = 1e3, this.isAdAvailable = !1, this.isInitialized = !1, this.isPreloadingAd = !1, this.onAdShownCallback = null, this.onPreloadCallback = null, this.isMuted = !0, this.config = null, this.defaultSizes = {}
                }

                h.prototype = Object.create(t.prototype), h.prototype.constructor = h, h.DEMAND_TYPE_DISPLAY = "display", h.DEMAND_TYPE_VIDEO = "video", h.prototype._checkPlatform = function () {
                    return !0
                }, h.prototype._canPreload = function () {
                    return !1
                }, h.prototype._getAdId = function () {
                    return this.adUnit.code
                }, h.prototype._getAppId = function () {
                    if (e.__XYYX && e.__XYYX.getGoogleAdSenseGameChannelId) return e.__XYYX.getGoogleAdSenseGameChannelId()
                }, h.prototype._expandAdUnitCode = function () {
                    var t = this, i = "XYYX";
                    t.adUnit && t.adUnit.code && e.__XYYX && e.__XYYX.getChannel && (i = e.__XYYX.getChannel());
                    var n = "XYYX-" + i, r = t.adUnit.code.split("/").pop();
                    t.adUnit.code = t.adUnit.code.replace(r, n + "-" + r)
                }, h.prototype.ready = function () {
                    return this.isInitialized
                }, h.prototype._init = function (t) {
                    var i = this;
                    return this.fetchRemoteConfig((function () {
                        if (i.config = t, !t.adUnit) return console.error(i.name() + ": adUnit missing"), !1;
                        if (i.adUnit = t.adUnit, "function" == typeof i.adUnit.code && (i.adUnit.code = i.adUnit.code()), i._expandAdUnitCode(), i.isInitialized) return !i.adUnit || i.adUnit.code === t.adUnit.code || (console.debug(i.name() + ": slotCode mismatch"), !1);
                        e.addEventListener("resize", (function () {
                            i.onAdError()
                        })), t.playableAds && t.playableAds instanceof Array && t.playableAds.length > 0 || (t.playableAds = null), t.customTargeting && Object.getOwnPropertyNames(t.customTargeting).length > 0 || (t.customTargeting = null), t.defaultSizes = t.defaultSizes || {}, i.defaultSizes.display = t.defaultSizes.display || o, i.defaultSizes.video = t.defaultSizes.video || a, i._filterAdUnitSizes();
                        try {
                            i.__init()
                        } catch (n) {
                            return void (i.isInitialized = !1)
                        }
                        i.isInitialized = !0
                    })), !0
                }, h.prototype.preload = function (e) {
                    var t = this;
                    if (!t.isInitialized) return console.error(t.name() + ": not initialized, call init()");
                    if (t.isAdAvailable) console.debug(t.name() + ": an ad is already available"); else {
                        if (t.isPreloadingAd) return console.debug(t.name() + ": already loading an ad"), void (e && e(!1));
                        t.isAdAvailable = !1, t.isPreloadingAd = !0, t.onPreloadCallback = e, setTimeout((function () {
                            t.isPreloadingAd && t.onAdError.bind(t)()
                        }), 4e3);
                        try {
                            t.__preload()
                        } catch (i) {
                            console.debug(t.name() + ": error preloading ad, " + i.message), t.onAdError()
                        }
                    }
                }, h.prototype._show = function (e, t) {
                    var i = this;
                    if (!i.isInitialized) return t && t(!1), console.error(i.name() + ": not initialized, call init()");
                    var n = function () {
                        if (!i.isAdAvailable) return t && t(!1), console.debug(i.name() + ": no ad available");
                        if (i.onAdShownCallback) return t && t(!1), console.error(i.name() + ": already showing ad");
                        i.onAdShownCallback = t, i.isMuted = i.isSoundMuted(), i._pause();
                        try {
                            i.__show()
                        } catch (e) {
                            console.debug(i.name() + ": error showing ad, " + e.message), i.onAdError()
                        }
                    };
                    return i.isAdAvailable ? n() : (i._pause(), XS && XS.loadSpinner && XS.loadSpinner.show(), i.preload((function () {
                        return XS && XS.loadSpinner && XS.loadSpinner.hide(), i._unPause(), setTimeout(n.bind(i), 0)
                    })))
                }, h.prototype.loadScript = function (e) {
                    var t = document.createElement("script");
                    return t.type = "text/javascript", t.async = !0, t.src = e, document.head.appendChild(t)
                }, h.prototype._isCrossDomainFrame = function () {
                    if (e.parent === e) return !1;
                    var t = new URL(e.document.referrer);
                    return t.protocol !== e.location.protocol || t.hostname !== e.location.hostname || t.port !== e.location.port
                }, h.prototype.getBrowserWidth = function () {
                    var t, i = this._isCrossDomainFrame() ? e : e.top || e, n = i.outerWidth || 9999;
                    return t = void 0 !== i.innerWidth ? i.innerWidth : void 0 !== i.document.documentElement && void 0 !== i.document.documentElement.clientWidth && 0 !== i.document.documentElement.clientWidth ? i.document.documentElement.clientWidth : i.document.body.clientWidth, Math.min(t, n)
                }, h.prototype.getBrowserHeight = function () {
                    var t, i = this._isCrossDomainFrame() ? e : e.top || e, n = i.outerHeight || 9999;
                    return t = void 0 !== i.innerHeight ? i.innerHeight : void 0 !== i.document.documentElement && void 0 !== i.document.documentElement.clientHeight && 0 !== i.document.documentElement.clientHeight ? i.document.documentElement.clientHeight : i.document.body.clientHeight, Math.min(t, n)
                }, h.prototype.fetchRemoteConfig = function (t) {
                    var n = function () {
                        for (var e = 0; e < i.length; e++) try {
                            i[e]()
                        } catch (t) {
                            console.error(t)
                        }
                        i.push = function (e) {
                            return e()
                        }
                    };
                    s || (fetch("--https--fran-cdn.XYYX.com/configs/ads/vendor/fran.json").then((function (e) {
                        if (!e.ok) throw Error(e.statusText);
                        return e.json()
                    })).then((function (t) {
                        console.debug("loaded remote vendor config", t), t && t.prebid && (e.Config.prebid = t.prebid), t && t.gpt && (e.Config.gpt = t.gpt), t && t.ima && (e.Config.ima = t.ima), n()
                    })).catch((function (e) {
                        console.error("unable to load remote vendor config", e), n()
                    })), s = !0), i.push(t)
                }, h.prototype.loadGPT = function () {
                    if (!d) {
                        if (e.googletag && e.googletag.apiReady) return;
                        var t = n, i = r;
                        e.Config && e.Config.gpt && (t = e.Config.gpt.url || n, i = e.Config.gpt.pubadsUrl || r), this.loadScript(t);
                        var o = this.loadScript(i);
                        return d = !0, o
                    }
                }, h.prototype.loadPrebid = function () {
                    if (!c) {
                        var t = "--https--cdn.XYYX.com/fran/prebid.7.22.0.js";
                        e.Config && e.Config.prebid && (t = e.Config.prebid.url);
                        var i = this.loadScript(t);
                        return c = !0, i
                    }
                }, h.prototype.loadIMA = function () {
                    if (!u) {
                        var t = "--https--imasdk.googleapis.com/js/sdkloader/ima3.js";
                        e.Config && e.Config.ima && e.Config.ima.url && (t = e.Config.ima.url);
                        var i = this.loadScript(t);
                        return u = !0, i
                    }
                }, h.prototype.initializePrebid = function () {
                    var t = this;
                    if (!e.Config.prebid) throw new Error("PrebidGoogleAdManagerBaseProvider: unable to initialize prebid, missing Config.prebid");
                    var i = e.Config.prebid.config || {}, n = e.Config.prebid.analytics;
                    t.prebidTimeout = i.bidderTimeout || 1e3, e.pbjs.que.push((function () {
                        l || (n && n.enabled && e.pbjs.que.push((function () {
                            pbjs.enableAnalytics({provider: n.provider, options: n.options})
                        })), e.pbjs.setConfig(i), e.pbjs.setConfig({bidderTimeout: t.prebidTimeout}), l = !0), e.pbjs.addAdUnits(t.adUnit), t.config && t.config.pageUrl && e.pbjs.setConfig({pageUrl: t.config.pageUrl})
                    }))
                }, h.prototype._filterAdUnitSizes = function (e, t) {
                    var i = this, n = i.adUnit, r = function (n, r, o) {
                        var a = e || i.getBrowserWidth(), s = t || i.getBrowserHeight();
                        "banner" === r && o && (a *= .9, s *= .9);
                        var c, l = [];
                        for (c = 0; c < n.length; c++) n[c][0] <= a && n[c][1] <= s && l.push(n[c]);
                        return l
                    }, o = n.mediaTypes || {}, a = n.ortb2Imp && n.ortb2Imp.instl && 1 === n.ortb2Imp.instl;
                    o.banner && (o.banner.sizes && o.banner.sizes instanceof Array && o.banner.sizes.length > 0 || (o.banner.sizes = i.defaultSizes.display), o.banner.sizes = r(o.banner.sizes, "banner", a)), o.video && (o.video.playerSize && o.video.playerSize instanceof Array && o.video.playerSize.length > 0 || (o.video.playerSize = i.defaultSizes.video, o.video.playerSize = r(o.video.playerSize, "video", a)[0]))
                }, h.prototype._getDeviceId = function () {
                    return e.Host && e.Host.idfa ? {
                        rdid: e.Host.idfa,
                        is_lat: "0",
                        idtype: "idfa"
                    } : e.Host && e.Host.Android && e.Host.Android.userId ? {
                        rdid: e.Host.Android.userId,
                        is_lat: this.hasCookiesConsent() ? "0" : "1",
                        idtype: "adid"
                    } : void 0
                }, h.prototype._getAdUnitSizes = function () {
                    var e = this.adUnit.mediaTypes || {}, t = {};
                    return e.banner && (t.display = e.banner.sizes), e.video && (t.video = e.video.playerSize), t
                }, h.prototype.generateUUID = function () {
                    if (e.crypto && e.crypto.randomUUID) return e.crypto.randomUUID();
                    var t = (new Date).getTime(),
                        i = "undefined" != typeof performance && performance.now && 1e3 * performance.now() || 0;
                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function (e) {
                        var n = 16 * Math.random();
                        return t > 0 ? (n = (t + n) % 16 | 0, t = Math.floor(t / 16)) : (n = (i + n) % 16 | 0, i = Math.floor(i / 16)), ("x" === e ? n : 3 & n | 8).toString(16)
                    }))
                }, h.prototype.isSoundMuted = function () {
                    return e.XS && e.XS.Sound && e.XS.Sound.muted
                }, h.prototype.getUserId = function (t) {
                    if (e.pbjs && e.pbjs.getUserIds) {
                        var i = e.pbjs.getUserIds();
                        if (i && Object.keys(i).length > 0) return i[t = t || Object.keys(i)[0]]
                    }
                }, h.prototype.trackEvent = function (t, i, n) {
                    var r = this, o = {provider: r.platform}, a = r._getAdId(), s = r._getAppId();
                    if (a && (o.advertisement_id = a + ":" + s || ""), n) for (var c in n) {
                        var l = n[c];
                        l instanceof Array && 1 === l.length ? o[c] = n[c][0] : o[c] = n[c]
                    }
                    e.XS.track.ad(r.adType, t, i, void 0, o)
                }, h.prototype.trackAdShown = function (e) {
                    console.debug(this.name() + ": showing ad"), this.trackEvent("show", void 0, e)
                }, h.prototype.trackAdClosed = function (e) {
                    console.debug(this.name() + ": ad closed"), this.trackEvent("finish", "success", e)
                }, h.prototype.trackAdRequest = function (e) {
                    console.debug(this.name() + ": ad requested"), this.trackEvent("request", void 0, e)
                }, h.prototype.trackAdAvailable = function (e) {
                    console.debug(this.name() + ": ad loaded successfully"), this.trackEvent("response", "success", e)
                }, h.prototype.trackAdUnavailable = function (e) {
                    console.debug(this.name() + ": unable to load ad"), this.trackEvent("response", "nofill", e)
                }, h.prototype.onAdError = function () {
                    var e = this;
                    e.isPreloadingAd = !1, e.isAdAvailable = !1;
                    try {
                        e.onPreloadCallback && e.onPreloadCallback(!1), e.onPreloadCallback = null;
                        var t = e._onAdError();
                        e.onAdShownCallback && e.onAdShownCallback(void 0 === t || t), e.onAdShownCallback = null
                    } finally {
                        e._unPause()
                    }
                }, h.prototype.hasCookiesConsent = function () {
                    return !(e && e.__XYYX && e.__XYYX.consent && e.__XYYX.consent.hasConsent) || e.__XYYX.consent.hasConsent(e.__XYYX.consent.COOKIES)
                }, h.prototype.hasPersonalisedAdsConsent = function () {
                    return !(e && e.__XYYX && e.__XYYX.consent && e.__XYYX.consent.hasConsent) || e.__XYYX.consent.hasConsent(e.__XYYX.consent.PERSONALISED_ADS)
                }, h.prototype.hasGoogleConsent = function () {
                    return !(e && e.__XYYX && e.__XYYX.consent && e.__XYYX.consent.hasVendorConsent) || e.__XYYX.consent.hasVendorConsent(e.__XYYX.consent.VENDORS.GOOGLE)
                }, h.prototype._onAdError = function () {
                }, h.prototype.__init = function () {
                }, h.prototype.__preload = function () {
                }, h.prototype.__show = function () {
                }, e.PrebidGoogleAdManagerBaseProvider = h
            }(window), function (e) {
                if (!e.BaseProvider || !e.PrebidGoogleAdManagerBaseProvider) throw new Error("PrebidGoogleAdManagerDisplayBaseProvider: Unable to inherit from window,BaseProvider or  PrebidGoogleAdManagerBaseProvider not defined.");
                e.pbjs = e.pbjs || {}, e.pbjs.que = e.pbjs.que || [], e.googletag = e.googletag || {}, e.googletag.cmd = e.googletag.cmd || [];
                var t = e.PrebidGoogleAdManagerBaseProvider;

                function i(e) {
                    if (!e) throw new Error("PrebidGoogleAdManagerDisplayBaseProvider: adType is required");
                    t.call(this, t.DEMAND_TYPE_DISPLAY, e), this.adSlot = null
                }

                i.prototype = Object.create(t.prototype), i.prototype.constructor = i, i.prototype._addAdSlotTargeting = function (e) {
                    if (e && "object" == typeof e && this.adSlot) for (var t in e) e.hasOwnProperty(t) && this.adSlot.setTargeting(t, e[t])
                }, i.prototype.setTargeting = function (e) {
                    var t = this;
                    t.adSlot && (t.config.customTargeting && t._addAdSlotTargeting(t.config.customTargeting), t.config.playableAds && t._addAdSlotTargeting({
                        xs_ads: 1,
                        xs_ad_url: t.config.playableAds[Math.floor(Math.random() * t.config.playableAds.length)]
                    }), t._addAdSlotTargeting({
                        xs_muted: t.isSoundMuted() ? "1" : "0",
                        app_id: t._getAppId()
                    }), t._addAdSlotTargeting(t._getDeviceId()), e && t._addAdSlotTargeting(e))
                }, i.prototype._onAdError = function () {
                    return this.adSlot && e.googletag.destroySlots([this.adSlot]), !0
                }, i.prototype.__init = function () {
                    var t = this;
                    t.loadGPT(), e.googletag.cmd.push((function () {
                        t.config.pageUrl && e.googletag.pubads().set("page_url", t.config.pageUrl), e.googletag.pubads().addEventListener("slotRenderEnded", (function (e) {
                            t.adSlot === e.slot && (t.isAdAvailable = !e.isEmpty, t.isPreloadingAd = !1, t.isAdAvailable ? t.trackAdAvailable(e.slot.getTargetingMap()) : (t.onPreloadCallback && t.onPreloadCallback(!1), t.onPreloadCallback = null, t.trackAdUnavailable(e.slot.getTargetingMap())))
                        })), e.googletag.pubads().enableSingleRequest(), e.googletag.enableServices()
                    })), t.___init()
                }, i.prototype.___init = function () {
                }, e.PrebidGoogleAdManagerDisplayBaseProvider = i
            }(window), function (e) {
                if (!e.BaseProvider || !e.PrebidGoogleAdManagerBaseProvider) throw new Error("PrebidGoogleAdManagerVideoBaseProvider: Unable to inherit from window,BaseProvider or  PrebidGoogleAdManagerBaseProvider not defined.");
                e.pbjs = e.pbjs || {}, e.pbjs.que = e.pbjs.que || [], e.googletag = e.googletag || {}, e.googletag.cmd = e.googletag.cmd || [];
                var t = e.PrebidGoogleAdManagerBaseProvider;

                function i(e) {
                    if (!e) throw new Error("PrebidGoogleAdManagerVideoBaseProvider: adType is required");
                    t.call(this, t.DEMAND_TYPE_VIDEO, e), this.adsLoader = null, this.adsManager = null, this.modal = null, this.videoElement = null, this.adContainerElement = null, this.playPauseElement = null, this.adContainer = null, this.isIMAReady = !1, this.isPlaying = !1
                }

                i.prototype = Object.create(t.prototype), i.prototype.constructor = i, i.prototype._onAdError = function () {
                    var e = this;
                    return e.adsManager && e.adsManager.destroy(), e.modal && e.modal.close(), e.playerWidth = e.adUnit.videoPlayer.width || Math.floor(e.getBrowserWidth()), e.playerHeight = e.adUnit.videoPlayer.height || Math.floor(e.getBrowserHeight()), e.videoElement && (e.videoElement.setAttribute("width", e.playerWidth + "px"), e.videoElement.setAttribute("height", e.playerHeight + "px")), !0
                }, i.prototype.initializeIMA = function () {
                    var t = this;
                    t.adContainer = new e.google.ima.AdDisplayContainer(t.adContainerElement, t.videoElement), t.adContainer.initialize(), e.google.ima.settings.setDisableCustomPlaybackForIOS10Plus(!0), t.getUserId() && e.google.ima.settings.setPpid(t.getUserId()), t.adsLoader = new e.google.ima.AdsLoader(t.adContainer);
                    var i = function (e) {
                        if (e && e.getError && e.getError().getErrorCode && 1009 === e.getError().getErrorCode()) return t.trackAdUnavailable(t.adsLoader.targetingParameters), t.isAdAvailable = !1, t.isPreloadingAd = !1, t.onPreloadCallback && t.onPreloadCallback(!1), void (t.onPreloadCallback = null);
                        console.error(t.name() + ": " + e && e.getError && e.getError().getMessage ? e.getError().getMessage() : "unknown error"), t.onAdError()
                    };
                    t.adsLoader.addEventListener(e.google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, (function (n) {
                        var r = new e.google.ima.AdsRenderingSettings;
                        r.restoreCustomPlaybackStateOnAdBreakComplete = !0, t.adsManager = n.getAdsManager(t.videoElement, r), t.adsManager.addEventListener(e.google.ima.AdErrorEvent.Type.AD_ERROR, i.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.ALL_ADS_COMPLETED, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.LOADED, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.COMPLETE, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.SKIPPED, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.STARTED, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.CLICK, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.PAUSED, t.onIMAEvent.bind(t)), t.adsManager.addEventListener(e.google.ima.AdEvent.Type.RESUMED, t.onIMAEvent.bind(t));
                        try {
                            t.adsManager.init(t.playerWidth, t.playerHeight, e.google.ima.ViewMode.NORMAL)
                        } catch (o) {
                            i.bind(t)(o)
                        }
                    }), !1), t.adsLoader.addEventListener(e.google.ima.AdErrorEvent.Type.AD_ERROR, i.bind(t), !1)
                }, i.prototype.onIMAEvent = function (t) {
                    var i = this, n = function (e) {
                        i.trackAdClosed(i.adsLoader.targetingParameters), i.isAdAvailable = !1, i._unPause(), e = BaseProvider.AD_TYPE_INTERSTITIAL === i.adType || e, i.onAdShownCallback && i.onAdShownCallback(e, e ? null : XS.ads.ERROR_SKIPPED), i.onAdShownCallback = null, i.isPlaying = !1, i.modal.close()
                    };
                    switch (t.type) {
                        case e.google.ima.AdEvent.Type.LOADED:
                            i.isAdAvailable = !0, i.isPreloadingAd = !1, i.trackAdAvailable(i.adsLoader.targetingParameters), i.onPreloadCallback && i.onPreloadCallback(!0), i.onPreloadCallback = null, i.adsLoader.__cad = t.getAd();
                            break;
                        case e.google.ima.AdEvent.Type.SKIPPED:
                            n(!1);
                            break;
                        case e.google.ima.AdEvent.Type.COMPLETE:
                            n(!0);
                            break;
                        case e.google.ima.AdEvent.Type.STARTED:
                        case e.google.ima.AdEvent.Type.RESUMED:
                            i.isPlaying = !0, i._updatePlayPauseSymbol();
                            break;
                        case e.google.ima.AdEvent.Type.PAUSED:
                            i.isPlaying = !1, i._updatePlayPauseSymbol();
                            break;
                        case e.google.ima.AdEvent.Type.CLICK:
                            i.adsManager && i.isPlaying && (i.isPlaying = !1, i.adsManager.pause(), i._updatePlayPauseSymbol())
                    }
                }, i.prototype.__init = function () {
                    var e = this;
                    e.adUnit.videoPlayer = e.adUnit.videoPlayer || {}, e.playerWidth = e.adUnit.videoPlayer.width || Math.floor(this.getBrowserWidth()), e.playerHeight = e.adUnit.videoPlayer.height || Math.floor(this.getBrowserHeight()), e.loadPrebid();
                    var t = e.loadIMA();
                    e.addDOMElements(), t.onreadystatechange = t.onload = function () {
                        t.readyState && "loaded" !== t.readyState && "complete" !== t.readyState || (t.onreadystatechange = null, t.onload = null, e.isIMAReady = !0, e.initializeIMA())
                    }, e.initializePrebid(), e.___init()
                }, i.prototype.___init = function () {
                }, i.prototype.addDOMElements = function () {
                    var e = this;
                    e.modal = new AdModal;
                    var t = "<div><video id='" + e.adUnit.code + "' ";
                    t += "width='" + e.playerWidth + "px' ", t += "height='" + e.playerHeight + "px' ", t += "playsinline></video></div>", e.videoElement = e.modal.addCreativeContent(t).firstChild, e.adContainerElement = e.modal.addCreativeContent("<div style='position: absolute; top:0; min-width: 100%; min-height: 100%;'></div>"), e.playPauseElement = e.modal.addCreativeContent("<button title='Play/Pause' style='position: absolute;left: 20px;bottom: 20px;height: 40px;width: 100px;font-weight: bold;font-size: 25px;opacity: 0.5;background-color: #fff;border-radius: 5px;border: 1px transparent solid;color: #000;cursor: pointer;line-height: 0;'>II</button>"), e.playPauseElement.onclick = function () {
                        e.adsManager && (e.isPlaying ? e.adsManager.pause() : e.adsManager.resume()), e.isPlaying = !e.isPlaying, e._updatePlayPauseSymbol()
                    }
                }, i.prototype._updatePlayPauseSymbol = function () {
                    var e = this;
                    e.isPlaying ? e.playPauseElement.textContent = "II" : e.playPauseElement.textContent = String.fromCharCode(9654)
                }, i.prototype._toUrlQueryParameters = function (e) {
                    var t = [];
                    for (var i in e) e.hasOwnProperty(i) && t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
                    return t.join("&")
                }, i.prototype._extractCustomParamsFromUrl = function (e) {
                    var t = {}, i = function (e) {
                        var t = {};
                        return e.replace(/([^=&]+)=([^&]*)/g, (function (e, i, n) {
                            var r = decodeURIComponent(n);
                            r && "undefined" !== r && (t[decodeURIComponent(i)] = decodeURIComponent(n))
                        })), t
                    }, n = e.split("?");
                    if (2 === n.length) {
                        var r = i(n[1]);
                        r.cust_params && (t = i(r.cust_params))
                    }
                    return t
                }, i.prototype.__preload = function () {
                    var t = this;
                    if (!t.isIMAReady) return console.debug(t.name() + ": unable to preload, ima sdk isn't ready yet"), t.isAdAvailable = !1, t.isPreloadingAd = !1, t.onPreloadCallback && t.onPreloadCallback(!1), void (t.onPreloadCallback = null);
                    var i = t.adUnit, n = t.generateUUID(), r = t.config.customTargeting || {};
                    r.app_id = t._getAppId(), r.xs_muted = t.isSoundMuted() ? "1" : "0", e.pbjs.que.push((function () {
                        var o = {
                            timeout: t.prebidTimeout, auctionId: n, adUnits: [i], bidsBackHandler: function (o) {
                                var a = {iu: i.code, cust_params: r, output: "vast"};
                                t.config.pageUrl && (a.url = t.config.pageUrl);
                                var s = window.pbjs.adServers.dfp.buildVideoUrl({adUnit: i, params: a});
                                s += t.hasCookiesConsent() ? "&ltd=0" : "&ltd=1", s += t.hasPersonalisedAdsConsent() ? "&npa=0" : "&npa=1", t._getDeviceId() && (s += "&" + t._toUrlQueryParameters(t._getDeviceId()));
                                var c = new e.google.ima.AdsRequest;
                                c.adTagUrl = s, t.config.pageUrl && (c.pageUrl = t.config.pageUrl), c.linearAdSlotWidth = t.playerWidth, c.linearAdSlotHeight = t.playerHeight;
                                var l = t._extractCustomParamsFromUrl(s);
                                l.hb_aid = n, t.adsLoader.targetingParameters = l, t.adsLoader.requestAds(c)
                            }
                        };
                        try {
                            e.pbjs.requestBids(o)
                        } catch (a) {
                            return void t.onAdError()
                        }
                        t.trackAdRequest({hb_aid: n})
                    }))
                }, i.prototype.__show = function () {
                    var e = this;
                    e.isMuted ? e.adsManager.setVolume(0) : e.adsManager.setVolume(1), e.trackAdShown(e.adsLoader.targetingParameters), e.modal.show(), e.adsManager.start()
                }, i.prototype._canPreload = function () {
                    return !1
                }, e.PrebidGoogleAdManagerVideoBaseProvider = i
            }(window);
            var J = Host.bootstrapper.load((function () {
                return XS.assets.__importATL("i/g/s/adloadingoverlay.svg", {
                    data: '<svg xmlns="http://www.w3.org/2000/svg" width="364" height="364"><path data-name="Ellipse 1 copy" d="M182 0A182 182 0 1 1 0 182 182 182 0 0 1 182 0Zm0 10.584A171.416 171.416 0 1 1 10.584 182 171.416 171.416 0 0 1 182 10.584Z" style="opacity:.5;fill:#fff;fill-rule:evenodd"/><path data-name="Ad Loading" d="M165 94.411h-11.067l-20.184 51.821h11.1l4.277-11.771h20.714l4.525 11.771h11.382Zm-12.658 31.319 7-19.23 7.141 19.23h-14.14Zm73.314-31.319h-9.933v18.664a14.058 14.058 0 0 0-10.888-5.231 14.635 14.635 0 0 0-11.347 4.966Q189 117.777 189 127.321q0 9.332 4.613 14.546a14.3 14.3 0 0 0 11.082 5.214 13.932 13.932 0 0 0 6.31-1.573 14.928 14.928 0 0 0 5.426-4.79v5.514h9.226V94.411Zm-24.126 23.843a7.462 7.462 0 0 1 5.921-2.811 7.383 7.383 0 0 1 5.974 2.846q2.332 2.846 2.333 9.314 0 5.8-2.4 8.714a7.312 7.312 0 0 1-5.832 2.916 7.5 7.5 0 0 1-6.716-3.888q-1.662-2.686-1.662-8.7-.004-5.58 2.382-8.391ZM83.289 233.105v-8.731H57.272v-42.666H46.809v51.4h36.48Zm7.529-8.324a16.009 16.009 0 0 0 7.123 6.84 21.8 21.8 0 0 0 9.844 2.333 18.578 18.578 0 0 0 13.839-5.6 19.339 19.339 0 0 0 5.5-14.122 19.113 19.113 0 0 0-5.444-13.98 18.742 18.742 0 0 0-13.962-5.533 20.509 20.509 0 0 0-9.986 2.44 16.738 16.738 0 0 0-6.911 7.069 20.312 20.312 0 0 0-2.439 9.58 22.792 22.792 0 0 0 2.436 10.973Zm10.393-19a8.665 8.665 0 0 1 13.061 0q2.632 2.968 2.633 8.483 0 5.656-2.633 8.625a8.665 8.665 0 0 1-13.061 0q-2.652-2.969-2.652-8.554t2.652-8.554Zm43.514-2.422a7.11 7.11 0 0 1 4.136-1.043q3.923 0 5.337 1.22t1.414 4.083v.99a54.143 54.143 0 0 1-9.65 2.439 33.271 33.271 0 0 0-7.9 2.315 9.926 9.926 0 0 0-4.26 3.818 10.676 10.676 0 0 0-1.52 5.673 10.456 10.456 0 0 0 3.341 7.953q3.339 3.147 9.137 3.147a15.586 15.586 0 0 0 6.186-1.238 17.893 17.893 0 0 0 5.444-3.711q.107.284.353 1.166.566 1.945.955 2.934h9.827a21.282 21.282 0 0 1-1.785-5.037 40.156 40.156 0 0 1-.478-7.3l.106-11.594q0-6.468-1.325-8.89a9.871 9.871 0 0 0-4.578-3.994q-3.252-1.573-9.9-1.574-7.319 0-11.029 2.616a14.041 14.041 0 0 0-5.232 8.06l9.014 1.626a7.252 7.252 0 0 1 2.407-3.659Zm10.887 13.7a19.63 19.63 0 0 1-.389 4.843 6.218 6.218 0 0 1-2.368 3.287 8.6 8.6 0 0 1-5.126 1.767 5.428 5.428 0 0 1-3.959-1.52 4.867 4.867 0 0 1-1.555-3.6 4.143 4.143 0 0 1 1.944-3.5 18.256 18.256 0 0 1 5.409-1.732 61.461 61.461 0 0 0 6.044-1.52v1.98Zm53.978-35.773h-9.933v18.664a14.059 14.059 0 0 0-10.888-5.232 14.636 14.636 0 0 0-11.347 4.967q-4.489 4.966-4.489 14.511 0 9.332 4.613 14.546a14.3 14.3 0 0 0 11.082 5.214 13.932 13.932 0 0 0 6.31-1.573 14.928 14.928 0 0 0 5.426-4.79v5.514h9.226v-51.823Zm-24.126 23.843a7.462 7.462 0 0 1 5.921-2.811 7.383 7.383 0 0 1 5.974 2.846q2.332 2.845 2.333 9.314 0 5.8-2.4 8.714a7.312 7.312 0 0 1-5.832 2.916 7.5 7.5 0 0 1-6.716-3.888q-1.662-2.686-1.662-8.7-.004-5.582 2.382-8.393Zm43.85-14.652v-9.191h-9.933v9.191h9.933Zm0 42.63v-37.54h-9.933v37.54h9.933Zm44.327-23.33a31.05 31.05 0 0 0-.547-6.681 10.964 10.964 0 0 0-1.945-4.171 10.066 10.066 0 0 0-4.118-3.022 14.894 14.894 0 0 0-6.009-1.185q-7.46 0-12.372 6.363v-5.514h-9.226v37.54h9.933v-17q0-6.291.76-8.625a7.122 7.122 0 0 1 2.81-3.747 7.969 7.969 0 0 1 4.631-1.414 5.914 5.914 0 0 1 3.446.99 5.514 5.514 0 0 1 2.068 2.775q.636 1.785.636 7.865v19.159h9.933v-23.33Zm9.12 27.006a10.261 10.261 0 0 0 3.995 8.29q3.995 3.268 13.538 3.269a27.818 27.818 0 0 0 8.36-1.06 13.606 13.606 0 0 0 5.285-2.934 12.306 12.306 0 0 0 3.075-5.161 33.58 33.58 0 0 0 1.1-9.933v-33.689h-9.3v5.267q-4.524-6.115-11.488-6.116a14.658 14.658 0 0 0-11.294 4.985q-4.542 4.983-4.542 14.422a21.745 21.745 0 0 0 3.464 12.584 13.837 13.837 0 0 0 11.983 6.4q6.788 0 11.241-6.08v5.473a15.1 15.1 0 0 1-.459 4.56 4.81 4.81 0 0 1-1.98 2.51 11.561 11.561 0 0 1-5.832 1.166 7.466 7.466 0 0 1-4.454-1.06 3.87 3.87 0 0 1-1.308-2.722L282.8 235.58q-.036.706-.036 1.2Zm11.224-31.69a7.334 7.334 0 0 1 5.885-2.775 7.639 7.639 0 0 1 6.08 2.828q2.4 2.829 2.4 8.661 0 5.586-2.51 8.43a7.89 7.89 0 0 1-6.151 2.846 7.156 7.156 0 0 1-5.708-2.775q-2.316-2.775-2.316-8.749.004-5.693 2.32-8.468Z" style="fill:#fff;fill-rule:evenodd"/></svg>',
                    width: 364,
                    height: 364,
                    mimetype: "svg+xml"
                })
            }), !0);
            Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("samsungBixby", "samsungBixby.v1", "Bool", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("samsungGameLauncherPWA", "samsungGameLauncherPWA.v1", "Bool", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("samsungGalaxyStorePWA", "samsungGalaxyStorePWA.v1", "Bool", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("fullScreenVideoCount", "fsvideocount.v2", "Int", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("interstitialPlayCount", "playCount8", "Int", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                return e.abrupt("return", XS.data._load("acontained", "acontained.v2", "Bool", t));
                            case 4:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), XS.modulesToPreload.push((function () {
                function e() {
                    var e = Host.Web.GetQueryString("partnerid");
                    if (e) return e;
                    if (XS.is.samsungBrowser) return "3660984936";
                    if (XS.is.rcs) return "3217022605";
                    if (XS.is.huaweiquickapp) return "9547456458";
                    if (XS.is.huawei) return "4822698373";
                    if (XS.is.tMobile) return "7269966843";
                    if (XS.is.miniclip) return "8532226134";
                    if (XS.is.samsungBrowserSEA) return "2765561693";
                    if (XS.is.samsungBrowserUS) return "1526015108";
                    if (XS.is.samsungBrowserUK) return "2961002817";
                    if (XS.is.mozilla) return "9508446909";
                    if (XS.is.samsungBixby) return "7640790291";
                    if (XS.is.samsungGalaxyStorePWA) return "7430391555";
                    if (XS.is.samsungGameLauncherPWA) return "9997971842";
                    if (XS.is.samsungInstantPlay) return "3238562380";
                    if (XS.is.samsungGameLauncher) switch (Host.Web.GetQueryString("source")) {
                        case"ft_daily":
                            return "4111954147";
                        case"ft_bixby":
                            return "7859627468";
                        case"ft_browser_us":
                            return "7627870781";
                        case"ft_browser_uk":
                            return "8436188448";
                        default:
                            return "7978894035"
                    } else if (Host.Web.GetQueryString("gl_fallback") || "" === Host.Web.GetQueryString("gl_fallback")) switch (Host.Web.GetQueryString("source")) {
                        case"ft_daily":
                            return "3704760038";
                        case"ft_bixby":
                            return "7640790291";
                        case"ft_browser_us":
                            return "1526015108";
                        case"ft_browser_uk":
                            return "2961002817";
                        default:
                            return "9152813246"
                    }
                    return XS.is.spilGamesWrapper && Config.googleAdSpilgamesId ? Config.googleAdSpilgamesId : !!Config.googleAdSiteId && Config.googleAdSiteId
                }

                XS.data.addBoolWithLocalKey("samsungBixby", "samsungBixby.v1", {remote: !1}), XS.data.addBoolWithLocalKey("samsungGameLauncherPWA", "samsungGameLauncherPWA.v1", {remote: !1}), XS.data.addBoolWithLocalKey("samsungGalaxyStorePWA", "samsungGalaxyStorePWA.v1", {remote: !1}), XS.data.addIntWithLocalKey("fullScreenVideoCount", "fsvideocount.v2", {remote: !1}), XS.data.addIntWithLocalKey("interstitialPlayCount", "playCount8", {remote: !1}), XS.data.addBoolWithLocalKey("acontained", "acontained.v2", {remote: !1}), window.__XYYX.getGoogleAdSenseGameChannelId = e, XS.is.crazyGames ? console.log("Ad Provider Skipped on CrazyGames: web-adsense-interstitial") : (window.adProviders = window.adProviders || {}, window.adProviders["web-adsense-interstitial"] = new function () {
                    window.__XYYX.createErrorHandler("Web iAd");
                    var t = this, i = window.GSInstant;

                    function n() {
                        (XS.is.samsungBixby || XS.data.samsungBixby) && (console.warn("Reset to Samsung Bixby"), XS.data.samsungBixby = XS.is.samsungBixby = !0), (XS.is.samsungGalaxyStorePWA || XS.data.samsungGalaxyStorePWA) && (console.warn("Reset to samsungGalaxyStorePWA"), XS.data.samsungGalaxyStorePWA = XS.is.samsungGalaxyStorePWA = !0), (XS.is.samsungGameLauncherPWA || XS.data.samsungGameLauncherPWA) && (console.warn("Reset to samsungGameLauncherPWA"), XS.data.samsungGameLauncherPWA = XS.is.samsungGameLauncherPWA = !0);
                        var t,
                            n = XS.is.samsungBixby || XS.is.rcs || XS.is.miniclip || XS.is.samsungBrowser || XS.is.samsungGalaxyStorePWA || XS.is.samsungGameLauncherPWA || XS.is.samsungBrowserUK || XS.is.samsungBrowserUS || XS.is.samsungBrowserSEA || XS.is.mozilla || XS.is.spilGamesWrapper || XS.is.samsungGameLauncher || XS.is.huaweiquickapp || XS.is.tMobile || XS.is.samsungInstantPlay || Host.Web.GetQueryString("partnerid"),
                            r = XS.is.huawei;
                        if (XS.is.huaweiquickapp) {
                            !1
                        }
                        var o = XS.is.iframed || n, a = "";

                        function s(e, t) {
                            var i = function (e, t, i) {
                                var n = XS.is.mobile ? "video_text_image" : "video_text_image_flash";
                                return e = e.split("{$ADTYPE}").join(n), t && (e = e.split("{$CHANNEL}").join(t)), e.split("{$GAMENAME}").join(Config.id)
                            }(XS.is.spilGamesWrapper && Config.googleAdSpilgamesId ? "--https--googleads.g.doubleclick.net/pagead/ads?ad_type={$ADTYPE}&client=ca-games-pub-6389174903462367&description_url=https%3A%2F%2F{$GAMENAME}.XYYX.com%2F&channel={$CHANNEL}&hl=en&&max_ad_duration=60000&adsafe=high&videoad_start_delay=0&vpa=1" : "--https--googleads.g.doubleclick.net/pagead/ads?ad_type={$ADTYPE}&client=ca-games-pub-6389174903462367&description_url=https%3A%2F%2F{$GAMENAME}.XYYX.com%2F&channel={$CHANNEL}&hl=en&max_ad_duration=60000&videoad_start_delay=0&vpa=1", e);
                            return console.log("Showing Google Ad URL: " + i), i + a
                        }

                        XS.is.samsungGameLauncher && "undefined" != typeof XYYXInstant && XYYXInstant.getADID().then((function (e) {
                            a = "&rdid=" + e + "&idtype=adid&is_lat=0"
                        })).catch((function (e) {
                            console.warn("Unable to get rdid")
                        }));
                        var c, l, d = 1;

                        function u() {
                            d = Math.min(Math.min(document.documentElement.clientWidth / 480, document.documentElement.clientHeight / 360), 1)
                        }

                        function h() {
                            u(), c && c.resize(A(), f(), google.ima.ViewMode.FULLSCREEN), l && (l.style.transform = "scale(" + d + ")")
                        }

                        function f() {
                            return Math.floor(Math.max(Math.ceil(document.documentElement.clientHeight / d), 360))
                        }

                        function A() {
                            return Math.floor(Math.max(Math.ceil(document.documentElement.clientWidth / d), 480))
                        }

                        function g(t, n, r) {
                            var o = e();
                            if (window.google && window.google.ima) {
                                var a, d = !1, u = document.getElementById("gameCanvas");
                                u.currentTime = ((new Date).getTime() - initTime) / 1e3 > 0, u.duration = 36e5, (l = document.createElement("div")).style.position = "absolute", l.style.top = "0", l.style.zIndex = 10, document.body.appendChild(l), h();
                                try {
                                    a = new google.ima.AdDisplayContainer(l);
                                    var g = new google.ima.AdsLoader(a);
                                    g.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, (function (e) {
                                        XS.track.ad("interstitial", "response", "success", void 0, {
                                            provider: "legacy-adsense",
                                            advertisement_id: o
                                        });
                                        var t = new google.ima.AdsRenderingSettings;
                                        t.restoreCustomPlaybackStateOnAdBreakComplete = !1, (c = e.getAdsManager(u, t)).addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, C), c.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, E), c.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, S), c.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, y), c.addEventListener(google.ima.AdEvent.Type.LOADED, y), c.addEventListener(google.ima.AdEvent.Type.STARTED, y), c.addEventListener(google.ima.AdEvent.Type.COMPLETE, y), c.addEventListener(google.ima.AdEvent.Type.SKIPPED, y), function () {
                                            a.initialize();
                                            try {
                                                XS.track.ad("interstitial", "show", void 0, {
                                                    provider: "legacy-adsense",
                                                    advertisement_id: o
                                                }), console.log(A(), f()), c.init(A(), f(), google.ima.ViewMode.FULLSCREEN), XS.emit("adShowStart"), d = !0, c.start()
                                            } catch (e) {
                                                XS.track.ad("interstitial", "finish", "error", void 0, {
                                                    provider: "legacy-adsense",
                                                    advertisement_id: o
                                                }), m()
                                            }
                                        }()
                                    }), !1), g.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (function (e) {
                                        XS.track.ad("interstitial", "response", "error", void 0, {
                                            provider: "legacy-adsense",
                                            advertisement_id: o
                                        }), I(e)
                                    }), !1);
                                    var p = new google.ima.AdsRequest;
                                    p.forceNonLinearFullSlot = !0, p.adTagUrl = s(o), p.linearAdSlotWidth = A(), p.linearAdSlotHeight = f(), p.nonLinearAdSlotWidth = A(), p.nonLinearAdSlotHeight = f(), XS.track.ad("interstitial", "request", void 0, {
                                        provider: "legacy-adsense",
                                        advertisement_id: o
                                    }), g.requestAds(p)
                                } catch (b) {
                                    return console.warn("Ad display failed", b), XS.track.ad("interstitial", "response", "error", void 0, {
                                        provider: "legacy-adsense",
                                        advertisement_id: o
                                    }), void w()
                                }
                            } else XS.track.ad("interstitial", "blocked", void 0, {
                                provider: "legacy-adsense",
                                advertisement_id: o
                            });

                            function w() {
                                l && l.parentNode && l.parentNode.removeChild(l), t(d), c && (c.destroy(), c = void 0)
                            }

                            function y(e) {
                                var t = !1;
                                try {
                                    var n = e.getAd();
                                    t = n && n.isLinear()
                                } catch (b) {
                                    console.error(b)
                                }
                                switch (e.type) {
                                    case google.ima.AdEvent.Type.STARTED:
                                        !function (e) {
                                            var t = e ? "VIDEO" : "IMAGE";
                                            i && i.adStart("INTERSTITIAL", t, void 0, "ADSENSE")
                                        }(t);
                                        break;
                                    case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                                    case google.ima.AdEvent.Type.COMPLETE:
                                        XS.track.ad("interstitial", "finish", "success", void 0, {
                                            provider: "legacy-adsense",
                                            advertisement_id: o
                                        });
                                        break;
                                    case google.ima.AdEvent.Type.SKIPPED:
                                        XS.track.ad("interstitial", "finish", "skipped", void 0, {
                                            provider: "legacy-adsense",
                                            advertisement_id: o
                                        })
                                }
                            }

                            function m(e) {
                                w()
                            }

                            function C(e) {
                                XS.track.ad("interstitial", "finish", "error", void 0, {
                                    provider: "legacy-adsense",
                                    advertisement_id: o
                                }), I(e)
                            }

                            function I(e) {
                                console.log("on onAdError", e), m(JSON.stringify(e.getError()))
                            }

                            function E() {
                                XS.emit("blur", {id: "gaAdvertisement"}), n(), console.warn("Advertisement is requesting that game is paused."), v = (new Date).getTime()
                            }

                            function S() {
                                w(), console.warn("Advertisement is requesting that game is resumed."), "mahjong" == Config.id && (new Image(1, 1).src = "//www.googleadservices.com/pagead/conversion/957806883/?label=wIQuCLCU93IQo_LbyAM")
                            }
                        }

                        XS.on("resize", h, {freezeGroup: ENG_FRZ_GRP}), u();
                        var p = !0, v = 0, w = !1;
                        var y = new Sprite(J());
                        XS.on("adShowStart", (function () {
                            y.parent && y.parent.removeChild(y)
                        }), {freezeGroup: ENG_FRZ_GRP});
                        var m = new Graphics;

                        function C(e, t) {
                            if (window.FAPI && XS.is.okru) return t(!0), FAPI.invokeUIMethod("showMidroll"), void FAPI.invokeUIMethod("prepareMidroll");
                            XS.emit("advertisementStart"), XS.freeze();
                            var i = .5 * XS.devicePixelRatio;

                            function n(e) {
                                XS.unfreeze(), XS.emit("focus", {id: "gaAdvertisement"}), XS.emit("advertisementDone"), XS.stageContainer.removeChild(m), y.parent && y.parent.removeChild(y), XS.off("resize", o, {freezeGroup: ENG_FRZ_GRP}), window.dirtyOnce = !0, t && t(e)
                            }

                            y.ratio = i, y.scale.set(i), m.on("down", (function () {
                            }), {freezeGroup: ENG_FRZ_GRP});
                            e && e.first;

                            function r() {
                                XS.stageContainer.addChild(m), y.parent && y.parent.addChild(y), window.dirtyOnce = !0
                            }

                            function o() {
                                m.width = width * XS.devicePixelRatio, m.height = height * XS.devicePixelRatio, y.x = m.width / 2 - 182, y.y = m.height / 2 - 182, y.x = m.width / 2 - y.width / 2, y.y = m.height / 2 - y.height / 2
                            }

                            XS.stageContainer.addChild(m), XS.stageContainer.addChild(y), XS.on("resize", o, {freezeGroup: ENG_FRZ_GRP}), o(), r();
                            var a = 0;
                            if (p && !window.google) var s = setInterval((function () {
                                window.google ? (p = !1, clearInterval(s), g(n, r)) : (50 == ++a || w) && (w = !0, clearInterval(s), n())
                            }), 25); else p = !1, g(n, r)
                        }

                        function I() {
                            return !(!XS.is.iframed && XS.is.social) && (!!e() && (!!XS.is.okru || !XS.is.facebookApp && (!XS.is.kongregate && (!XS.is.miniclip && ((XS.is.advertisementOverlayEnabled || Config.googleFullscreenAsDefault) && !XS.is.advertisementIsDisabled)))))
                        }

                        function E(e) {
                            var t = XS.data.fullScreenVideoCount || 0;
                            if (isNaN(t) && (XS.data.fullScreenVideoCount = t = 1), (0 == t || r && t <= 3) && (XS.data.fullScreenVideoCount = (XS.data.fullScreenVideoCount || 0) + 1, !o)) return !1;
                            if (e && e.first) {
                                if (XS.is.advertisementInterstitialDisabled) return !1;
                                if (!n) return !1
                            }
                            var i = Math.max(2.5 - t / 10, .5);
                            "" === Host.Web.GetQueryString("google_ads") && (i = Math.min(i, 1)), XS.is.spilGamesWrapper && (i = .5), o && (i = Math.min(i, 2));
                            var a = 60 * i * 1e3;
                            return (new Date).getTime() - v < a ? (console.warn("This should be clearned up and moved to XS.ads?"), console.warn("We already showed an ad! :), waiting", (new Date).getTime() - v, a), !1) : (t++, XS.data.fullScreenVideoCount = t, I())
                        }

                        function I() {
                            return !(!XS.is.iframed && XS.is.social) && (!!e() && (!!XS.is.okru || !XS.is.facebookApp && (!XS.is.kongregate && (!XS.is.miniclip && ((XS.is.advertisementOverlayEnabled || Config.googleFullscreenAsDefault) && !XS.is.advertisementIsDisabled)))))
                        }

                        m.beginFill(0, .8), m.drawRect(0, 0, 200, 200), setInterval((function () {
                            m.parent && y.parent && y.parent.children[y.parent.children.length - 1] != y && (m.parent && m.parent.addChild(m), y.parent && y.parent.addChild(y))
                        }), 50), XS.on("showFullscreenAd", (function (e) {
                            console.warn("XS.on('showFullscreenAd') is depricated")
                        }), {freezeGroup: ENG_FRZ_GRP}),
                        // I() && XS.loadScript("//imasdk.googleapis.com/js/sdkloader/ima3.js"),
                        n || ("" === Host.Web.GetQueryString("google_ads") ? XS.data.acontained = !0 : XS.data.acontained && !XS.is.facebookApp && (top.location.href = "//" + Config.id + ".XYYX.com/g/")), this.show = function (e) {
                            t ? t({}, e) : E({}) ? C({}, e) : e && e(!1)
                        }
                    }

                    var r = void 0;
                    t.canPreload = function () {
                        return !1
                    }, t.init = function (e) {
                        return r || (r = new n), !0
                    }, t.preload = function (e, t) {
                        t && t(!1)
                    }, t.forcePreload = function (e, t) {
                        t && t(!1)
                    }, t.show = function (e, t) {
                        r && r.show(t)
                    }, t.force = function (e, t) {
                        r && r.show(t)
                    }, t.ready = function (e) {
                        return !0
                    }, t.reject = function () {
                        console.warn("GOT reject")
                    }
                })
            })), XS.modulesToPreload.push((function () {
                if (window.BaseProvider && window.HouseBaseProvider) {
                    var e = window.BaseProvider, t = new (0, window.HouseBaseProvider)(e.AD_TYPE_INTERSTITIAL);
                    window.adProviders = window.adProviders || {}, window.adProviders["house-interstitial"] = t
                }
            })), XS.modulesToPreload.push((function () {
                if (window.BaseProvider && window.CrazyGamesBaseProvider) {
                    var e = new (0, window.CrazyGamesBaseProvider)(BaseProvider.AD_TYPE_INTERSTITIAL);
                    window.adProviders = window.adProviders || {}, window.adProviders["crazygames-interstitial"] = e
                }
            })), XS.modulesToPreload.push((function () {
                if (window.BaseProvider && window.CrazyGamesBaseProvider) {
                    var e = new (0, window.CrazyGamesBaseProvider)(BaseProvider.AD_TYPE_REWARD);
                    window.adProviders = window.adProviders || {}, window.adProviders["crazygames-reward"] = e
                }
            })), XS.modulesToPreload.push((function () {
                if (XS.is.partnerWrapper) {
                    window.adProviders = window.adProviders || {}, window.adProviders["nativebridge-interstitial"] = new function (e) {
                        var t, i = this, n = !1, r = "nativebridge";

                        function o(e, t, i) {
                            XS.track.ad("interstitial", e, t, i, {provider: "nativebridge"})
                        }

                        window.partnerInterstitial = window.partnerInterstitial || {}, window.partnerInterstitial.onAdStarted = function () {
                            o("response", "success"), XS.emit("blur", {id: r})
                        }, window.partnerInterstitial.onAdCompleted = function (e, i, a, s) {
                            XS.emit("focus", {id: r}), n = !1, i ? o("finish", "success") : o("finish", "error", a = a || "error"), t(i), t = null
                        }, window.partnerInterstitial.onAdReadyState = function (e, t) {
                            n = t
                        }, i.init = function (e) {
                            return Host.call("setupInterstitial", {
                                onAdStarted: "window.partnerInterstitial.onAdStarted",
                                onAdCompleted: "window.partnerInterstitial.onAdCompleted",
                                onAdReadyState: "window.partnerInterstitial.onAdReadyState"
                            }), !0
                        }, i.ready = function () {
                            return n
                        }, i.preload = function (e, t) {
                            t && t(!0)
                        }, i.canPreload = function () {
                            return !0
                        }, i.forcePreload = function (e, t) {
                            i.preload(e, t)
                        }, i.show = function (e, i) {
                            t = function (e) {
                                i && i(e)
                            }, Host.call("showInterstitialAd", {})
                        }, i.force = function (e, t) {
                            i.show(e, t)
                        }, i.reject = function () {
                            t = null
                        }
                    }
                }
            })), XS.modulesToPreload.push((function () {
                if (XS.is.partnerWrapper) {
                    window.adProviders = window.adProviders || {}, window.adProviders["nativebridge-reward"] = new function () {
                        var e, t = this, i = !1, n = "nativebridge";

                        function r(e, t, i) {
                            XS.track.ad("reward", e, t, i, {provider: "nativebridge"})
                        }

                        window.partnerReward = window.partnerReward || {}, window.partnerReward.onAdStarted = function () {
                            r("response", "success"), XS.emit("blur", {id: n})
                        }, window.partnerReward.onAdCompleted = function (t, o, a, s) {
                            XS.emit("focus", {id: n}), i = !1, o ? r("finish", "success") : r("finish", "error", a = a || "error"), e(o), e = null
                        }, window.partnerReward.onAdReadyState = function (e, t) {
                            i = t
                        }, t.init = function (e) {
                            return Host.call("setupReward", {
                                onAdStarted: "window.partnerReward.onAdStarted",
                                onAdCompleted: "window.partnerReward.onAdCompleted",
                                onAdReadyState: "window.partnerReward.onAdReadyState"
                            }), !0
                        }, t.ready = function (e) {
                            return i
                        }, t.preload = function (e, t) {
                            t && t(!0)
                        }, t.canPreload = function () {
                            return !0
                        }, t.forcePreload = function (e, i) {
                            t.preload(e, i)
                        }, t.show = function (t, i) {
                            e = function (e) {
                                i && i(e)
                            }, Host.call("showRewardAd", {})
                        }, t.force = function (e, i) {
                            t.show(confg, i)
                        }, t.reject = function () {
                            e = null
                        }
                    }
                }
            })), XS.modulesToPreload.push((function () {
                XS.is.huaweiquickapp && (window.adProviders = window.adProviders || {}, window.adProviders["huawei-quickapp-interstitial"] = new function () {
                    var e = this;
                    e.init = function (e) {
                        return !!(XS.is.huaweiquickapp && window.system && window.system.postMessage) && (t = o, i = window.system.onmessage, window.system.onmessage = function (e) {
                            var n;
                            try {
                                n = JSON.parse(e)
                            } catch (r) {
                                console.error(r)
                            }
                            "object" == typeof n && n.event && t(n), i && i(e)
                        }, !0);
                        var t, i
                    }, e.ready = function () {
                        return !0
                    }, e.canPreload = function () {
                        return !1
                    }, e.show = function (t, i) {
                        if (!e.ready()) return r("blocked"), void i(!1);
                        r("show"), function (e) {
                            var t = {
                                event: "ad-interstitial-show",
                                id: n.register(e),
                                translations: {
                                    AD_LOADING: Host.Localize.Translate("Ad Loading").translated,
                                    AD_SKIP: Host.Localize.Translate("Skip Ad").translated,
                                    AD_CLOSING_TIME: Host.Localize.Translate("Ad will close in {seconds}").translated
                                }
                            };
                            window.system.postMessage(JSON.stringify(t))
                        }(i)
                    }, e.force = function (t, i) {
                        e.show(t, i)
                    }, e.reject = function () {
                    };
                    var t, i, n = (t = 0, i = {}, {
                        register: function (e) {
                            return i[++t] = e, t
                        }, clear: function (e) {
                            i[e] && delete i[e]
                        }, get: function (e) {
                            return i[e]
                        }
                    });

                    function r(e, t) {
                        XS.track.ad("interstitial", e, t, {provider: "huawei-quickapp"})
                    }

                    function o(e) {
                        var t = e.id, i = t && n.get(t), o = !1;
                        switch (e.event) {
                            case"ad-interstitial-loading":
                                r("request"), XS.muteAll(), XS.freeze();
                                break;
                            case"ad-interstitial-load-error":
                            case"ad-interstitial-display-error":
                                r("finish", "error"), XS.unmuteAll(), XS.unfreeze(), i && i(!1), o = !0;
                                break;
                            case"ad-interstitial-displayed":
                                r("response", "success");
                                break;
                            case"ad-interstitial-skipped":
                                r("finish", "skipped"), XS.unmuteAll(), XS.unfreeze(), i && i(!0), o = !0;
                                break;
                            case"ad-interstitial-clicked":
                            case"ad-interstitial-closed":
                                r("finish", "success"), XS.unmuteAll(), XS.unfreeze(), i && i(!0), o = !0
                        }
                        o && i && n.clear(t)
                    }
                })
            })), XS.modulesToPreload.push((function () {
                XS.is.huaweiquickapp && (window.adProviders = window.adProviders || {}, window.adProviders["huawei-quickapp-reward"] = new function () {
                    var e = this, t = 0;
                    e.init = function (e) {
                        return !!(XS.is.huaweiquickapp && window.system && window.system.postMessage) && (t = a, i = window.system.onmessage, window.system.onmessage = function (e) {
                            var n;
                            try {
                                n = JSON.parse(e)
                            } catch (r) {
                                console.error(r)
                            }
                            "object" == typeof n && n.event && t(n), i && i(e)
                        }, !0);
                        var t, i
                    }, e.ready = function () {
                        return t < 3
                    }, e.canPreload = function () {
                        return !1
                    }, e.show = function (t, i) {
                        if (!e.ready()) return o("blocked"), void i(!1);
                        o("show"), function (e) {
                            var t = {event: "ad-reward-show", id: r.register(e)};
                            window.system.postMessage(JSON.stringify(t))
                        }(i)
                    }, e.force = function (t, i) {
                        e.show(t, i)
                    }, e.reject = function () {
                    };
                    var i, n, r = (i = 0, n = {}, {
                        register: function (e) {
                            return n[++i] = e, i
                        }, clear: function (e) {
                            n[e] && delete n[e]
                        }, get: function (e) {
                            return n[e]
                        }
                    });

                    function o(e, t) {
                        XS.track.ad("reward", e, t, {provider: "huawei-quickapp"})
                    }

                    function a(e) {
                        var i = e.id, n = i && r.get(i), a = !1;
                        switch (e.event) {
                            case"ad-reward-loading":
                                o("request"), XS.muteAll(), XS.freeze();
                                break;
                            case"ad-reward-load-error":
                            case"ad-reward-display-error":
                                o("finish", "error"), XS.unmuteAll(), XS.unfreeze(), n && n(!1), a = !0, ++t;
                                break;
                            case"ad-reward-displayed":
                                o("response", "success");
                                break;
                            case"ad-reward-skipped":
                                o("finish", "skipped"), XS.unmuteAll(), XS.unfreeze(), n && n(!1, XS.ads.ERROR_SKIPPED), a = !0;
                                break;
                            case"ad-reward-closed":
                                o("finish", "success"), XS.unmuteAll(), XS.unfreeze(), n && n(!0), a = !0
                        }
                        a && n && r.clear(i)
                    }
                })
            })), XS.modulesToPreload.push((function () {
                if (window.BaseProvider && window.AdsByGoogleBaseProvider) {
                    var e = window.BaseProvider, t = new (0, window.AdsByGoogleBaseProvider)(e.AD_TYPE_INTERSTITIAL);
                    window.adProviders = window.adProviders || {}, window.adProviders["adsbygoogle-interstitial"] = t
                }
            })), XS.modulesToPreload.push((function () {
                if (window.BaseProvider && window.AdsByGoogleBaseProvider) {
                    var e = window.BaseProvider, t = new (0, window.AdsByGoogleBaseProvider)(e.AD_TYPE_REWARD);
                    window.adProviders = window.adProviders || {}, window.adProviders["adsbygoogle-reward"] = t
                }
            })), function (e) {
                function t(e, t, i) {
                    this.withHeader = !!e, this.onShowCallback = t, this.onCloseCallback = i, this._createHTMLElements()
                }

                t.prototype._createHTMLElements = function () {
                    var e = this, t = document.createElement("div");
                    t.style.cssText = "visibility: hidden; position: fixed;top: 0;left: 0;height: 100%;width: 100%;z-index: 9223372036854775807;background-color: rgba(0,0,0,0.85);";
                    var i = document.createElement("div");
                    t.appendChild(i), i.style.cssText = "display: flex; align-items: center; justify-content: center; height: 100%; width: 100%; margin: 0; padding: 0; outline: none;";
                    var n = document.createElement("div");
                    if (i.appendChild(n), n.style.cssText = "position: relative; margin: 0; outline: none; background-color: #fff; box-shadow: 0px 8px 12px rgb(60 64 67 / 15%), 0px 4px 4px rgb(60 64 67 / 30%); border-radius: 5px;", e.withHeader) {
                        var r = document.createElement("div");
                        n.appendChild(r), r.style.cssText = "width: 100%; display: table; height: 24px; background-color: #fff; margin: 0; padding: 0; outline: none;border-radius: 5px 5px 0px 0px;";
                        var o = document.createElement("div");
                        r.appendChild(o), o.style.cssText = "float: left; display: table; transition: opacity 1s, background .75s; -webkit-transition: opacity 1s, background .75s; -moz-transition: opacity 1s, background .75s; -o-transition: opacity 1s, background .75s; background: transparent; color: #fff; padding-bottom: 10px; padding-top: 10px;", o.innerHTML = "<div style=\"font-size: 14px; font-weight: 700; font-family: 'Roboto', arial, sans-serif; color: #202124; position: relative; height: 25px; padding: 2px 16px 0; float: left; display: table-cell; vertical-align: middle; text-align: center; line-height: 25px;\">Ad</div>";
                        var a = document.createElement("div");
                        r.appendChild(a), a.style.cssText = "color: black; opacity: 0.95; padding: 12px 20px 0; float: right; display: table-cell;vertical-align: middle;", a.setAttribute("aria-label", "Close"), a.setAttribute("tabindex", "1"), a.innerHTML = '<div style="cursor: pointer; display: table-cell;vertical-align: middle;">                  <svg viewBox="0 0 48 48" fill="#5F6368" style="height: 1.5em; width: 1.5em; margin-left: -0.5em; margin-right: -0.5em;                      vertical-align: middle; padding-bottom: 1px;">                      <path d="M38 12.83L35.17 10 24 21.17 12.83 10 10 12.83 21.17 24 10 35.17 12.83 38 24 26.83 35.17 38 38 35.17 26.83 24z"></path>                      <path d="M0 0h48v48H0z" fill="none"></path>                   </svg>              </div>', a.onclick = e.close.bind(e)
                    }
                    var s = document.createElement("div");
                    n.appendChild(s), s.style.cssText = "transition: opacity 1s; -webkit-transition: opacity 1s; position: relative; margin: 0; padding: 0; outline: none; font-size: 0", e.creativeContainerElement = s, e.modalElement = t, document.body.appendChild(e.modalElement)
                }, t.prototype.close = function () {
                    var e = this;
                    e.modalElement.style.visibility = "hidden", e.onCloseCallback && e.onCloseCallback()
                }, t.prototype.show = function () {
                    var e = this;
                    e.modalElement.style.visibility = "visible", e.onShowCallback && e.onShowCallback()
                }, t.prototype.addCreativeContent = function (e) {
                    var t = document.createElement("div");
                    t.innerHTML = e.trim();
                    var i = t.firstChild;
                    return this.creativeContainerElement.appendChild(i), i
                }, t.prototype.deleteCreativeContent = function () {
                    this.creativeContainerElement.innerHTML("")
                }, e.AdModal = t
            }(window), XS.modulesToPreload.push((function () {
                if (!(window.BaseProvider && window.PrebidGoogleAdManagerBaseProvider && window.PrebidGoogleAdManagerDisplayBaseProvider)) throw new Error("PrebidGoogleAdManagerDisplayInterstitial: Unable to inherit from window,BaseProvider, PrebidGoogleAdManagerBaseProvider or PrebidGoogleAdManagerDisplayBaseProvider not defined.");
                var e = window.pbjs || {};
                e.que = e.que || [];
                var t = window.googletag || {};
                t.cmd = t.cmd || [];
                var i = window.BaseProvider, n = window.PrebidGoogleAdManagerDisplayBaseProvider;

                function r() {
                    n.call(this, i.AD_TYPE_INTERSTITIAL), this.at = null
                }

                function o() {
                    try {
                        localStorage.removeItem("__lsv__")
                    } catch (e) {
                        console.debug("unable to clear storage")
                    }
                }

                r.prototype = Object.create(n.prototype), r.prototype.constructor = r, r.prototype.___init = function () {
                    var e, i = this;
                    if (o(), i.at = ((e = document.createElement("a")).id = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(), e.href = "#", e.setAttribute("data-google-interstitial", "true"), e.onclick = function (e) {
                        o()
                    }, document.body.appendChild(e)), !i.at) throw new Error(i.name() + ": unable to add required dom elements");
                    t.cmd.push((function () {
                        t.pubads().addEventListener("slotRenderEnded", (function (e) {
                            i.adSlot === e.slot && (e.isEmpty || (i.onPreloadCallback && i.onPreloadCallback(!0), i.onPreloadCallback = null))
                        }))
                    })), i.loadPrebid(), i.initializePrebid(), window.addEventListener("gpt-interstitial-ad-closed", (function () {
                        i.trackAdClosed(i.adSlot.getTargetingMap()), i.isAdAvailable = !1, i._unPause(), i.onAdShownCallback && i.onAdShownCallback(!0), i.onAdShownCallback = null
                    }))
                }, r.prototype.__preload = function () {
                    var i = this;
                    if (!i.hasCookiesConsent() || !i.hasGoogleConsent()) return console.debug(i.name() + ": vendor is missing cookies consent"), void i.onAdError();
                    e.que.push((function () {
                        var n = i.generateUUID(), r = {
                            timeout: i.prebidTimeout,
                            auctionId: n,
                            adUnits: [i.adUnit],
                            bidsBackHandler: function (n, r, o) {
                                e.initAdserverSet = !0, t.cmd.push((function () {
                                    t.pubads().setPrivacySettings({limitedAds: !i.hasCookiesConsent()}), t.pubads().setRequestNonPersonalizedAds(i.hasPersonalisedAdsConsent() ? 0 : 1);
                                    try {
                                        if (t.destroySlots([i.adSlot]), i.adSlot = t.defineOutOfPageSlot(i.adUnit.code, t.enums.OutOfPageFormat.INTERSTITIAL), !i.adSlot) return console.debug(i.name() + ": unable to create ad slot"), void i.onAdError();
                                        i.adSlot.addService(t.pubads()), e.setTargetingForGPTAsync(), i.setTargeting({hb_aid: o}), t.display(i.adSlot)
                                    } catch (n) {
                                        i.onAdError()
                                    }
                                }))
                            }
                        };
                        try {
                            e.requestBids(r)
                        } catch (o) {
                            return void i.onAdError()
                        }
                        i.trackAdRequest({hb_aid: n})
                    }))
                }, r.prototype.__show = function () {
                    var e = this;
                    if (!e.at) return e.onAdShownCallback && e.onAdShownCallback(!1), e.onAdShownCallback = null, console.error(e.name() + ": missing required dom elements");
                    e.trackAdShown(e.adSlot.getTargetingMap()), e.at.click()
                }, window.adProviders = window.adProviders || {}, window.adProviders["pbgam-display-interstitial"] = new r
            })), XS.modulesToPreload.push((function () {
                if (!(window.BaseProvider && window.PrebidGoogleAdManagerBaseProvider && window.PrebidGoogleAdManagerDisplayBaseProvider)) throw new Error("PrebidGoogleAdManagerDisplayReward: Unable to inherit from window,BaseProvider, PrebidGoogleAdManagerBaseProvider or PrebidGoogleAdManagerDisplayBaseProvider not defined.");
                var e = window.pbjs || {};
                e.que = e.que || [];
                var t = window.googletag || {};
                t.cmd = t.cmd || [];
                var i = window.BaseProvider, n = window.PrebidGoogleAdManagerDisplayBaseProvider;

                function r() {
                    n.call(this, i.AD_TYPE_REWARD), this.rewardSlotEvent = null, this.grantReward = !1
                }

                r.prototype = Object.create(n.prototype), r.prototype.constructor = r, r.prototype.___init = function () {
                    var e = this;
                    t.cmd.push((function () {
                        t.pubads().addEventListener("rewardedSlotReady", (function (t) {
                            e.rewardSlotEvent = t, e.onPreloadCallback && e.onPreloadCallback(!0), e.onPreloadCallback = null
                        })), t.pubads().addEventListener("rewardedSlotGranted", (function (t) {
                            e.grantReward = !0
                        })), t.pubads().addEventListener("rewardedSlotClosed", (function () {
                            e.trackAdClosed(e.adSlot.getTargetingMap()), e.isAdAvailable = !1, e._unPause(), console.debug(e.name() + ": " + (e.grantReward ? "granting reward" : "ad skipped, not granting reward")), e.onAdShownCallback && e.onAdShownCallback(e.grantReward, e.grantReward ? null : XS.ads.ERROR_SKIPPED), e.onAdShownCallback = null, e.grantReward = !1, e.rewardSlotEvent = null
                        }))
                    }))
                }, r.prototype.__preload = function () {
                    var e = this;
                    e.rewardSlotEvent = null, e.grantReward = !1, t.cmd.push((function () {
                        try {
                            t.pubads().setRequestNonPersonalizedAds(e.hasPersonalisedAdsConsent() ? 0 : 1), t.pubads().setPrivacySettings({limitedAds: !e.hasCookiesConsent()}), t.destroySlots([e.adSlot]), e.adSlot = t.defineOutOfPageSlot(e.adUnit.code, t.enums.OutOfPageFormat.REWARDED), e.adSlot.addService(t.pubads()), e.setTargeting(), t.display(e.adSlot), e.trackAdRequest()
                        } catch (i) {
                            e.onAdError()
                        }
                    }))
                }, r.prototype.__show = function () {
                    var e = this;
                    e.rewardSlotEvent && e.rewardSlotEvent.makeRewardedVisible(), e.trackAdShown(e.adSlot.getTargetingMap())
                }, r.prototype._onAdError = function () {
                    var e = this;
                    return e.adSlot && t.destroySlots([e.adSlot]), e.grantReward
                }, window.adProviders = window.adProviders || {}, window.adProviders["pbgam-display-reward"] = new r
            })), XS.modulesToPreload.push((function () {
                if (!(window.BaseProvider && window.PrebidGoogleAdManagerBaseProvider && window.PrebidGoogleAdManagerVideoBaseProvider)) throw new Error("PrebidGoogleAdManagerVideoInterstitial: Unable to inherit from window,BaseProvider, PrebidGoogleAdManagerBaseProvider or PrebidGoogleAdManagerVideoBaseProvider not defined.");
                var e = window.pbjs || {};
                e.que = e.que || [];
                var t = window.googletag || {};
                t.cmd = t.cmd || [];
                var i = window.BaseProvider, n = window.PrebidGoogleAdManagerVideoBaseProvider;

                function r() {
                    n.call(this, i.AD_TYPE_INTERSTITIAL)
                }

                r.prototype = Object.create(n.prototype), r.prototype.constructor = r, window.adProviders = window.adProviders || {}, window.adProviders["pbgam-video-interstitial"] = new r
            })), function (e) {
                var t = e.XS = e.XS || {};
                t.on("login", (function (e) {
                    XC.loadRemote = function (e) {
                        t.data._loadRemote(XC, XC.user.data)
                    }
                }))
            }(window), function (e) {
                var t = e.XS = e.XS || {}, i = {
                    name: "XYYX", oninit: function (e, t) {
                        e.debug && console.log("XS.track > XYYX.js > config: " + JSON.stringify(e))
                    }, onevent: function (t, i, n, r, o) {
                        var a = {}, s = (this.parseArgs(this.config.state, r) || [])[0];
                        for (var c in s) a[c] = s[c];
                        for (var c in n) a[c] = n[c];
                        a.protocol_version = 5, a.event = t, a.value = i, a.web_url = document && document.location && document.location.href ? document.location.href : void 0;
                        var l = 60 * (new Date).getTimezoneOffset() * 1e3;
                        a.client_time = new Date(Date.now() - l).toISOString().slice(0, -1), e.__XYYX.analytics.logEvent(t, a)
                    }
                };
                t.track.addProvider("XYYX", i)
            }(window), function (e) {
                var t = e.XS = e.XS || {}, i = {
                    globalState: void 0, oninit: function (e, t) {
                        this.eventCategory = Config.id;
                        var i = this.trackers = [], n = e.gaIds || {}, r = [];
                        for (var o in n) r.push(n[o]);
                        for (var o in n) if (n[o]) {
                            var a = window.gaAppInfo;
                            ga("create", n[o], "auto", o, a), ga(o + ".set", a), i.push({name: o, uaid: n[o]})
                        }
                        ga((function (e) {
                            _jsonData.scitylana && ga("all.require", "scitylana", _jsonData.scitylana)
                        }))
                    }, ga: function (e) {
                        function t(t) {
                            return e.apply(this, arguments)
                        }

                        return t.toString = function () {
                            return e.toString()
                        }, t
                    }((function (e) {
                        for (var t = this.trackers, i = 0; i < t.length; i++) ga(t[i].name + ".send", "event", e)
                    })), onevent: function (e, i, n, r, o) {
                        void 0 === o && (o = []);
                        var a = {};
                        if (t.track.dataIsDirty || void 0 === this.globalState) {
                            this.globalState = (this.parseArgs(this.config.state, r) || [])[0], t.track.dataIsDirty = !1;
                            for (var s = 0; s < this.trackers.length; s++) ga(this.trackers[s].name + ".set", this.globalState);
                            for (var c in this.globalState) a[c] = this.globalState[c]
                        }
                        if (a.eventCategory = this.eventCategory, a.eventAction = e, void 0 !== o[0] && (a.eventAction = o[0]), void 0 !== o[1] && (a.eventLabel = o[1]), void 0 !== o[2] && (a.eventValue = o[2]), "object" == typeof o[3]) for (var l in o[3]) a[l] = o[3][l];
                        this.ga(a)
                    }
                };
                t.track.addProvider("ga", i)
            }(window);
            var K = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_shockwave.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" style="enable-background:new 0 0 512 512" xml:space="preserve"><radialGradient id="a" cx="256" cy="256" r="256" gradientUnits="userSpaceOnUse"><stop offset="0" style="stop-color:#fff;stop-opacity:0"/><stop offset=".859" style="stop-color:#fff;stop-opacity:.8587"/><stop offset="1" style="stop-color:#fff"/></radialGradient><circle cx="256" cy="256" r="256" style="fill:url(#a)"/></svg>',
                        width: 512,
                        height: 512,
                        mimetype: "svg+xml"
                    })
                }), !0), V = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_particle.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="500" height="500"><defs><radialGradient id="a"><stop offset="0%" stop-color="#FFF"/><stop offset="66%" stop-color="#FFF"/><stop offset="67%" stop-color="#7F7F7F"/><stop offset="100%" stop-color="#7F7F7F" stop-opacity="0"/></radialGradient></defs><path fill="url(#a)" d="M250 0c138.071 0 250 111.929 250 250S388.071 500 250 500 0 388.071 0 250 111.929 0 250 0Z"/></svg>',
                        width: 500,
                        height: 500,
                        mimetype: "svg+xml"
                    })
                }), !0), Y = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_particle2.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" style="enable-background:new 0 0 15 15" xml:space="preserve"><circle cx="7.5" cy="7.5" r="7.5" style="fill:#fff"/></svg>',
                        width: 15,
                        height: 15,
                        mimetype: "svg+xml"
                    })
                }), !0), W = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_confetti.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="61" height="111" style="enable-background:new 0 0 61 111" xml:space="preserve"><path style="fill:#fff" d="M0 0h61v111H0z"/></svg>',
                        width: 61,
                        height: 111,
                        mimetype: "svg+xml"
                    })
                }), !0), q = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_crown.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="70" height="50"><g fill="#FFF"><path d="M65.449 14.126 47.443 28.965 34.95 5.68 22.516 29.141 4.452 14.067 12 50h46z"/><circle cx="4.982" cy="13.126" r="4.982"/><circle cx="64.982" cy="13.126" r="4.982"/><circle cx="34.982" cy="5.126" r="4.982"/></g></svg>',
                        width: 70,
                        height: 50,
                        mimetype: "svg+xml"
                    })
                }), !0), Z = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_circle.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="56" height="56" style="enable-background:new 0 0 56 56" xml:space="preserve"><circle cx="28" cy="28" r="28" style="fill:#fff"/></svg>',
                        width: 56,
                        height: 56,
                        mimetype: "svg+xml"
                    })
                }), !0), _ = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_condense.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" style="enable-background:new 0 0 512 512" xml:space="preserve"><circle cx="256" cy="256" r="245.5" style="fill:none;stroke:#fff;stroke-width:21;stroke-miterlimit:10"/></svg>',
                        width: 512,
                        height: 512,
                        mimetype: "svg+xml"
                    })
                }), !0), $ = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_finger.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 599.11 398.58" width="605" height="404"><defs><linearGradient id="a" x1="550.46" y1="308.92" x2="348.39" y2="215.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#f9ad81" stop-opacity="0"/><stop offset=".04" stop-color="#f9ad81" stop-opacity=".05"/><stop offset=".24" stop-color="#f9ad81" stop-opacity=".34"/><stop offset=".44" stop-color="#f9ad81" stop-opacity=".57"/><stop offset=".62" stop-color="#f9ad81" stop-opacity=".76"/><stop offset=".78" stop-color="#f9ad81" stop-opacity=".89"/><stop offset=".91" stop-color="#f9ad81" stop-opacity=".97"/><stop offset="1" stop-color="#f9ad81"/></linearGradient><linearGradient id="b" x1="532.23" y1="306.55" x2="378.17" y2="230.94" gradientUnits="userSpaceOnUse"><stop offset="0" stop-opacity="0"/><stop offset="1"/></linearGradient></defs><g data-name="Layer 2"><path d="M139.23 15.77a92.95 92.95 0 0 0-78.58 168.46l454.9 208-1.45 3.18 82-166.65z" style="fill:url(#a);fill-rule:evenodd"/><path d="m512.63 398.58-454.92-208A99.95 99.95 0 1 1 142.2 9.42l456.9 213-3 6.34-456.92-213a92.95 92.95 0 0 0-78.53 168.47l454.9 208z" style="fill:url(#b)"/><path d="M171.4 74.14c-2-13.3-55-55.08-79.56-55.08S18.1 129.22 34.1 145.2s84.2 28.42 93.64 24.3 45.68-82.05 43.67-95.36z" style="fill:#f9decf;fill-rule:evenodd"/><path d="M117.07 131.92A57.5 57.5 0 0 0 129.72 168c11.63-11.7 43.34-80.82 41.7-93.7a57.74 57.74 0 0 0-54.35 57.62z" style="fill:#ebebeb;fill-rule:evenodd"/></g></svg>',
                        width: 605,
                        height: 404,
                        mimetype: "svg+xml"
                    })
                }), !0), ee = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_star.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="272" height="130"><path fill="#FFF" stroke="#F6B900" stroke-width="7" stroke-miterlimit="10" d="M68 8.745 86.44 46.11l41.236 5.992-29.838 29.084 7.043 41.069L68 102.864l-36.882 19.391 7.044-41.069L8.324 52.102 49.56 46.11z"/><path fill="#F6B900" stroke="#F6B900" stroke-width="7" stroke-miterlimit="10" d="m204 8.745 18.44 37.365 41.236 5.992-29.838 29.084 7.043 41.069L204 102.864l-36.882 19.391 7.044-41.069-29.838-29.084 41.236-5.992z"/></svg>',
                        width: 272,
                        height: 130,
                        mimetype: "svg+xml"
                    })
                }), !0), te = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/coinbtn.svg", {
                        data: '<svg xmlns="http://www.w3.org/2000/svg" width="330" height="150" style="enable-background:new 0 0 330 150" xml:space="preserve"><path d="M280 150H50c-27.5 0-50-22.5-50-50V50C0 22.5 22.5 0 50 0h230c27.5 0 50 22.5 50 50v50c0 27.5-22.5 50-50 50z" style="fill:#fff"/></svg>',
                        width: 330,
                        height: 150,
                        mimetype: "svg+xml"
                    })
                }), !0), ie = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/liveslost.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAABQAAABiAQMAAABqPGGSAAAAA1BMVEX///+nxBvIAAAAAXRSTlMz/za5cAAAAA1JREFUeAFjGBRgFAAAAYgAAVYhiokAAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), ne = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/lives.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAABQAAABiAQAAAAB4ic58AAAAEElEQVR4AWP4///DwONRDADlix8spI+OGQAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), re = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/black.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAgAAAAIAAgMAAACJFjxpAAAADFBMVEUAAAAAAAAAAAAAAAA16TeWAAAABHRSTlOPm6OYjBFjugAAAS1JREFUeAHtziEBwEAMBLA+qL/HVTl9K5mMA0sU5PStpM0HJh0QeJ9KagEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAYF8YG4lrcDpvwc+m0FedolQnA8AAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), oe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/cat.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), ae = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/eyes.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAANYAAAAcAQMAAAAnXtO/AAAABlBMVEX///9HcExwQjx2AAAAAnRSTlP/AOW3MEoAAAAYSURBVHgBYwAC/v+Y4ABQfKTJjcqNygEAj3sor4qG+94AAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), se = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/pickup.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), ce = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/videobtn.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), le = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/closebtn.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAHsAAAB7CAMAAABjGQ9NAAACIlBMVEVHcEz////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////09PTt7e3y8vLV1dV0dHRFRUVubm7f398/Pz9nZ2fIyMjJyclTU1MNDQ0AAAAJCQlCQkLLy8vZ2dlERES6urpPT08EBAQCAgL///9GRkbX19dYWFi9vb3////9/f1BQUHHx8f6+vr///9HR0dfX1/p6en////////MzMwwMDDc3Nxvb2/Nzc3b29tUVFQBAQFaWlrm5uYxMTHDw8NAQEBSUlI0NDS8vLxXV1c2Nja2tra3t7f///////////8yMjL///8vLy/////Kysr///9JSUmysrK4uLgoKCj///+7u7v///85OTkcHBydnZ0iIiKlpaXW1tb////R0dH19fV7e3uqqqr///////////////////////////////+XmCrPAAAAtnRSTlMAAgcUJTFCXnyWq7vJ1Nne4wwpRWzb7fX6/xY9YpK/5PYFOmWaxPgfS37nIlb7G1Kj6VMSSZ/uBDPg4XJD6Bhnxy6tCtdmdRB55Ql4CAFAK5D8aadzNtD///////////////////////////////+Z/////9r/////f////ze9//////////////////////////9I1nD/l/9P/4T/////rP/K////////k/////9U7w1EIKTqm5yptZEAAAZlSURBVHgBvM0DdgNRFADQl7Gt1za2k9q2vf+l9LBuM/h/7gYuJFNgWI4XRElWVE03TMs0dE1VZEkUeI5lCkCP7bierOq+FYQRfojCwPJ1VfZcxwYq5uYXiiW9XMG/VMp6qbgwPweEVWv1RtNs4Swts9mo16pATrvTLfUwrl6p22kDGf1BwxhiEkOjMehDdqPxZIrJTSeLI8hmaXllFdNZXVlegvTW1osbEaYVbRbX1yCl9pYWYhahttWGVLaVHcxqR9mG5Hb39pGE/b1dSOigWEYyysUDSKIgHA6RlOGhUIDYjsb7SNL++Ch2XT9GsoyTmLl9uomkbZ7aEMPZ+QWSd3F+BjNdXl0gDRdXRzDD9VYZ6ShvXc+o6xbSYtX/zatjH+nxx1X4081tE2lq3t7AX+4UpEu5gz+w9w9I18M9C7/b20Hapo/wK1dD+jQXfrH7FCF90dMu/FB9XsU8rD5X4buXV8zH6wt8c1YMMR9h8Qy+uHE3MC8b7s0baWbV2EYSBOEJvIU5fczMzHyPfklixpVvhGbmXTMzMzP9xbs1bvu05Z74ezWUpJ1Sd9Xw9PE13pGSU5IJw345Fe5QX/PE8ulDQqSlZ2SmkZCs9OwcCx63T1nce0qIQO4/OhgKk4iI+8vRGAGeeoPiR/BtW3n5+j+ilky6wP3lbCT+8CPP0y6E79qVdikSiBeX6EOyS8mfwtMn/l4Z+VKedvhGXDIsobRLRWUV+VH23slOXA3mV3J6UJ9QEyBI5FRaF9TW+c+z6uPlrb6B/EmJag8ZtkzaxWkkXxrqJbMzuSmoPYSayZeW1jZ9Slt7B8invx51C29hb4e0h7aKZn/pfO2hs6uc/HnrS+XyxtsEsTO0l24fn0d6mHRvXzlc3d5QLm/+QJhADRMPWT6+ZtIxgvzw5sEpf/kdwpDF33lRII65+rWXgUHCvPOye9KvNtC5WEXaS4YFfO3SO0Tn0XBVqYThERKIu07z93nEWJpGhhPU5VFRWxmu4O88DKTHYpLmc/Sy+nL8NZJgd7exA2d7zcWkJ/pIwGvjX/LHjcWZz7tPfN7Ife30kYhrH6rvRkhIOBrX5y3c12NCaRr5Tk3KF7WpOD6HvsYOn1T30VHDPs8IuL5uY74ektfs99U0jATY5zOzc2fMNWcQEqbVW0Z7uRViWvMO9jXi0VtqwSyFTXFx7GvI4wV1jSDY5wxnkYy4ppboguLY14DraoSMxaNxP/BSMmRE3SRjpthpx74G3FS3yJypGX2GZXNpuqWeq8ubndeMlVUy5zZ434CYoxlr62TOLfC88R7OqZkiY26qETKmpV//j6hNpoyY+5ta2OQ6mec2Gfv7Golh8/ri4tf497koX3ukGaEpMvs+N5xjVNxaoDk4NKA5Zja/aaOf+3qNhwaLjOa3fG9xpbm5llfXa2BowHuLYF+De7gVgj7H+xreU5F0Z4yIKNzNfR4m8Z4q38+phR8z52hoNvN5LrbatQ9BLgG+ZquCHQI+R7kE5DEc7T0LUpivzhVhkuUxkENRtB+IgXIgapEsh6qrr5CoskMRwMow9vkrV93eYfMdiTSOAIEiQ5+/s/kn6FuAr+dAaEAlIOtbUM+Efc1hPsclIOuZcL/GKjvm67M0V/iUA6hfU3//DKt4abRv5j6v2CLQK/4t6VO3d4K8spOWgAU5dahPlfTIKSF5BOA+n2hBPbKkP0/NyUeVHfB5rn+X++A90b1BuRUF+RqUA72xKsm9gfoILS+x7DYmLSsBnV2wsnwkvieKdbexaC8pATt3pfdEam+fAIsV+Tq/U5iv7Yqgzu9F0vt7/F7wM3QvWF5Z67R3kZCtnInWuSpwL/gZvxdMGMZrW11LB3HwL6Pe/vvhS/8Wb8c4CMJgFMcZGYTgZjd1JJFEGASDbE1o4lR7HU/BDdjcBOB+Jl1NsJ9t89413v+H/4EB//cT+fujeofTowF3Ht+TZ+Z7N4nvevA9E77jwvRrgG4P0Cuq+88wtk2Zj6WtQR5bhF761LDAdblvwx6Zx8575C20wyb05zt3qR6pP9fdvWBuJnR3T1ojHXkD2QT0DU6cxRD8tVFZ+pL9Ro0WruZq4WqSV3nBeiKLZfk0M/rmKc/wfgzv5qy8IF8MveDCjwc/TlKsOElBd5IUH9qt+tCO7kOJLrastYvto7hKqjjqtYutS7qL/QB1khMJp+jDFQAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), de = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/progressbar_base.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAcIAAAA8AQMAAADPOSjbAAAAA1BMVEX///+nxBvIAAAAAXRSTlNNSIvlSwAAABpJREFUeAHtwQEBAAAEACD/V3sBVAEAAECrBA2YAAF478ShAAAAAElFTkSuQmCC",
                        mimetype: "png"
                    })
                }), !0), ue = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/progressbar.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAcIAAAA8CAMAAADCKUqqAAAAolBMVEX2GCH3JS32ChP2BhP2FCH2ABP2BiH2fRH2hB/2uRD2vR72oxD2qB73mRH3nh/0sA71tBzt+Abu+BPt+gbu+hPt9gbu9hP59gb59hPk9gbl9hNM9gtV9hk09gs/9hlC9gtN9hlD9wZN9xRH/gBR/gUfvrwrwb8Knv8Yo/8SqvcgrvcGtfcTufcjm/cwoPd9RviEUPh/RPiGTvh6SviBU/iIXflOVrumAAAAaUlEQVR4Ae3RARUCQBQCMA5tZP9u5uD9rcLCuJcyLmVbmm0oVIhCFPLZxrfXAUDG0aAQhdwupOMAADKOBoUo5HYhHQcAkHE0tylEIQrpOACAjKO5TSEKUUjHAQBkHM1xClGIQn7j6NtG/9KtvIaPsMt0AAAAAElFTkSuQmCC",
                        mimetype: "png"
                    })
                }), !0), he = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/roundedbutton.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAABgsAAAFQCAMAAAC2+b7XAAABd1BMVEVHcEz////////////////////////////////////////////////////////////////////////////////////////////////////////////k5e7+/v7////////////////////////////d3un////////////////////////////////////////////////////////////////y8/fi4+3+/v7P0eDBxNjAw9f3+PrAw9fr7PLAw9ff4OvAw9fT1ePAw9fEx9rAw9f09fjm5+/Extn9/f7v7/Td3+rHytzAw9fx8vfAw9fb3enAw9fAw9fAw9fAw9fAw9fAw9fAw9f7/P3Aw9fj5O3k5u7Aw9fAw9fAw9fAw9fAw9fAw9f6+vzAw9fAw9fAw9fCxNjQ0uHAw9fAw9f4+fvAw9fLzt7W2OXAw9fAw9fAw9fNz+DAw9fAw9fAw9fAw9fAw9fAw9fAw9fU1uTAw9fAw9fAw9ehjzVlAAAAfXRSTlMABilHaImjtsrb7vP/C0J50vpKkvscb7n3F8T9Aq0PdOKL8etpAznPjlYv5zY+8C29XJbYuNyrqf+wucj/3v/n/+//8////////////7b/ov+LaEopBvvY/6v//3lGD/3Sk/9NDPj//3Ac/xf//3SQlv/rOeNWvS0//1dq1DIB3i4AAA1PSURBVHgB7N2HQhpNGIZRAQuBj7i4LCwCK4gUu+nJ/V/Y33svFmDOuYmHMjPv3ouq1er1RmN//+Dg8PDoqPnqVesb7XYA7K52u/WNV6+aR0eHhwcH+/uNRr1eq+2lQgsAtOAnnc7r18eHh1nW7UYEAN1ulh0eHr9+3eloAYAWJNCAk5M8bzZ7vQDgj/R6zWaen5zsZhO0AEALin5/MCjLAOCfKMvBoN8vtABgZ2jBcNjvn56OAoB/a3R62u8Ph3vbbDxuNCYTZ4UA/pdudzJpNMZjLQDYQlpQVWdn02kA8Dim07OzqtICgG2iBcVsdn4eADyu8/PZrNACgK2gBcNhnpcBwNMo83w41IKNBqAFVTWblWUA8JTKcjarKi3YSABaMB7v78/nAcBzmM8vLhYLLQDYMFqwXK5W8ZwAWK2WSy3YGABa0Onk+WgUzw2A0SjPOx0t2AQAWtDwBB3AC5pOG1oA8MK0oFZbrwOAl7Ve12p7L6Vez7IA4OVlWb2uBQAvQgsuL9vt2AwAtNuXl1rwzAC0YLGYzWKzADCbLRZa8GwAtKCqBoPYPAAMBlWlBc8CQAuKYmNPkgKQZUWhBQBPTguurq6vY3MBcH19daUFAE9LC25ardhsALRaN1oA8IS04Pa2HZsPgPPbWy0A0IInK0FZxjYAoCyfpAZaAKAFNzd3d7EtALi7u7nZe1z391t2gAiAVuv+XgsAHpEWFMV0GtsGgOm0KLQA4JFoQVVlWWwjALKsqrTgEQBowWLx8BAAbKuHh8VCC/43AC1YrwOAbZbnWvA/AWjB5WUAsO3evNGC/wFAC+r1djsA2HZlWa9rAcB/pQW1LItdAECW1bQA4D/SgnXsCgByLQD4T7Sg0YjdAUCjsfdvdTomC3YKwHTa6WgBwL+kBXkeSQPwMJEWAGjBcjkaxW4BYDRaLtNuAQC9f9OCxWK1it0DwGq1WGgBwD+kBfv7sZsA2N/XAoB/RAuqaj6P3QTAfF5VWgDwD2jBbBa7C4DZTAsA/pYWFEVZxu4CoCyLQgsA/oYWvH0buw2At2+1AEAL/EKUOoButyicIQJwlkgLAP6UFlRVqxW7D4BWq6q0AOBPaMHZWaQBgLMzLQD4Q1owHk+nkQYAptPxWAsA/oAWnJxEOgA4OdECgD+gBZNJpAOAyUQLAH5PC4bdbqQDgG53qAUAv6MF/UgLAH0tAPgdLTiNtABwqgUAv6EFRTGKxADwm6nLfj9SA0C/n3oLADj7dQsGg0gNAIOBFgD8ghZ0OmUZqQGgLDudtFsAQPeXLTBdAGDEQAsAtCDPI0UA5LkWAPxEC1arSBEAWaYFAD/QgqoajSJFAIxGVZV2CwDo/diCRiNSBUCjoQUA39GC4+NIFQDHx1oA8B0tmEwiVQBMJnvfevcuUgXAu3daAPANLajVer1IFQC9Xq2mBQGgBfV6pAyAel0LAkALbJoB2DbTAgAtuLgIAFJ2caEFAaAFBwcBQMoODrQgALTg8DAASNnhoRYEgBYcHQUAKXv/XgsCQAuazQAgZc2mFgSAFnz4EACk7MOHvevrACBl19daAJC6+fXe3V0AkLK7Oy0IAC1otwOAlLXbWhAAWhAApE4LANACALQAAP8dA/jvWAsAtMBdMwB3zbQAQAtSf5sOAO+UAjC/tmUTALZsms0AwN4xAIm34P37ACBlg4EWBIAWTCYBQMomEy0IAC34+DEASNnHj1oQAFrw6VMAkLJPn7QAQAu04BsAWvA5AEi7BV++BAAp+/JFCwDia/bqg0phIAoA4An4gkKHDZ/eu38ll0dRsTMmxgX9ftMEALVqmn7fBQDhgsFgOIxaATAcDgYuCAAXjEbjcdQKgPF4NPqbTKbTqBUA0+lk4gKAcMFsVkrUCoBSZjMXAIQL2nY+j1oBMJ+3rQsCwAXZWSyiRgAsFtlxAcCbC5bLqBEAy6ULAN5c0LaZpUSNACgls21dEAAumM0yV6v1OmoDwHq9WmXOZi4ACBdMJtnZbKI2AGw22ZlMXAAQLhiNsrPdRm0A2G6zMxr9DQZVXwDggsHge8FuF7UBYLf7XrDf59sh6gLAId/2excAhAuOx3w7RV0AOOXb8egCgHDB+Zxvu6aJegDQNLt8O59dABAuuFzyYzyOegAwHufH5eICgHDB9ZofpUQ9ACglP65XFwCEC263/BkOow4ADIf5c7u5ACBccL8/Hvmx3UYdANhu8+PxuN9dABAu+Pt7PvNjPn+9AuC/vTtKSxsL4zB+FpAleMsefFDokOQLgKklRSgQCcFCIIBQhUqndvHT6TydtAIVEAXi+9vEe3Hy/YP4y+dNU/7z4YP6Fy0AAFpQq8lP9boGAIg/15WfajX1r8vLV9sCAKAFl5cPW2CzUAcAr2KVzn7YgkZDItmsFm8AgGxWIo0GLQCAH2iB5zWb8pNt5/MaACC+8nnblp+aTc9TtAAAaMF/fF8irqsBAOLLdSXi++onWgAAtKDVkohpXl1pAIB4uroyTYm0WrQAAP5HC0ol+VWxqAEA4qlYlF99/EgLAOB/tKDd7nQkEgSWpQEA4seygkAinU67rWgBANCCSDIpv+p2NQBA/HS78qtkUv2KFgAALej1JMJGXZwBYJMu0uvRAgD4DS0IQ/ldLtfvawCA+Oj3czn5XRiq353QgtcFAC1onqiHTuQBXdcAAPGh6/LAfAt6MsfV4gIA4MqcHi2YAwC0YFCpyAMxOj8GAA6O5YFKZaBoAQDQgjm1mjw0HMbg58cAgHx+OJSHajU1jxYAAC0olWTe9bV26AAA19cyr1SiBQCwAC04OkqlZJ7raocMAOC6Mi+VOjpStAAAaMEio5HMC4JCQTtUAIBCIQhk3mikFqMFAEALPC+TkXmmeaA3ZwAAyzJNmWcYnqdoAQDQgmUcRxax7QP8mQEAoN+3bVlkPFbL0QIAoAVhWKnIIsNhtaodEgBAtTocyiKVShiqP/n0KeYtAABa8OmTUuu0IHJzc1A1AABKcHMjslkLwrDTkcW63QNZLQUA5PPdrizW6YQhLQCACC1Y41uiqAba/gMAzJcg4jjqcbQAAGiB593eyjI8IAPAQTwbyzK3t573xBYEsW4BANCCyPv3stTNDSfIew0A+v2bG1nq/Xu1GloAALQgkfB9Wcq2mS3dWwBgWbYtS/l+IqFoAQDQglVNJs2mLGWae/mrMwBAoWCaslSzOZkoRQsAgBasodWSPwgC19X2CwDAdYNAImtv0tECAKAFc9rt6VT+6Pqaqbq9AQD5/PW1/NF02m4rWgAAtGBdjYY8Yjjk69K9AACWNRzKIxoNtYlxbFoAALRgrNTTW8AbMgAc6pvxk1pQ9n15nM5A0Q4BQL+vy+N8v6xoAQDQgg1dXBiGPCqXy2a1XQAAZLO5nDzKMC4uFC0AAFqwuc+fZSXd7vm59pIAAJbV7cpKPn9WihYAAC14EseRlQRBsXh1pb0EAMDVVbEYBLKS8Vg9FS0AAFqQSNzdyYpMs15npAgAnlk+X6+bpqzo7i6RULQAAGjB03me78vKbNt1yQEAPJe869q2rMz3PU8pWgAAtGArwnA6lTXY9Xq1qgEAtqtarddtWcN0GoZK0QIAoAVbM5tlMrKOXO7s7PRUAwBsx+np2VkuJ+vIZGYzpWgBANCCrZpMDEPWpevp9PGxtjkAwPFxOq3rsi7DmEzU9n35Yhi0AAAOogWG8eWLUrtuQcQ0i0WG6zYCAOfnxaJpSmSXLYhqIBuyz84KBW6SAWBFx8eFwtmZLRuKSkALAIAWPIdJJiOby+V03XUtS1sGAGBZ2ezff+dysrlMZqIULQAAWvCcZrM3b+SpTFPX/0qnLevHN0YAgONjy0qn/9J105SnevNmNlPP6ogWAMDrbUEkDH1ftiQIhkNdLxbr9XS6UDg/Pa1+F+sXZgDI56vfnZ6eFwrpdL1eLOr6cBgEsiW+H4bq2R3RAgB4vS2IeF4yKQCA/ZNMep5StAAAaMELSSQcRwAA+8VxEgmlaAEA0IIX9fWrYQgAYD8YxtevKkILAIAWvJzZzPdl9wAAvj+bKUULAIAW7Ei5PB7LbgEAxuNyWe1WYzqVXQEATKcNtXu0AABogWq3W61mU14aAKDZbLU8T9ECAKAF+2Iy8X15SQAA359MVIQWAAAt2AeJxP397a28BADA7e39fSKhFC0AAFqwhzzPcTodAQA8p07HcTxPRWgBANCC/TMYjMfkAACeS2c8HgxUhBYAAC3YX6HjGIYAALbLMBwnVBFaAAC0YO953miUSgkAYDtSqdHI81SEFgAALTgUR0elUq1WqQgAYHOVSq1WKh0dqQgtAABacHgGg17v5EQAAOs7Oen1BgMVF2Gvl0xykwwAK6pU7u5Go1BFaAEA0ILYaLdLpfHY95tNWQQA0Gz6fqv18WO7reKqTAsA4JW3IOJ5jcZlrfbtW6UiIgCASuXbt1rtstHwPBWhBQDw2lrwLmrB61IuX1yUSvf3jvPu3du3J6lU5jvDkPgCAMPIfJdKnbx9++6d49zfl0oXF+Wyej1oAQB0frTgw1614B8O9dk1ogmT5QAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), fe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/roundedbutton_small.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAABgsAAAFQCAMAAAC2+b7XAAABd1BMVEVHcEz////////////////////////////////////////////////////////////////////////////////////////////////////////////k5e7+/v7////////////////////////////d3un////////////////////////////////////////////////////////////////y8/fi4+3+/v7P0eDBxNjAw9f3+PrAw9fr7PLAw9ff4OvAw9fT1ePAw9fEx9rAw9f09fjm5+/Extn9/f7v7/Td3+rHytzAw9fx8vfAw9fb3enAw9fAw9fAw9fAw9fAw9fAw9fAw9f7/P3Aw9fj5O3k5u7Aw9fAw9fAw9fAw9fAw9fAw9f6+vzAw9fAw9fAw9fCxNjQ0uHAw9fAw9f4+fvAw9fLzt7W2OXAw9fAw9fAw9fNz+DAw9fAw9fAw9fAw9fAw9fAw9fAw9fU1uTAw9fAw9fAw9ehjzVlAAAAfXRSTlMABilHaImjtsrb7vP/C0J50vpKkvscb7n3F8T9Aq0PdOKL8etpAznPjlYv5zY+8C29XJbYuNyrqf+wucj/3v/n/+//8////////////7b/ov+LaEopBvvY/6v//3lGD/3Sk/9NDPj//3Ac/xf//3SQlv/rOeNWvS0//1dq1DIB3i4AAA1PSURBVHgB7N2HQhpNGIZRAQuBj7i4LCwCK4gUu+nJ/V/Y33svFmDOuYmHMjPv3ouq1er1RmN//+Dg8PDoqPnqVesb7XYA7K52u/WNV6+aR0eHhwcH+/uNRr1eq+2lQgsAtOAnnc7r18eHh1nW7UYEAN1ulh0eHr9+3eloAYAWJNCAk5M8bzZ7vQDgj/R6zWaen5zsZhO0AEALin5/MCjLAOCfKMvBoN8vtABgZ2jBcNjvn56OAoB/a3R62u8Ph3vbbDxuNCYTZ4UA/pdudzJpNMZjLQDYQlpQVWdn02kA8Dim07OzqtICgG2iBcVsdn4eADyu8/PZrNACgK2gBcNhnpcBwNMo83w41IKNBqAFVTWblWUA8JTKcjarKi3YSABaMB7v78/nAcBzmM8vLhYLLQDYMFqwXK5W8ZwAWK2WSy3YGABa0Onk+WgUzw2A0SjPOx0t2AQAWtDwBB3AC5pOG1oA8MK0oFZbrwOAl7Ve12p7L6Vez7IA4OVlWb2uBQAvQgsuL9vt2AwAtNuXl1rwzAC0YLGYzWKzADCbLRZa8GwAtKCqBoPYPAAMBlWlBc8CQAuKYmNPkgKQZUWhBQBPTguurq6vY3MBcH19daUFAE9LC25ardhsALRaN1oA8IS04Pa2HZsPgPPbWy0A0IInK0FZxjYAoCyfpAZaAKAFNzd3d7EtALi7u7nZe1z391t2gAiAVuv+XgsAHpEWFMV0GtsGgOm0KLQA4JFoQVVlWWwjALKsqrTgEQBowWLx8BAAbKuHh8VCC/43AC1YrwOAbZbnWvA/AWjB5WUAsO3evNGC/wFAC+r1djsA2HZlWa9rAcB/pQW1LItdAECW1bQA4D/SgnXsCgByLQD4T7Sg0YjdAUCjsfdvdTomC3YKwHTa6WgBwL+kBXkeSQPwMJEWAGjBcjkaxW4BYDRaLtNuAQC9f9OCxWK1it0DwGq1WGgBwD+kBfv7sZsA2N/XAoB/RAuqaj6P3QTAfF5VWgDwD2jBbBa7C4DZTAsA/pYWFEVZxu4CoCyLQgsA/oYWvH0buw2At2+1AEAL/EKUOoButyicIQJwlkgLAP6UFlRVqxW7D4BWq6q0AOBPaMHZWaQBgLMzLQD4Q1owHk+nkQYAptPxWAsA/oAWnJxEOgA4OdECgD+gBZNJpAOAyUQLAH5PC4bdbqQDgG53qAUAv6MF/UgLAH0tAPgdLTiNtABwqgUAv6EFRTGKxADwm6nLfj9SA0C/n3oLADj7dQsGg0gNAIOBFgD8ghZ0OmUZqQGgLDudtFsAQPeXLTBdAGDEQAsAtCDPI0UA5LkWAPxEC1arSBEAWaYFAD/QgqoajSJFAIxGVZV2CwDo/diCRiNSBUCjoQUA39GC4+NIFQDHx1oA8B0tmEwiVQBMJnvfevcuUgXAu3daAPANLajVer1IFQC9Xq2mBQGgBfV6pAyAel0LAkALbJoB2DbTAgAtuLgIAFJ2caEFAaAFBwcBQMoODrQgALTg8DAASNnhoRYEgBYcHQUAKXv/XgsCQAuazQAgZc2mFgSAFnz4EACk7MOHvevrACBl19daAJC6+fXe3V0AkLK7Oy0IAC1otwOAlLXbWhAAWhAApE4LANACALQAAP8dA/jvWAsAtMBdMwB3zbQAQAtSf5sOAO+UAjC/tmUTALZsms0AwN4xAIm34P37ACBlg4EWBIAWTCYBQMomEy0IAC34+DEASNnHj1oQAFrw6VMAkLJPn7QAQAu04BsAWvA5AEi7BV++BAAp+/JFCwDia/bqg0phIAoA4An4gkKHDZ/eu38ll0dRsTMmxgX9ftMEALVqmn7fBQDhgsFgOIxaATAcDgYuCAAXjEbjcdQKgPF4NPqbTKbTqBUA0+lk4gKAcMFsVkrUCoBSZjMXAIQL2nY+j1oBMJ+3rQsCwAXZWSyiRgAsFtlxAcCbC5bLqBEAy6ULAN5c0LaZpUSNACgls21dEAAumM0yV6v1OmoDwHq9WmXOZi4ACBdMJtnZbKI2AGw22ZlMXAAQLhiNsrPdRm0A2G6zMxr9DQZVXwDggsHge8FuF7UBYLf7XrDf59sh6gLAId/2excAhAuOx3w7RV0AOOXb8egCgHDB+Zxvu6aJegDQNLt8O59dABAuuFzyYzyOegAwHufH5eICgHDB9ZofpUQ9ACglP65XFwCEC263/BkOow4ADIf5c7u5ACBccL8/Hvmx3UYdANhu8+PxuN9dABAu+Pt7PvNjPn+9AuC/vTtKSxsL4zB+FpAleMsefFDokOQLgKklRSgQCcFCIIBQhUqndvHT6TydtAIVEAXi+9vEe3Hy/YP4y+dNU/7z4YP6Fy0AAFpQq8lP9boGAIg/15WfajX1r8vLV9sCAKAFl5cPW2CzUAcAr2KVzn7YgkZDItmsFm8AgGxWIo0GLQCAH2iB5zWb8pNt5/MaACC+8nnblp+aTc9TtAAAaMF/fF8irqsBAOLLdSXi++onWgAAtKDVkohpXl1pAIB4uroyTYm0WrQAAP5HC0ol+VWxqAEA4qlYlF99/EgLAOB/tKDd7nQkEgSWpQEA4seygkAinU67rWgBANCCSDIpv+p2NQBA/HS78qtkUv2KFgAALej1JMJGXZwBYJMu0uvRAgD4DS0IQ/ldLtfvawCA+Oj3czn5XRiq353QgtcFAC1onqiHTuQBXdcAAPGh6/LAfAt6MsfV4gIA4MqcHi2YAwC0YFCpyAMxOj8GAA6O5YFKZaBoAQDQgjm1mjw0HMbg58cAgHx+OJSHajU1jxYAAC0olWTe9bV26AAA19cyr1SiBQCwAC04OkqlZJ7raocMAOC6Mi+VOjpStAAAaMEio5HMC4JCQTtUAIBCIQhk3mikFqMFAEALPC+TkXmmeaA3ZwAAyzJNmWcYnqdoAQDQgmUcRxax7QP8mQEAoN+3bVlkPFbL0QIAoAVhWKnIIsNhtaodEgBAtTocyiKVShiqP/n0KeYtAABa8OmTUuu0IHJzc1A1AABKcHMjslkLwrDTkcW63QNZLQUA5PPdrizW6YQhLQCACC1Y41uiqAba/gMAzJcg4jjqcbQAAGiB593eyjI8IAPAQTwbyzK3t573xBYEsW4BANCCyPv3stTNDSfIew0A+v2bG1nq/Xu1GloAALQgkfB9Wcq2mS3dWwBgWbYtS/l+IqFoAQDQglVNJs2mLGWae/mrMwBAoWCaslSzOZkoRQsAgBasodWSPwgC19X2CwDAdYNAImtv0tECAKAFc9rt6VT+6Pqaqbq9AQD5/PW1/NF02m4rWgAAtGBdjYY8Yjjk69K9AACWNRzKIxoNtYlxbFoAALRgrNTTW8AbMgAc6pvxk1pQ9n15nM5A0Q4BQL+vy+N8v6xoAQDQgg1dXBiGPCqXy2a1XQAAZLO5nDzKMC4uFC0AAFqwuc+fZSXd7vm59pIAAJbV7cpKPn9WihYAAC14EseRlQRBsXh1pb0EAMDVVbEYBLKS8Vg9FS0AAFqQSNzdyYpMs15npAgAnlk+X6+bpqzo7i6RULQAAGjB03me78vKbNt1yQEAPJe869q2rMz3PU8pWgAAtGArwnA6lTXY9Xq1qgEAtqtarddtWcN0GoZK0QIAoAVbM5tlMrKOXO7s7PRUAwBsx+np2VkuJ+vIZGYzpWgBANCCrZpMDEPWpevp9PGxtjkAwPFxOq3rsi7DmEzU9n35Yhi0AAAOogWG8eWLUrtuQcQ0i0WG6zYCAOfnxaJpSmSXLYhqIBuyz84KBW6SAWBFx8eFwtmZLRuKSkALAIAWPIdJJiOby+V03XUtS1sGAGBZ2ezff+dysrlMZqIULQAAWvCcZrM3b+SpTFPX/0qnLevHN0YAgONjy0qn/9J105SnevNmNlPP6ogWAMDrbUEkDH1ftiQIhkNdLxbr9XS6UDg/Pa1+F+sXZgDI56vfnZ6eFwrpdL1eLOr6cBgEsiW+H4bq2R3RAgB4vS2IeF4yKQCA/ZNMep5StAAAaMELSSQcRwAA+8VxEgmlaAEA0IIX9fWrYQgAYD8YxtevKkILAIAWvJzZzPdl9wAAvj+bKUULAIAW7Ei5PB7LbgEAxuNyWe1WYzqVXQEATKcNtXu0AABogWq3W61mU14aAKDZbLU8T9ECAKAF+2Iy8X15SQAA359MVIQWAAAt2AeJxP397a28BADA7e39fSKhFC0AAFqwhzzPcTodAQA8p07HcTxPRWgBANCC/TMYjMfkAACeS2c8HgxUhBYAAC3YX6HjGIYAALbLMBwnVBFaAAC0YO953miUSgkAYDtSqdHI81SEFgAALTgUR0elUq1WqQgAYHOVSq1WKh0dqQgtAABacHgGg17v5EQAAOs7Oen1BgMVF2Gvl0xykwwAK6pU7u5Go1BFaAEA0ILYaLdLpfHY95tNWQQA0Gz6fqv18WO7reKqTAsA4JW3IOJ5jcZlrfbtW6UiIgCASuXbt1rtstHwPBWhBQDw2lrwLmrB61IuX1yUSvf3jvPu3du3J6lU5jvDkPgCAMPIfJdKnbx9++6d49zfl0oXF+Wyej1oAQB0frTgw1614B8O9dk1ogmT5QAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), Ae = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/chicken.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), ge = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/bullet.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAADQAAABiCAYAAAAfr/ABAAAA0UlEQVR4Ae3YgQbDMBRG4cn7v2xhy01KBvlLHyHHKYcY8Lm5VWtrrWtxnqt9YI8gQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQa9H0L3P98nFgATN/cM8uRgCGogCohRQkcqECnDdCjuhTqplXJBGJvQ7fTIxPCBIHblDBbpy1fYBE2+H9uF7OiaG7FCHBN0h0JXr7LccoI78lgO/5QAhv+WKFHKHAqrDe0CDFPJPkkkKd+X+CN5PNiHXwmMAAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), pe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/logo.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAHUAAABZAQMAAAA6pPmyAAAAA1BMVEVHcEyC+tLSAAAAAXRSTlMAQObYZgAAABNJREFUeAFjGBRgFIyCUTAKRgEABZAAAWWGYOUAAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), ve = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/rabbit1.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), we = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/rabbit2.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), ye = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/rabbit3.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), me = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/rabbit4.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), Ce = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/rainbow.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAACAAAAAEsBAMAAAClf06dAAAAElBMVEX2ChP2oxDt9gZC9gsSqvd6SvhmXO9DAAACa0lEQVR4Ae3UgRSAUAADwCmkkEIKKeSvksbf2x3EBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAw3HNAgQAAgAEAAgAEAAgAEAAgAAAAQACKAYIAAQACAAQACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABAAIABAAIAAgNzBLACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQAC6AACAAQACAAQACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQAJBnFiCADiAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAyAvMEgAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAUEwAgAAAAQACAAQACAAQACAAQACAAIB8wCwBgAAAAQACAAQACAAQACAAQACAAAABAAIABAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABAAdBAAIABAAIABAAIAAAAEAAgAEAAgAEAAgAEAAwA+F5UOq7O+T+gAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), Ie = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/square1.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), Ee = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/square2.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), Se = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/square3.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), be = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/square4.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), xe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/star.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAMAAAAL34HQAAABfVBMVEVHcEzs5vAAAAf3RSTlMAH0BggJ+yxtns7vL/sydilcLvKCRsseoBOY7bjyqL4CsLGIXtmvgblvkcDIT2W+ZcviUEdyLF8V0Hmx7KOOlTVHD9cX6JinJO/k839R3LnCAhA3j3v15f5IOYmRkK62HELOE63CNtbmPD8IHH2ujzgpflnVFzfwh5JoziKaD0eLroRwAAA5FJREFUeAHEwYNhBFEABNA5a8627bX7LysNhB+b9yApk83lC8VSuVKtkbVqpVyqF/K5bAb/ptFstTv8QqfdanaRtl5/MOSPhoN+D2kZjSdT/tp0Nh5Bv/liyT9aLlbQap0rUUgpt4Yum+2OwnbbDXTI7A+UcthnoNrxdKa08+kCla63O5W4365QZfR4UpnnawQlem8q9TYgz7TuVOxumZBkO9TAsSHl5VIL14M4P6A2gQ9BYUSNohBC4oRaJTEEfFBzDwpyxnAQwKfW1MrV7tm2bdu2/e51z+v9krnfI+x+SjL/KUmix5JKEbKycnquvAIhqqQVlQiFqaIlVQbBq6Y11fb/wej+jxW0qgZBqS2nVXX1CEJDIy1rbEBATS9p3csCBJDXTAea8+BfC51ogV+pdCQVvqE1h47ktMGn9lt05lY7fMmkQx3w4VkSHer0sU4zaXSqy+Ai3XSsBxdI6KVjvQk4r4/O9eGc7510rvM7znpEAbE4ozWOAuJacVo/JQzglMEkSvg2qHQb+rgZh4YpYvgjjo1QxgiOjVJGNo58oJCx82t7Be/wj3lPIeMGfxVRygT+ekMpb/DXa0qZxB9TFDOF36YpZga/vaCYFwBghilm2AB4SjkPAMxSziyAWMqJBTBHOXMA5ilnHiigoAJcpaCruEZB17BAQX24QUE3cJOC7mORghaxREFLWKagZcxT0DzuUdAKKAmUhBUKWlG95EUfEKKPU9GXj+arWvXDZpWC+nCNgkZUlxiiCzLR5avkYl90a0R3I+kp5TyV3KS8YzS3dEU3wEWPC5QPV1SPotQO7kSPObUPhTFGIWOagQPReIZomEU/+oPBTsmgFAYkY2WqITzEUsCaesDzSCKdS5QMD68n4AI9klFrmC7JYDrSOxVj/ECH5NCD6ogIsnLoyL0syfGjXMlhrY3LOdqGAslBQNWxSWCzjlbVlSAoNbRqC0HapkXbCNo7WvMOwTPVtKTaIBTbWv/gkYo6eq6uAiErTaLHOksRhpiX9NTLGISloJkeai5AmHZa6JmWHYSv26t6nW79MqJwZHREv7ppNwORS+9iVHXtISpMTzRrwa4Z8RK1KIhfi0bl3Fo8oq014oK+/FbJOkPB8seRj/DU2P4BQ3SwP2alWPSNXrHoUQ3rMAMatlfDesQcPoydm6cP83OxDw8N7Ps5+BG/BbW8oCN+63h46sBH/NYWxFN8xC8AmSmjKhsiYGgAAAAASUVORK5CYII=",
                        mimetype: "png"
                    })
                }), !0), Be = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/pixel.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAJYAAACWAQAAAAAUekxPAAAAJElEQVR4AWL4jwH+ANqRQwIAAAAAQf9fe8MAEeecc69zzjnnApnXFcIQNwI9AAAAAElFTkSuQmCC",
                        mimetype: "png"
                    })
                }), !0), Pe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/reload.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAlgAAABcAQMAAACIplmgAAAABlBMVEX/8ABHcEwsF61WAAAAAnRSTlP/AOW3MEoAAACISURBVHgBYoADfkA7doABMRBEQRQ5WO5/mxxg+MmgRFrDxADqg91WHlg2kmS8X89c88ZKRZOnYtHS6iyy3oKi+kRYZVpajJ8cVlixqGZ0cKPK6CwtLS0tLS57LC0ttmKxZUtLK2yDpaVFxWXHf62WVnxe1dLq3g2xhE+dxX5aWlpgRK2Vamlp3Uq767KMgbi0AAAAAElFTkSuQmCC",
                        mimetype: "png"
                    })
                }), !0), Qe = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/bullet_enemy.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), Re = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/bullet_hero.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAADQAAABiCAMAAAAocQAzAAADAFBMVEVHcEwAt5kA4bsA++EA/+sA/+4A+uIAxqYAKyEAalcAtpgA8toA/+8A//cA//sA//kA//QA++cA7tAAIBcANCkAa1YAy6kA//AA//+3//z////7//+Q//sA/eoA/eQAOC0AWkgAhWwA17dR//oAeGIAUUIASz0AfGQArY4A/Nvv//7i//71///G//zc//3q//4A//QAmH4AZVIArpIAnIQA07Gp//ua//p4//qi//sA//wAwaEAXksAZVIAnoUAs5UA5sRg//qF//uv//y///z6//8A79UAZlAAV0gAiHEAPzEA//Xy//9r//oAUD8ALSIAgWsAJBkA//L4//8APC8AMyYA/+3n//0ALCAAMCUA780A/+oA/+AAwKEAMygAKyIAKyAAjnYA/+UA++IA9twASz0AQDIA9NTS//38//8A+dgAp4wAUEAAQjQAXEsAa1kAfGY4//kAUEAAdFsAhG4Ay6r+//8ApYoAvJ8AupwAvJ4AjnYAs5aW//sAv6EAw6QAPjEAUkIe//wAYVAAx6YAdGAAXUwA370AZFIAVUUAUUEAIRcAc18A//UAhW8AuJkA/uAA//YA/+8Aj3gA/eQA//QA//IA//UAnoUAXk0A/uIA5sgAdmIA17YA48EAhnAA27kA/+UA0bAAsJIA6MUAr5IAln4A89YAxaYA//UAwKEAqIwA2bkAp4wA/ucAspQA/+8AyKkAdGAA//H7//8AbFrx//7////n//77//4Av6EA1bUAZVPa//0A27nL//0Az64AposAup0ALiQA7cwA/+Kk//yy//sAi3QAMicA6MgA9dNT//0K//YAoYcAemUAhm92//qH//oAknoAXk0Ad2IA7s0A5skAdmIAfGYA+OYA//lv//kAIxkA17RJ//gAU0MAwKFe//kAVUUAl38z//sAn4YA9NQA//gA58YAiHIAk3sA9dgAyqoAXUwA//cA5MQAZ1YA2bcA//QAQDMAemQA//AA/uYAKyAA9NQAeWMA8tMA8tMA7MwA3LwApYtjGFnaAAABAHRSTlMAMktgUkpDGTOOy////////+yyIqv///////////98Xvn///9mDUj+///////////F+6H1//3/////+93/IZj//////////P/CHP//////SKP////A/////4n/////mRLv/v///whT//////6Mh7MC0v/0/zs5/19d/nx6ov+6xgHc/+z/LzX+RWFrVXb65XHu6/nny9v1zuxSotxJz6JSjVZ43Sm9WMD04RKDrfDWSjWSBcD+pfr7+PnwnW/35/Xhyoop8/Pv8ZQY7+7x79mKze3pz4XE6ukVt+Xm5znj4Jrp33dn2bvT08+vts3KPcnFzMC6dpaxqmihq5iSi4Jv2IP5qgAAB+ZJREFUeAGVzwVUW/fiwPHvdZKQQpC6u7sBdew//o+k8501e3N/Mvf2ZG6V+SrzheevO6Gur6U+oZ3BaGFbcYdBpBRu7qPPjl0g+V6Xz72/n4hpgihJsqJqmGaGYizW7myX9gliZCgxyf6vYu02m00dMjwSNKL7fTFWFBDACIv6RXXsuL7Q+JiYgEaIeEd8QnxiUjIJk+32PtA4u90yomYAiS22ZlGwNltGtHbPbHHvaFBsTNA2q2FCcFL1ZAz7YL5z2LrrFV1Wr/cTbCWWL5OFifWMrrcLy6qKv7mgunpDWlPyFxXNs2bEnf/SaNK1cZ9/dzqtlS+blV5QYuMyOdH+k+1gP386TC0+geEvyAnIVXJMzyhrkFQzm/SdxjSD+JQfYJkriy6XZZF+TY/oRq2rY9yOVM02p97VeaK0E84Tu+Sglq61ibf3hLQA2g4h2c94a2eZC0VJadx/4pjeHhcae6G+J6RKWmXi9e1dwePa3tbjnV10MD81SwzonbvahveExLa2GdOKrExNPTaRYZPkzp/5sp3wEV3N1Gt6QL8XZXkXhGkr6WhzFbYNG41r5d6u2zC+8p8dPs4cbTzcMW6sfbD/4MTTemspwMh6XxrHhb3syCl1maPfhQbvSA5ZDqft74rle3eR9uPP0CCXMG95164SyRxJAwYOhD8HgkKWMHtKu3PM6HBxSiX/H+7oyKmb3xPiRJnvtLQ0FFvJj/3Iz9NQSgn4xIL2roQK0Rytp65drpjbmDmp0j3kpN1JyaSxCIXL597XdZDBPaBJqXNiyPIbe6rxfm94fZNHtp1IXSicDzYcXAGCOeqPBh1ZFXaZFMBNx1h8JzAoRaZ6/+/NkCelknso2JuU1ABul9s7q8gOCLq1LW1nZvmFs2boJ3HChS90qvgeTuSVtuOlHVglFlUUgD+8yAxt3+Pb4ee2wSwCgUt/WeUDvGGmiJAdFMxQoOQKo5wz9gE+N5MB8AIwWjKQLw5tFs1Qduy33EgoiKudIgDA7YKKX4Kz01RsH5ihAYnxrLvNSk2+nf9VKpCyxCIc9VdeMckMjfFDON/mnzjF68IJABRBARa/cXgPmCFhgB6mfmy4f1WKnXwAaAdatWOS0DFi6yIzJKZKLOGM4RM7vE7wAtgXLgTIIO2KWzFDLbZ/eAr4csm1YuEUnE4AyjpOClTrZ9D22M6ZoSTfnTKZ0uC/GRTllwJAsW3VQvz3Fa1ZNljBDDU0ybJH7nq7mxuTa3y4AaW4rD/NDU6LgjLHDJGoiqiOtOnj9ZSxE9yuPJcL9BLfpPbjH4Sk5VskU3TXc5teC2ftPXqutbig2JtPaT5IIwUyE8Oe5yRMUbL0LDnTjrtiJq4Sm8HpHAtdqT/GFbeell6uku/DDFXLt902cuusmKWKVxjRCj6fgS35F2l2qEvrFL4VNTNkcxuJo1zTQvYdSQMS3dgBsl8zfh5X7woMFOapmCEPgqKUbDlJOKnuWB5egDMSxE4UchThGtlihuCvyvly/+1/Xny2/GYDAArSkI4ODNur4bor8k2R/2Jgavaea2xDF33rBoC5DE8rDk0LjfgLj6vbTNGt5wlmccFuLahvB9yQdOz7YzRumHYjeP6aa4qG68SVME0okib5NqdsXgI3pN2WZhzL3roWKDxghjzLysKZ4YD+x9HP3Pi+fKsivv++tOLUioR55c8P8wOvm6LcQ99q4YxA2pWIhiLqoiHClSxZ428PAh7MEM5y6+eMOI6CpoGIpooWiwVxfbUDwByx75epRjB1zRxZs4iapogxBswoeXJ1mXprz0i91TmRSlVF1WJiYiwx9Fswg4w3UzI1ekSeXU70FUMvskAAq9VmU21HvlBLlFc05dOekQd+UGYkxGYcPQrA0UNPpxlDxf87tXN6jwjAISPUnMrJMWw2wU/OKVts2yamXUmvaPejCTUjobC/IVljB6LXsuIBv/OZF3tFWx6bQDmFqIWSaqfw6MhjrF3Lx2qviG3Xi09+19jIfJ2d3YfyMQ2PvgdbPL2hdXefrrgLkHbuBOBJcf4frAC9odx9pQ1TUgYNkq68Ur1y0CDnXU8qOIBe/3Tgezlb2Z5SDfBZCttnvqm/7+nrT1B1w0CneN1n3SEuWal/opykL5TuaPrE2L5933WX0vRhHz29aWOfiN1lOylfyfJLiZYtT/PAur7R2qa4O159/bJnL7Vu3fJrr137q76R+8OrAXEZy5b5x4+H2JfUPtGBc+c25m2ZAMuA5cuV8UwZ0id6HRZ3v7xX6u5eRTEesM709ImAJ0D5RgA2Gwb+zeuJBE08qxhhURAE4uPv2BE/PyK05YBxB3z66adx+8iLv+G3ESE2ttxekAc3Hl69L6kl1xMZeqx09SvDbrxRZOvqL+7YRkTIU796K0FRPFTA1riNuRGiXZ8wDUGoemXN2j/uKowMURtHkkMQHFonxlpPhGjdoseBTx0KlL1DhKhwJl/UCb+uA+HQ8UiRZ/2HO67CeyaOF3etihRRXWXg/QHH7CnVnoj/9F6j/hjJDnl1nUrE6OMFR2c03QfXDnNHjIANHVRd++aoc6uiQbn6fTiu8OCJBq27omqZPB+IBhVuhDeviBJ5jILbj26JFu3uYD3RoljeqY4WsUHPVqNGuY117qjRsjtYFjWysn5L1MixcQpRI56xRY88+3ZGj1j5TvQI1OiRZ2du9KjFXdgz+id+lfH3LyoAggAAAABJRU5ErkJggg==",
                        mimetype: "png"
                    })
                }), !0), De = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/fire.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), ke = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/square0.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), Me = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/BG_cloud.png", {
                        b64blob: "",
                        mimetype: "png"
                    })
                }), !0), He = Host.bootstrapper.load((function () {
                    return XS.assets.__importPOG("i/g/BG_planet.png", {
                        b64blob: "iVBORw0KGgoAAAANSUhEUgAAAfQAAAHMCAMAAAAUIap4AAAC1lBMVEVHcEwcd/LuAAAA8nRSTlMADSQ6T2Bwf4+erbvBzNbd6u73//jCAx48WnWRr8jiTXKUttn5twIjVH6o0AU0Z5XF8yZbxwQ1ruk2eLr0KG3vCkqT29wZtWgaJXbG/Xd90yDNzg9m/sOq9oXlhgdVHD+r+0Bj0RJ65yGSKaKjMawyszMtqZqbEIT163EGSNUqAV0sikUToVZXFlMRp0Pji88rYgykMNpkZQidR+xz/HRswBvS4EJETFFS+jvwsZZuTqWmeXsi7Q6MnxSXPR8Y8fKgvkthCQvofGvhXrhfvR1GjmlcmEE+apDYjbTXst5J5NS/yRVvy1icLubEJ7nfsDe8gZqXanYAAA9GSURBVHgB7NDDAcRAAEDRiW3bNvqvbVPCWpl3+ucPzgBBMZwgKZphOV4QJVlRFFU76EfIkigYHMvQFEngGIoA6JeZlu24nh+EqnYDNQx8z3VsywTQDzHRKE7SLNcekmdFEkeoCaDvVlZ103a69kR611I1WgLoC/XDOM2L9iLLPI1DD6DvsW7ermovp+7etsLbF3brQcfOAIgC8AS1e9JGG9Rhg7Vt77Vt2773uWub+2Pme4ThUd7k1MXpGZyjmemLU5MklHJ/dm5+AQpYmJ+blYCngMWlsWUoaHlsaZHE+VlZXVuHCmysra6QOAebz7fuQjXuPtzeof9K7O7tH0BlDiYOJdP/v44fHUOljo/+Q9/Fyd4pVO1s74T+IWEw3jNB9Uxmo4H+CTG5arFCI6yW1Un6W+KZzQ5NsTuekfgLTte1A2jOwTWXk8SfcdtmoFEzNrf07w94vD5omM/rJ/FbnIEgNO84IFf+14XCEehCJBwi8SuisQXoxkIsSuJn4gkfdMWXjJP4kZT3ALpzkE6R+J5M1gRdMmVzJL4lP22Cbpmm8yS+tFg4gK4dFOIkPrVZ9EH3fKVNek+UK1WwYK2U6TUxuVQDG7V6gwQ1W2Cl1STu2k/AzpM2cVaO+cCQL1YmrjrdCJiKdDvEUu86GLveI35W+j6w5uuvEDODW2Dv1oA4GY7wihgNX7JvTwuSxVAUhlu3Y9u2bdu2bbVt27Ztd9eDje2ZSnZ2ctb/COsrHFrHPHgwvD80OMQi5KGngP2ly6FWMA9bDemvWz3bePLwCDB/39wbZptHToTxj0VFGkx+Pno/hH/W/ujzppp7x4D3V82LNdM8zhW2v871moHk8QmA/X0JjqaZJyZB9U8lJZplnjwUpn9uaIpB5KlpAP270lJNMb99BJp/25HbZpinZ8Dy78vwNME8MwuS/1JWtv5/50Fg/Nfuaf7Hvns5DP+9Cbt1Nk+MguD/dPaRvuaTlsDv/1oySVfznCzo/W9ZG7UkH3kHdPa0daSGh+2r4GZfq7Q7iH+ZCzV7y32pl3lePszs71CeTuYbCiAmooIN+pg/WA0vMa1+oIu58yZoiWqTsx7mhUtgJa71RTqYFw+FlMiGT+Jv7jIdTmKb7sLdvES8OdRLeJuHwVyGehhn89IyCMmorJSv+Zbp8JHT9C1sz9VOQ0dWpyN5mpe7wkZerqM5mq+sgIzMKtbwM3caDBe5DXbiZn6xACqym3iRl/nLfJjIL/8GJ/PNEyBC0YTNfMxHVsKDpsqRbNCroEFVFRfzaljQlcnDvCYLFHRl1XAwf+IKCcpcF6g3z4uCA21RF3GyhhM36nxqYUBfnY9S9HoIqKhBpXl6FgBUlJWuzryxCfurqalR2UFcDNZX1TxVB3P3sb26EtSYL8TyKluowjxxKIZX2dAH9ObN07C72pKaydGfYXXVPaM2P47N1Xec1nyDKyZXn+sGSnOPI1icQ0c9CNGjsTePWujMI09gbh6diKQyPzYRa3Np4jEi9FZszadWGvMaLM0pFwrzwFsYmlO32gjQ67AzryLkmxdjZW4VyzZvjsLI3Ipqxmtr1qtdrnnHCUzMrxMdMs3nD8TCHBs4XyL6WuzLs7XyzDtdMS/PXDuloVdiXa5VyjKfhG35NkmO+fltmJZv28/jKA7HckLq6sawnOvpkoDei1151yvefMF+zMq7/QuEo/dhVe71iTbfgk351y/WfOQhTMq/QyOFotvesHcPTLIkXRzG/z0v1gqsbds26y6uYkLXtm3btm0G1jv2XPurrL3bWVndHchTz+8jPMOuyjyHoiGYqwJawtGJIMwsUeH8n55hGKaCKS0jZxjKSlUoTagZiiYqkEMHiRmKg4dUGOW0DMcDKoh5Af2g4+A8FcKHlAzJhyqAEu6uBaVzifJXQcewVChvD1eSMSy3Dle+qqgYmirlqykRQ9NUedpIw/BsVH6qSRieauVlFLdUA9RilPIxgIIhGqA8DHqCgCF6YpByNyx1uThMcW+gt9fw1r3K1QjqhWoE99G5r+7t/bbEC1Xb99O3SBX7lJPRV5EuXFeNTt9jd8xg8i97Ob1khhAuZEMySu5/dAtbjZKrJVvYapVYXUS2sEV1DBDjBHy8z4gWus+U0Ac0C18Rj2B5FBtnNsnCN1uJPEkxCz5g9oQbcyk+IpgFjyuBKRHBLIimyN8ietmwiMNxDhyVKykmlw3FJfJVTy0rlslXA7GsaJCvkcSy4kp5uo5WdlwnP4tJZcdi+ZlOKjumy09nUtnRWV66UcqSbvLRSChLGuWjP6Es6S8fzxPKkufloSh9XTgeeYRMtoxRvKNksuWo4j1EJlseUqzMSjLZsvKQ4hyjkjXHFGcFkaxZoTh70heFdy53EcmauxQjExHJmigjt+M0sqc1W9jSZ7XcdpLInp1ya0kie1rK7SCJ7LlGTmspZNFauYwnkEXj5XKCQBadkMtJAll0Ui59CGTRu3I5RSCLTsnhma0EsmjrM8quC31s6qLsWqcvB69cxpDHpiplt588NpWzLv3PWKheTR6bqpVdB/LYtI4Lq3/C1dVnIvLYFD2jbL6gjlVfKJuexLGqNzNh06de2dxAHKtu4ND7Hzj6Xk6c9D2HPUwcq04rm6XEseoSZfMccax6TtncQxyrqrnI9geuszUljlVN2d3yB3a5VBLHqkpls5w4Vh1UNtuJY9V2vugOfNHt44veljhWRcqGNnbxRU8Dvujgb3r6RPz3bhEf2cAXHdt59s6zd96ypUAl79N5n87JmRRoyhk5zshxGjYFqjn3nupz79xw4YbLaeJYdZpbq+lTzv107qcziSIFbmDmTPosY7pU+vRmjhxz5JgYaV+LZ5gNy2zYP1lHHpvWMe89farZ7MBmB57DpkA525rSp4q9bOnTjg2M6dOFXavsWmWrsn13yeUMgdK3P/0kgSw6KZcTBLLohFzGE8ii8XJZSyCL1srpGgrZ85ocuM5mU0u57SSRPTv1C46+c+j9d8dJZE9ruWUiGlkTZRTjLiJZc5fi7CWSNdMVZwWRrFmhOMeIZM0xxcmspJItK5sp1kNksuUhxTtKJluOysHmMWjUKF4RmWwpkgNXV026Wj76E8qSNvLRSChLKuSjG6EsmSMvnSllx/Oj5WU6qezoLz/NSWVHc/m5jlR2XCdPV9LKirPy1UAsKy6Wr2XEsmKZfJUUU8uG4hJ520EuG87J3yJy2bBI/qZE9LIgmqIEPiKYBR8piRcJZkETJfEkwSx4Um72zsRitpLpRLLw7VMyH5AsfEVK6DOahe4zOdj8/x0vKqm6iGphi+qU2DdkC1utkvuObGH7n5LLDKFbyIZk5GByEAn2KhcbCReyjcrFvecpF66rRisn+0kXrn3Kzdq2tAtV2/eVo3PEC9UO5eoN4oXqgnJ171vUC9Nb98rB5PhI3K7cDXqZfiF6eZDiWFuojgHKx6gWFAxPi1HKSzUJw1Ot/NSTMDz1ylNTGoamqfL0Q/v1oCDZmUcB/Ky92+lT02ZspzVqrLcR1Vg1VqyK7VSMVTC2bdu27ZknWJvdXRffd+/5vcKfBytpGVmJZD2ZR7FK3pNIWguKVVogeYt7USyydDEc8HOKRWrghPen0Boy5UtwxFW0hlwFZ0ydQkvIlKlwSA0tIRPhlCUltIKULIFjnqAVpADOWZygBWTfYjjoPVpA3oOT0vbTeLI/DY5aSOPJUDjsAA0nB+C0oiiNJtEiOO5lGk36wXkDmtFgEh8AF9TSYFILN/xyD40le34JV+TTWDIOLhlNQ8luuGV2nEaS+O1wTRmNJBPhnmu/TwPJrifhollRGkeiW+CqmTSOzIS7piZoGEncBZfl0zCSD9e9SaPI1XDfjF40iPSaAQ98lQaRr8IT82kMmQ9v3JVHQ0jiUXhkSJRGkOgQeGYajSDT4J0n76QB5J0n4aHmcfpO4s3hqevpO7keHnuIPpPW8NrUKvpKqu6C5+5JpY8k9R78mc66DrrLPqBvZDz8UX4NfSLdy+GTyRfRF3LRFfDNU5/SB/LpU/DRJPpAauGnZ9+keO7qZ+Gr8lyKxw6Ww2edEhRPJTrBd0VxiofiRTDAuE8pnomOgxF+TvFMGQwxhuKRMTBF2miKJ0anwVEKbubLLYdBXhpI18nAQ0iC4roCuhO+nEJXScrPYJzSUXSRjCqFgTLidI3EM2Ckt9rQJZI6BIaquJSukEsXwlivx+gCib0Og13pQtUl1hFG6xi6qqvmwPBL6Si5dDiMNy5CB0lkHCwwpBkdI82GwApfaUmHSMuvwBL3lNARUnIPrNF8EB0gg5rDIgPqmDSpGwCrvPFdJkmavAHL/LKYSZHiX8I6aZVMglSmwUZjP2UjyaeHYan8m9go0iwf1rqnHRtB2j0Ai/30CKXBjgyA1RZPoDTQm4thuWdrPqU0wKc1z8J+e6ew3mTKXgRC7ztZT3JnbwTEL7/FepFv/RLB8UmE8n9FrkegfPgR5f/46B4EzNQPKP/T+KkIno/jlP8q/jEC6d3ulP+i+7sIqA7Tqin/QXRHBwTXWwnKv0kMQaD1uJryLx7qgaDrWEL5BykdEQKvdaH8zb2vIRyOplD+JOUoQmNGP8of9JuBMFm3RyXfsw4hUz4txlCLTStH+DzYhCHW5EGE0rMrlzKklq58FmH1aGWMIRSrfBRh9swBhs6BdxF2w6oYKlXDIHjyiccZGo8XPAn5o0fbtmEotGn/KOSvfnosxsCLHRsA+Ud9W1cz0KJdnoH8q+M5UQbX/fdA/pMHdjKgflwE+W/u+XY1A6f62/dB/pdn+scYKLH+z0D+n8lj4gyM+JgrUB/So2cvBkKvZTNQX9KhWx2tV9etA6RBNneJ0WKxb2+GNFyntiW0VEnbTmgc6fDKd6ppneh3XumAJMgV7U/QKifaX4FkybULW0doiUjrhdfCEXLX3SejNF70xrsfhYOkd9k7NNo7Zb3hOLm5dj8Ntb/2ZrhETtXkRmmYaG7NKbhKfvqTVak0RurpDT+FeKC8ovIMDXCmsKIc4p3mLc6Ooo9GjR7bHOK5tHM9zzejD5qd73kuDX6R284V5KTQQyk5Bedug+/k1MY+uRG6LpLb57lTEHNcW3T9phtvoktu+sWm64uuhRjo8ps7Xmh9TYQOinRvfaHjzZdDzJb25fyCwosvuZRJufSSywoL8r+cBrFIWnpGZlZ2Tm5eKhsgNS83JzsrMyM9wNX+PQD0ZUVzBHRAAAAAAElFTkSuQmCC",
                        mimetype: "png"
                    })
                }), !0), Te = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_coinsheet.svg", {
                        data: '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0" y="0" width="820" height="328" style="enable-background:new 0 0 820 328" xml:space="preserve"><style>.st0{fill:#b26706}.st5{fill:#d57900}.st6{fill:#ddb215}.st7{fill:#e3a000}.st9{opacity:.49;enable-background:new}.st10,.st9{fill:#fff}.st11{opacity:.77;enable-background:new}.st13{fill:#fff6dc}.st20{fill:#995307}</style><ellipse class="st0" cx="405.9" cy="82.1" rx="60" ry="64.8"/><defs><ellipse id="SVGID_1_" cx="405.9" cy="82.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_2_"><use xlink:href="#SVGID_1_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_2_);fill:#995307" d="M361.1 24.1H404v9.7h-42.9z"/><defs><ellipse id="SVGID_3_" cx="405.9" cy="82.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_4_"><use xlink:href="#SVGID_3_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_4_);fill:#995307" d="M342.1 57.6H385v9.7h-42.9z"/><defs><ellipse id="SVGID_5_" cx="405.9" cy="82.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_6_"><use xlink:href="#SVGID_5_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_6_);fill:#995307" d="M337.9 90.9h42.9v9.7h-42.9z"/><defs><ellipse id="SVGID_7_" cx="405.9" cy="82.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_8_"><use xlink:href="#SVGID_7_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_8_);fill:#995307" d="M355.4 124.4h42.9v9.7h-42.9z"/><ellipse class="st5" cx="412" cy="81.7" rx="33.7" ry="48.7"/><path class="st0" d="M442.7 70.5c-1.5-5-9.5-6.8-16.9-4.9-1-9.6-4.7-18.3-9-18.3-4.4 0-8 8.7-9 18.3-7.4-1.9-15.2-1.6-16.7 3.3-1.6 5.3 4.3 13.8 11.6 18.3-4.2 7.3-6.5 17-3.6 20.6 3.1 3.9 11 0 17.2-6.1 6.5 6.9 15.4 11.7 18.7 7.6 3.1-3.8.1-14.4-4.5-22 7.6-4.4 13.8-11.5 12.2-16.8z"/><path class="st6" d="M421.9 17.1c-28.8 0-52.1 28.9-52.1 64.5s23.3 64.5 52.1 64.5S474 117.2 474 81.6s-23.4-64.5-52.1-64.5zm0 105.8c-18.4 0-33.2-18.4-33.2-41.2 0-22.7 14.9-41.2 33.2-41.2 18.4 0 33.2 18.4 33.2 41.2s-14.9 41.2-33.2 41.2z"/><path class="st7" d="M448.7 70.5c-1.5-5-9.5-6.8-16.9-4.9-1-9.6-4.7-18.3-9-18.3-4.4 0-8 8.7-9 18.3-7.4-1.9-15.2-1.6-16.7 3.3-1.6 5.3 4.3 13.8 11.6 18.3-4.2 7.3-6.5 17-3.6 20.6 3.1 3.9 11 0 17.2-6.1 6.5 6.9 15.4 11.7 18.7 7.6 3.1-3.8.1-14.4-4.5-22 7.5-4.4 13.7-11.5 12.2-16.8z"/><defs><path id="SVGID_9_" d="M421.9 17.3c-28.8 0-52.1 28.9-52.1 64.5s23.3 64.5 52.1 64.5S474 117.4 474 81.8s-23.4-64.5-52.1-64.5zm0 105.6c-18.4 0-33.2-18.4-33.2-41.2 0-22.7 14.9-41.2 33.2-41.2 18.4 0 33.2 18.4 33.2 41.2s-14.9 41.2-33.2 41.2z"/></defs><clipPath id="SVGID_10_"><use xlink:href="#SVGID_9_" style="overflow:visible"/></clipPath><ellipse cx="399.9" cy="19.5" rx="68.6" ry="84.9" style="clip-path:url(#SVGID_10_);fill:#e5d015"/><ellipse transform="rotate(-31.761 405.894 32.893)" class="st9" cx="405.9" cy="32.9" rx="17.2" ry="10.6"/><ellipse transform="rotate(-31.761 405.892 32.793)" class="st10" cx="405.9" cy="32.8" rx="10.7" ry="6.6"/><g class="st11"><defs><path id="SVGID_11_" d="M409.5 35.9c27.7 0 45.7-22.8 45.7 11.5S437.2 91 409.5 91s-39.7-7.4-39.7-41.7 12-13.4 39.7-13.4z"/></defs><clipPath id="SVGID_12_"><use xlink:href="#SVGID_11_" style="overflow:visible"/></clipPath><path d="M448.7 70.5c-1.5-5-9.5-6.8-16.9-4.9-1-9.6-4.7-18.3-9-18.3-4.4 0-8 8.7-9 18.3-7.4-1.9-15.2-1.6-16.7 3.3-1.6 5.3 4.3 13.8 11.6 18.3-4.2 7.3-6.5 17-3.6 20.6 3.1 3.9 11 0 17.2-6.1 6.5 6.9 15.4 11.7 18.7 7.6 3.1-3.8.1-14.4-4.5-22 7.5-4.4 13.7-11.5 12.2-16.8z" style="clip-path:url(#SVGID_12_);fill:#edd70a"/></g><ellipse transform="rotate(-52.75 421.304 55.516)" class="st9" cx="421.3" cy="55.5" rx="6.9" ry="5.1"/><ellipse transform="rotate(-52.75 421.303 55.511)" class="st10" cx="421.3" cy="55.5" rx="4.3" ry="3.2"/><path class="st13" d="M372.3 84.8c0-35.6 23.3-64.5 52.1-64.5 12.4 0 23.7 5.3 32.6 14.2-9.3-10.7-21.8-17.3-35.5-17.3-28.8 0-52.1 28.9-52.1 64.5 0 20.3 7.6 38.5 19.5 50.3-10.2-11.8-16.6-28.6-16.6-47.2z"/><path class="st9" d="M471.1 78.8c0 35.6-23.3 64.5-52.1 64.5-12.4 0-23.7-5.3-32.6-14.2 9.3 10.7 21.8 17.3 35.5 17.3 28.8 0 52.1-28.9 52.1-64.5 0-20.3-7.6-38.5-19.5-50.3 10.2 11.7 16.6 28.5 16.6 47.2z"/><path class="st0" d="M593.6 37.6s17.6 18.5 17.6 46.5-16 40.7-17.6 41.3 0-87.8 0-87.8zM587.5 104.2c1.4-14.3 1.4-30.2 0-44.5V17.3h-19c-24.4.9-40.3 29.4-40.3 64.4 0 35.6 16.5 64.5 41.6 64.5 1 0 1.9.3 2.8-.1h15l-.1-41.9z"/><defs><path id="SVGID_13_" d="M587.5 104.2c1.4-14.3 1.4-30.2 0-44.5V17.3h-19c-24.4.9-40.3 29.4-40.3 64.4 0 35.6 16.5 65 41.6 65 1 0 1.9-.2 2.8-.6h15l-.1-41.9z"/></defs><clipPath id="SVGID_14_"><use xlink:href="#SVGID_13_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_14_);fill:#995307" d="M540.5 24.2h42.9v9.7h-42.9z"/><defs><path id="SVGID_15_" d="M587.5 104.2c1.4-14.3 1.4-30.2 0-44.5V17.3h-19c-24.4.9-40.3 29.4-40.3 64.4 0 35.6 16.5 65 41.6 65 1 0 1.9-.2 2.8-.6h15l-.1-41.9z"/></defs><clipPath id="SVGID_16_"><use xlink:href="#SVGID_15_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_16_);fill:#995307" d="M521.5 57.7h42.9v9.7h-42.9z"/><defs><path id="SVGID_17_" d="M587.5 104.2c1.4-14.3 1.4-30.2 0-44.5V17.3h-19c-24.4.9-40.3 29.4-40.3 64.4 0 35.6 16.5 65 41.6 65 1 0 1.9-.2 2.8-.6h15l-.1-41.9z"/></defs><clipPath id="SVGID_18_"><use xlink:href="#SVGID_17_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_18_);fill:#995307" d="M517.3 91h42.9v9.7h-42.9z"/><defs><path id="SVGID_19_" d="M587.5 104.2c1.4-14.3 1.4-30.2 0-44.5V17.3h-19c-24.4.9-40.3 29.4-40.3 64.4 0 35.6 16.5 65 41.6 65 1 0 1.9-.2 2.8-.6h15l-.1-41.9z"/></defs><clipPath id="SVGID_20_"><use xlink:href="#SVGID_19_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_20_);fill:#995307" d="M534.8 124.6h42.9v9.7h-42.9z"/><ellipse class="st5" cx="582.9" cy="81.9" rx="20" ry="48.7"/><path class="st0" d="M601.1 70.7c-.9-5-5.6-6.8-10-4.9-.6-9.6-2.8-18.3-5.4-18.3-2.6 0-4.8 8.7-5.4 18.3-4.4-1.9-9-1.6-9.9 3.3-.9 5.3 2.5 13.8 6.9 18.3-2.5 7.3-3.9 17-2.1 20.6 1.9 3.9 6.5 0 10.2-6.1 3.9 6.9 9.1 11.7 11.1 7.6 1.8-3.8.1-14.4-2.7-22 4.6-4.4 8.2-11.5 7.3-16.8z"/><path class="st6" d="M588.8 17.4c-17 0-30.9 28.9-30.9 64.5s13.8 64.5 30.9 64.5c17.1 0 30.9-28.9 30.9-64.5-.1-35.6-13.9-64.5-30.9-64.5zm0 105.7c-10.9 0-19.7-18.4-19.7-41.2 0-22.7 8.8-41.2 19.7-41.2s19.7 18.4 19.7 41.2c-.1 22.8-8.9 41.2-19.7 41.2z"/><path class="st7" d="M604.6 70.7c-.9-5-5.6-6.8-10-4.9-.6-9.6-2.8-18.3-5.4-18.3-2.6 0-4.8 8.7-5.4 18.3-4.4-1.9-9-1.6-9.9 3.3-.9 5.3 2.5 13.8 6.9 18.3-2.5 7.3-3.9 17-2.1 20.6 1.9 3.9 6.5 0 10.2-6.1 3.9 6.9 9.1 11.7 11.1 7.6 1.8-3.8.1-14.4-2.7-22 4.6-4.4 8.3-11.5 7.3-16.8z"/><defs><path id="SVGID_21_" d="M588.8 17.5c-17 0-30.9 28.9-30.9 64.5s13.8 64.5 30.9 64.5c17.1 0 30.9-28.9 30.9-64.5-.1-35.6-13.9-64.5-30.9-64.5zm0 105.7c-10.9 0-19.7-18.4-19.7-41.2 0-22.7 8.8-41.2 19.7-41.2s19.7 18.4 19.7 41.2c-.1 22.8-8.9 41.2-19.7 41.2z"/></defs><clipPath id="SVGID_22_"><use xlink:href="#SVGID_21_" style="overflow:visible"/></clipPath><ellipse cx="575.7" cy="19.8" rx="40.6" ry="84.9" style="clip-path:url(#SVGID_22_);fill:#e5d015"/><ellipse transform="rotate(-64.501 579.467 33.163)" class="st9" cx="579.5" cy="33.2" rx="13.6" ry="7.9"/><ellipse transform="rotate(-64.501 579.318 33.048)" class="st10" cx="579.3" cy="33.1" rx="8.5" ry="4.9"/><g class="st11"><defs><path id="SVGID_23_" d="M581.5 33.7c16.4 0 26-20.5 26 13.8s-11.7 41.7-28.1 41.7-21.1-15.1-21.1-49.4 6.8-6.1 23.2-6.1z"/></defs><clipPath id="SVGID_24_"><use xlink:href="#SVGID_23_" style="overflow:visible"/></clipPath><path d="M604.6 70.7c-.9-5-5.6-6.8-10-4.9-.6-9.6-2.8-18.3-5.4-18.3-2.6 0-4.8 8.7-5.4 18.3-4.4-1.9-9-1.6-9.9 3.3-.9 5.3 2.5 13.8 6.9 18.3-2.5 7.3-3.9 17-2.1 20.6 1.9 3.9 6.5 0 10.2-6.1 3.9 6.9 9.1 11.7 11.1 7.6 1.8-3.8.1-14.4-2.7-22 4.6-4.4 8.3-11.5 7.3-16.8z" style="clip-path:url(#SVGID_24_);fill:#edd70a"/></g><ellipse transform="rotate(-77.884 588.47 55.787)" class="st9" cx="588.5" cy="55.8" rx="6.4" ry="3.3"/><ellipse transform="rotate(-77.884 588.4 55.803)" class="st10" cx="588.4" cy="55.8" rx="4" ry="2"/><path class="st13" d="M559.5 85c0-35.6 13.8-64.5 30.9-64.5 7.3 0 14 5.3 19.3 14.2-5.5-10.7-12.9-17.3-21-17.3-17 0-30.9 28.9-30.9 64.5 0 20.3 4.5 38.5 11.5 50.3-6.1-11.8-9.8-28.6-9.8-47.2z"/><path class="st9" d="M617.9 79c0 35.6-13.8 64.5-30.9 64.5-7.3 0-14-5.3-19.3-14.2 5.5 10.7 12.9 17.3 21 17.3 17 0 30.9-28.9 30.9-64.5 0-20.3-4.5-38.5-11.5-50.3 6 11.7 9.8 28.5 9.8 47.2z"/><path class="st0" d="M713.6 130.6s48.5-1.4 48.7-1.4V31h-48.6l-.1 99.6zM713.7 134.4c.2 6.7 5.8 12.2 12.6 12.2h23.4c6.8 0 12.4-5.5 12.6-12.2h-48.6zM749.7 17.4h-23.4c-4.1 0-7.7 1.9-10 5h43.4c-2.4-3.1-6-5-10-5z"/><path class="st20" d="M762.3 30c0-2.9-1-5.5-2.6-7.7h-43.4c-1.6 2.1-2.6 4.8-2.6 7.7v3.7h48.6V30zM713.6 123.1v11.5h48.7v-11.3h-48.7v-.2zM713.6 56.9h48.7v11.4h-48.7zM713.6 90.4h48.7v11.4h-48.7z"/><circle class="st0" cx="79.8" cy="81.9" r="64.3"/><defs><circle id="SVGID_25_" cx="79.8" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_26_"><use xlink:href="#SVGID_25_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_26_);fill:#995307" d="M30.1 24.2H73v9.7H30.1z"/><defs><circle id="SVGID_27_" cx="79.8" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_28_"><use xlink:href="#SVGID_27_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_28_);fill:#995307" d="M11.1 57.7H54v9.7H11.1z"/><defs><circle id="SVGID_29_" cx="79.8" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_30_"><use xlink:href="#SVGID_29_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_30_);fill:#995307" d="M6.9 91h42.9v9.7H6.9z"/><defs><circle id="SVGID_31_" cx="79.8" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_32_"><use xlink:href="#SVGID_31_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_32_);fill:#995307" d="M24.3 124.6h42.9v9.7H24.3z"/><ellipse class="st5" cx="84" cy="76.7" rx="48.7" ry="41.8"/><path class="st0" d="M117.1 74.9c-1.8-5-11.8-6.8-20.9-4.9-1.3-9.6-5.8-18.3-11.2-18.3S75.1 60.4 73.8 70c-9.1-1.9-18.8-1.6-20.6 3.3-1.9 5.3 5.3 13.8 14.4 18.3-5.2 7.3-8.1 17-4.4 20.6 3.9 3.9 13.6 0 21.3-6.1 8.1 6.9 19 11.7 23.1 7.6 3.8-3.8.2-14.4-5.6-22 9.3-4.4 17.1-11.5 15.1-16.8z"/><path class="st6" d="M84 17.4c-35.6 0-64.5 28.9-64.5 64.5s28.9 64.5 64.5 64.5 64.5-28.9 64.5-64.5S119.6 17.4 84 17.4zm0 105.7c-22.7 0-41.2-18.4-41.2-41.2 0-22.7 18.4-41.2 41.2-41.2 22.7 0 41.2 18.4 41.2 41.2s-18.5 41.2-41.2 41.2z"/><path class="st7" d="M117.2 70.7c-1.8-5-11.8-6.8-20.9-4.9-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-18.8-1.6-20.6 3.3-1.9 5.3 5.3 13.8 14.4 18.3-5.2 7.3-8.1 17-4.4 20.6 3.9 3.9 13.6 0 21.3-6.1 8.1 6.9 19 11.7 23.1 7.6 3.8-3.8.2-14.4-5.6-22 9.3-4.4 17-11.5 15.1-16.8z"/><defs><path id="SVGID_33_" d="M84 17.5c-35.6 0-64.5 28.9-64.5 64.5s28.9 64.5 64.5 64.5 64.5-28.9 64.5-64.5S119.6 17.5 84 17.5zm0 105.7c-22.7 0-41.2-18.4-41.2-41.2 0-22.7 18.4-41.2 41.2-41.2 22.7 0 41.2 18.4 41.2 41.2s-18.5 41.2-41.2 41.2z"/></defs><clipPath id="SVGID_34_"><use xlink:href="#SVGID_33_" style="overflow:visible"/></clipPath><circle cx="84" cy="19.8" r="84.9" style="clip-path:url(#SVGID_34_);fill:#e5d015"/><ellipse transform="rotate(-89.114 81.87 29.065) scale(1.00002)" class="st9" cx="81.9" cy="29.1" rx="11.1" ry="20.4"/><ellipse transform="rotate(-89.114 81.87 29.065) scale(1.00002)" class="st10" cx="81.9" cy="29.1" rx="6.9" ry="12.7"/><path class="st13" d="M22.7 85c0-35.6 28.9-64.5 64.5-64.5 15.3 0 29.4 5.3 40.4 14.2-11.5-10.7-27-17.3-44-17.3-35.6 0-64.5 28.9-64.5 64.5 0 20.3 9.4 38.5 24.1 50.3-12.6-11.8-20.5-28.6-20.5-47.2z"/><path class="st9" d="M145 79c0 35.6-28.9 64.5-64.5 64.5-15.3 0-29.4-5.3-40.4-14.2 11.5 10.7 27 17.3 44 17.3 35.6 0 64.5-28.9 64.5-64.5 0-20.3-9.4-38.5-24.1-50.3C137.1 43.5 145 60.3 145 79z"/><ellipse transform="rotate(-32.552 83.518 55.694)" class="st9" cx="83.5" cy="55.7" rx="7.8" ry="5.6"/><ellipse transform="rotate(-32.552 83.518 55.694)" class="st10" cx="83.5" cy="55.7" rx="4.9" ry="3.5"/><defs><path id="SVGID_35_" d="M117.2 70.7c-1.8-5-11.8-6.8-20.9-4.9-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-18.8-1.6-20.6 3.3-1.9 5.3 5.3 13.8 14.4 18.3-5.2 7.3-8.1 17-4.4 20.6 3.9 3.9 13.6 0 21.3-6.1 8.1 6.9 19 11.7 23.1 7.6 3.8-3.8.2-14.4-5.6-22 9.3-4.4 17-11.5 15.1-16.8z"/></defs><clipPath id="SVGID_36_"><use xlink:href="#SVGID_35_" style="overflow:visible"/></clipPath><ellipse cx="84.7" cy="64.7" rx="42.8" ry="24.5" style="clip-path:url(#SVGID_36_);fill:#edd70a"/><circle class="st0" cx="244" cy="81.9" r="64.3"/><defs><circle id="SVGID_37_" cx="244" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_38_"><use xlink:href="#SVGID_37_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_38_);fill:#995307" d="M194.3 24.2h42.9v9.7h-42.9z"/><defs><circle id="SVGID_39_" cx="244" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_40_"><use xlink:href="#SVGID_39_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_40_);fill:#995307" d="M175.3 57.7h42.9v9.7h-42.9z"/><defs><circle id="SVGID_41_" cx="244" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_42_"><use xlink:href="#SVGID_41_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_42_);fill:#995307" d="M171.1 91H214v9.7h-42.9z"/><defs><circle id="SVGID_43_" cx="244" cy="81.9" r="64.3"/></defs><clipPath id="SVGID_44_"><use xlink:href="#SVGID_43_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_44_);fill:#995307" d="M188.5 124.6h42.9v9.7h-42.9z"/><ellipse class="st5" cx="240.9" cy="81.9" rx="38.9" ry="48.7"/><path class="st0" d="M279.3 74.6c-1.7-5-11-6.8-19.4-4.9-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.5-1.6-19.1 3.3-1.8 5.3 4.9 13.8 13.4 18.3-4.8 7.3-7.5 17-4.1 20.6 3.6 3.9 12.6 0 19.8-6.1 7.5 6.9 17.7 11.7 21.5 7.6 3.5-3.8.2-14.4-5.2-22 8.5-4.4 15.7-11.5 13.9-16.8z"/><path class="st6" d="M252.3 17.4c-33.1 0-60 28.9-60 64.5s26.9 64.5 60 64.5 60-28.9 60-64.5-26.9-64.5-60-64.5zm0 105.7c-21.1 0-38.3-18.4-38.3-41.2 0-22.7 17.1-41.2 38.3-41.2 21.1 0 38.3 18.4 38.3 41.2s-17.2 41.2-38.3 41.2z"/><path class="st7" d="M283.1 70.7c-1.7-5-11-6.8-19.4-4.9-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.5-1.6-19.1 3.3-1.8 5.3 4.9 13.8 13.4 18.3-4.8 7.3-7.5 17-4.1 20.6 3.6 3.9 12.6 0 19.8-6.1 7.5 6.9 17.7 11.7 21.5 7.6 3.5-3.8.2-14.4-5.2-22 8.6-4.4 15.7-11.5 13.9-16.8z"/><defs><path id="SVGID_45_" d="M252.3 17.5c-33.1 0-60 28.9-60 64.5s26.9 64.5 60 64.5 60-28.9 60-64.5-26.9-64.5-60-64.5zm0 105.7c-21.1 0-38.3-18.4-38.3-41.2 0-22.7 17.1-41.2 38.3-41.2 21.1 0 38.3 18.4 38.3 41.2s-17.2 41.2-38.3 41.2z"/></defs><clipPath id="SVGID_46_"><use xlink:href="#SVGID_45_" style="overflow:visible"/></clipPath><ellipse cx="226.9" cy="19.8" rx="78.9" ry="84.9" style="clip-path:url(#SVGID_46_);fill:#e5d015"/><path class="st9" d="M230.1 22.8c9.7-4.2 19.3-3 21.4 2.7 2.1 5.7-4.1 13.7-13.8 17.9s-19.3 3-21.4-2.7 4.1-13.7 13.8-17.9z"/><path class="st10" d="M231.6 26.7c6.1-2.6 12-1.8 13.3 1.7s-2.5 8.5-8.6 11.1-12 1.8-13.3-1.7 2.5-8.5 8.6-11.1z"/><g class="st11"><defs><path id="SVGID_47_" d="M245.2 34.9c31.9 0 45.4-13.6 45.4 20.7S270 91.2 238.1 91.2s-32.8-1.2-32.8-35.5 8-20.8 39.9-20.8z"/></defs><clipPath id="SVGID_48_"><use xlink:href="#SVGID_47_" style="overflow:visible"/></clipPath><path d="M283.1 70.7c-1.7-5-11-6.8-19.4-4.9-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.5-1.6-19.1 3.3-1.8 5.3 4.9 13.8 13.4 18.3-4.8 7.3-7.5 17-4.1 20.6 3.6 3.9 12.6 0 19.8-6.1 7.5 6.9 17.7 11.7 21.5 7.6 3.5-3.8.2-14.4-5.2-22 8.6-4.4 15.7-11.5 13.9-16.8z" style="clip-path:url(#SVGID_48_);fill:#edd70a"/></g><path class="st9" d="M249 51c3.4-2.3 7.4-2.1 8.9.5s.1 6.6-3.3 8.9-7.4 2.1-8.9-.5-.1-6.6 3.3-8.9z"/><path class="st10" d="M250.1 52.7c2.1-1.5 4.6-1.3 5.6.3s0 4.1-2.1 5.6-4.6 1.3-5.6-.3-.1-4.1 2.1-5.6z"/><path class="st13" d="M195.3 85c0-35.6 26.9-64.5 60-64.5 14.2 0 27.3 5.3 37.6 14.2C282.2 24 267.8 17.4 252 17.4c-33.1 0-60 28.9-60 64.5 0 20.3 8.7 38.5 22.4 50.3-11.8-11.8-19.1-28.6-19.1-47.2z"/><path class="st9" d="M309 79c0 35.6-26.9 64.5-60 64.5-14.2 0-27.3-5.3-37.6-14.2 10.7 10.7 25.1 17.3 40.9 17.3 33.1 0 60-28.9 60-64.5 0-20.3-8.7-38.5-22.4-50.3C301.6 43.5 309 60.3 309 79z"/><ellipse class="st0" cx="250.1" cy="246.1" rx="60" ry="64.8"/><defs><ellipse id="SVGID_49_" cx="250.1" cy="246.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_50_"><use xlink:href="#SVGID_49_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_50_);fill:#995307" d="M252 188.1h42.9v9.7H252z"/><defs><ellipse id="SVGID_51_" cx="250.1" cy="246.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_52_"><use xlink:href="#SVGID_51_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_52_);fill:#995307" d="M271 221.6h42.9v9.7H271z"/><defs><ellipse id="SVGID_53_" cx="250.1" cy="246.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_54_"><use xlink:href="#SVGID_53_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_54_);fill:#995307" d="M275.2 254.9h42.9v9.7h-42.9z"/><defs><ellipse id="SVGID_55_" cx="250.1" cy="246.1" rx="60" ry="64.8"/></defs><clipPath id="SVGID_56_"><use xlink:href="#SVGID_55_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_56_);fill:#995307" d="M257.7 288.4h42.9v9.7h-42.9z"/><ellipse class="st5" cx="244" cy="245.6" rx="33.7" ry="48.7"/><path class="st0" d="M225.5 251.3c-4.6 7.6-7.6 18.2-4.5 22 3.3 4.1 12.2-.7 18.7-7.6 6.2 6.1 14.1 10 17.2 6.1 2.9-3.6.6-13.3-3.6-20.6 7.3-4.5 13.2-13 11.6-18.3-1.5-4.9-9.3-5.2-16.7-3.3-1-9.6-4.6-18.3-9-18.3-4.3 0-8 8.7-9 18.3-7.4-1.9-15.4-.1-16.9 4.9-1.6 5.3 4.6 12.4 12.2 16.8z"/><path class="st6" d="M182 245.7c0 35.6 23.3 64.5 52.1 64.5s52.1-28.9 52.1-64.5-23.3-64.5-52.1-64.5c-28.7-.1-52.1 28.9-52.1 64.5zm18.9 0c0-22.8 14.8-41.2 33.2-41.2 18.3 0 33.2 18.5 33.2 41.2 0 22.8-14.8 41.2-33.2 41.2-18.3 0-33.2-18.5-33.2-41.2z"/><path class="st7" d="M219.5 251.3c-4.6 7.6-7.6 18.2-4.5 22 3.3 4.1 12.2-.7 18.7-7.6 6.2 6.1 14.1 10 17.2 6.1 2.9-3.6.6-13.3-3.6-20.6 7.3-4.5 13.2-13 11.6-18.3-1.5-4.9-9.3-5.2-16.7-3.3-1-9.6-4.6-18.3-9-18.3-4.3 0-8 8.7-9 18.3-7.4-1.9-15.4-.1-16.9 4.9-1.5 5.3 4.7 12.4 12.2 16.8z"/><defs><path id="SVGID_57_" d="M182 245.8c0 35.6 23.3 64.5 52.1 64.5s52.1-28.9 52.1-64.5-23.3-64.5-52.1-64.5c-28.7 0-52.1 28.8-52.1 64.5zm18.9 0c0-22.8 14.8-41.2 33.2-41.2 18.3 0 33.2 18.5 33.2 41.2 0 22.8-14.8 41.2-33.2 41.2-18.3-.1-33.2-18.5-33.2-41.2z"/></defs><clipPath id="SVGID_58_"><use xlink:href="#SVGID_57_" style="overflow:visible"/></clipPath><ellipse cx="256.1" cy="183.6" rx="68.6" ry="84.9" style="clip-path:url(#SVGID_58_);fill:#e5d015"/><ellipse transform="rotate(-58.239 250.104 196.858)" class="st9" cx="250.1" cy="196.9" rx="10.6" ry="17.2"/><ellipse transform="rotate(-58.239 250.104 196.751)" class="st10" cx="250.1" cy="196.8" rx="6.6" ry="10.7"/><g class="st11"><defs><path id="SVGID_59_" d="M286.2 213.3c0 34.3-12 41.7-39.7 41.7s-45.7-9.3-45.7-43.6 18-11.5 45.7-11.5 39.7-20.9 39.7 13.4z"/></defs><clipPath id="SVGID_60_"><use xlink:href="#SVGID_59_" style="overflow:visible"/></clipPath><path d="M219.5 251.3c-4.6 7.6-7.6 18.2-4.5 22 3.3 4.1 12.2-.7 18.7-7.6 6.2 6.1 14.1 10 17.2 6.1 2.9-3.6.6-13.3-3.6-20.6 7.3-4.5 13.2-13 11.6-18.3-1.5-4.9-9.3-5.2-16.7-3.3-1-9.6-4.6-18.3-9-18.3-4.3 0-8 8.7-9 18.3-7.4-1.9-15.4-.1-16.9 4.9-1.5 5.3 4.7 12.4 12.2 16.8z" style="clip-path:url(#SVGID_60_);fill:#edd70a"/></g><ellipse transform="rotate(-37.25 234.71 219.5)" class="st9" cx="234.7" cy="219.5" rx="5.1" ry="6.9"/><ellipse transform="rotate(-37.25 234.708 219.5)" class="st10" cx="234.7" cy="219.5" rx="3.2" ry="4.3"/><path class="st13" d="M267.1 295.9c11.9-11.8 19.5-30 19.5-50.3 0-35.6-23.3-64.5-52.1-64.5-13.7 0-26.2 6.6-35.5 17.3 8.9-8.9 20.2-14.2 32.6-14.2 28.8 0 52.1 28.9 52.1 64.5 0 18.7-6.4 35.4-16.6 47.2z"/><path class="st9" d="M201.5 195.6c-11.9 11.8-19.5 30-19.5 50.3 0 35.6 23.3 64.5 52.1 64.5 13.7 0 26.2-6.6 35.5-17.3-8.9 8.9-20.2 14.2-32.6 14.2-28.8 0-52.1-28.9-52.1-64.5 0-18.7 6.4-35.5 16.6-47.2z"/><path class="st0" d="M62.4 289.4c-1.6-.6-17.6-13.3-17.6-41.3s17.6-46.5 17.6-46.5 1.6 88.4 0 87.8zM68.5 268.2l-.1 41.9h15c.9.4 1.8.1 2.8.1 25.1 0 41.6-28.9 41.6-64.5 0-35-15.9-63.5-40.3-64.4h-19v42.4c-1.4 14.3-1.4 30.2 0 44.5z"/><defs><path id="SVGID_61_" d="m68.5 268.2-.1 41.9h15c.9.4 1.8.6 2.8.6 25.1 0 41.6-29.4 41.6-65 0-35-15.9-63.5-40.3-64.4h-19v42.4c-1.4 14.3-1.4 30.2 0 44.5z"/></defs><clipPath id="SVGID_62_"><use xlink:href="#SVGID_61_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_62_);fill:#995307" d="M72.6 188.2h42.9v9.7H72.6z"/><defs><path id="SVGID_63_" d="m68.5 268.2-.1 41.9h15c.9.4 1.8.6 2.8.6 25.1 0 41.6-29.4 41.6-65 0-35-15.9-63.5-40.3-64.4h-19v42.4c-1.4 14.3-1.4 30.2 0 44.5z"/></defs><clipPath id="SVGID_64_"><use xlink:href="#SVGID_63_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_64_);fill:#995307" d="M91.6 221.7h42.9v9.7H91.6z"/><defs><path id="SVGID_65_" d="m68.5 268.2-.1 41.9h15c.9.4 1.8.6 2.8.6 25.1 0 41.6-29.4 41.6-65 0-35-15.9-63.5-40.3-64.4h-19v42.4c-1.4 14.3-1.4 30.2 0 44.5z"/></defs><clipPath id="SVGID_66_"><use xlink:href="#SVGID_65_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_66_);fill:#995307" d="M95.8 255h42.9v9.7H95.8z"/><defs><path id="SVGID_67_" d="m68.5 268.2-.1 41.9h15c.9.4 1.8.6 2.8.6 25.1 0 41.6-29.4 41.6-65 0-35-15.9-63.5-40.3-64.4h-19v42.4c-1.4 14.3-1.4 30.2 0 44.5z"/></defs><clipPath id="SVGID_68_"><use xlink:href="#SVGID_67_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_68_);fill:#995307" d="M78.3 288.6h42.9v9.7H78.3z"/><ellipse class="st5" cx="73.1" cy="245.9" rx="20" ry="48.7"/><path class="st0" d="M62.2 251.5c-2.8 7.6-4.5 18.2-2.7 22 2 4.1 7.2-.7 11.1-7.6 3.7 6.1 8.3 10 10.2 6.1 1.8-3.6.4-13.3-2.1-20.6 4.4-4.5 7.8-13 6.9-18.3-.9-4.9-5.5-5.2-9.9-3.3-.6-9.6-2.8-18.3-5.4-18.3s-4.8 8.7-5.4 18.3c-4.4-1.9-9.1-.1-10 4.9-.9 5.3 2.7 12.4 7.3 16.8z"/><path class="st6" d="M36.3 245.9c0 35.6 13.8 64.5 30.9 64.5s30.9-28.9 30.9-64.5-13.9-64.5-30.9-64.5-30.8 28.9-30.9 64.5zm11.2 0c0-22.8 8.8-41.2 19.7-41.2s19.7 18.5 19.7 41.2c0 22.8-8.8 41.2-19.7 41.2-10.8 0-19.6-18.4-19.7-41.2z"/><path class="st7" d="M58.7 251.5c-2.8 7.6-4.5 18.2-2.7 22 2 4.1 7.2-.7 11.1-7.6 3.7 6.1 8.3 10 10.2 6.1 1.8-3.6.4-13.3-2.1-20.6 4.4-4.5 7.8-13 6.9-18.3-.9-4.9-5.5-5.2-9.9-3.3-.6-9.6-2.8-18.3-5.4-18.3s-4.8 8.7-5.4 18.3c-4.4-1.9-9.1-.1-10 4.9-1 5.3 2.7 12.4 7.3 16.8z"/><defs><path id="SVGID_69_" d="M36.3 246c0 35.6 13.8 64.5 30.9 64.5s30.9-28.9 30.9-64.5-13.9-64.5-30.9-64.5-30.8 28.9-30.9 64.5zm11.2 0c0-22.8 8.8-41.2 19.7-41.2s19.7 18.5 19.7 41.2c0 22.8-8.8 41.2-19.7 41.2-10.8 0-19.6-18.4-19.7-41.2z"/></defs><clipPath id="SVGID_70_"><use xlink:href="#SVGID_69_" style="overflow:visible"/></clipPath><ellipse cx="80.3" cy="183.8" rx="40.6" ry="84.9" style="clip-path:url(#SVGID_70_);fill:#e5d015"/><ellipse transform="rotate(-25.498 76.615 197.203)" class="st9" cx="76.6" cy="197.2" rx="7.9" ry="13.6"/><ellipse transform="rotate(-25.498 76.697 197.102)" class="st10" cx="76.7" cy="197.1" rx="4.9" ry="8.5"/><g class="st11"><defs><path id="SVGID_71_" d="M97.6 203.8c0 34.3-4.6 49.4-21.1 49.4s-28.1-7.4-28.1-41.7 9.6-13.8 26-13.8 23.2-28.2 23.2 6.1z"/></defs><clipPath id="SVGID_72_"><use xlink:href="#SVGID_71_" style="overflow:visible"/></clipPath><path d="M58.7 251.5c-2.8 7.6-4.5 18.2-2.7 22 2 4.1 7.2-.7 11.1-7.6 3.7 6.1 8.3 10 10.2 6.1 1.8-3.6.4-13.3-2.1-20.6 4.4-4.5 7.8-13 6.9-18.3-.9-4.9-5.5-5.2-9.9-3.3-.6-9.6-2.8-18.3-5.4-18.3s-4.8 8.7-5.4 18.3c-4.4-1.9-9.1-.1-10 4.9-1 5.3 2.7 12.4 7.3 16.8z" style="clip-path:url(#SVGID_72_);fill:#edd70a"/></g><ellipse transform="rotate(-12.123 67.475 219.804)" class="st9" cx="67.5" cy="219.8" rx="3.3" ry="6.4"/><ellipse transform="rotate(-12.123 67.476 219.703)" class="st10" cx="67.5" cy="219.7" rx="2" ry="4"/><path class="st13" d="M86.7 296.2c7-11.8 11.5-30 11.5-50.3 0-35.6-13.9-64.5-30.9-64.5-8.1 0-15.5 6.6-21 17.3 5.3-8.9 12-14.2 19.3-14.2 17.1 0 30.9 28.9 30.9 64.5 0 18.6-3.7 35.4-9.8 47.2z"/><path class="st9" d="M47.9 195.8c-7 11.8-11.5 30-11.5 50.3 0 35.6 13.9 64.5 30.9 64.5 8.1 0 15.5-6.6 21-17.3-5.3 8.9-12 14.2-19.3 14.2-17.1 0-30.9-28.9-30.9-64.5 0-18.7 3.8-35.5 9.8-47.2z"/><circle class="st0" cx="576.2" cy="245.9" r="64.3"/><defs><circle id="SVGID_73_" cx="576.2" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_74_"><use xlink:href="#SVGID_73_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_74_);fill:#995307" d="M583 188.2h42.9v9.7H583z"/><defs><circle id="SVGID_75_" cx="576.2" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_76_"><use xlink:href="#SVGID_75_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_76_);fill:#995307" d="M602 221.7h42.9v9.7H602z"/><defs><circle id="SVGID_77_" cx="576.2" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_78_"><use xlink:href="#SVGID_77_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_78_);fill:#995307" d="M606.2 255h42.9v9.7h-42.9z"/><defs><path id="SVGID_79_" d="M640.5 245.9c0 35.5-28.8 64.3-64.3 64.3s-64.3-28.8-64.3-64.3 28.8-64.3 64.3-64.3"/></defs><clipPath id="SVGID_80_"><use xlink:href="#SVGID_79_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_80_);fill:#995307" d="M588.8 288.6h42.9v9.7h-42.9z"/><ellipse class="st5" cx="572" cy="240.7" rx="48.7" ry="41.8"/><path class="st0" d="M554 255.7c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-2 5.3 5.8 12.4 15.1 16.8z"/><path class="st6" d="M507.5 245.9c0 35.6 28.9 64.5 64.5 64.5s64.5-28.9 64.5-64.5-28.9-64.5-64.5-64.5-64.5 28.9-64.5 64.5zm23.3 0c0-22.8 18.5-41.2 41.2-41.2 22.8 0 41.2 18.5 41.2 41.2 0 22.8-18.5 41.2-41.2 41.2s-41.2-18.4-41.2-41.2z"/><path class="st7" d="M553.9 251.5c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-1.9 5.3 5.8 12.4 15.1 16.8z"/><defs><path id="SVGID_81_" d="M507.5 246c0 35.6 28.9 64.5 64.5 64.5s64.5-28.9 64.5-64.5-28.9-64.5-64.5-64.5-64.5 28.9-64.5 64.5zm23.3 0c0-22.8 18.5-41.2 41.2-41.2 22.8 0 41.2 18.5 41.2 41.2 0 22.8-18.5 41.2-41.2 41.2s-41.2-18.4-41.2-41.2z"/></defs><clipPath id="SVGID_82_"><use xlink:href="#SVGID_81_" style="overflow:visible"/></clipPath><circle cx="572" cy="183.8" r="84.9" style="clip-path:url(#SVGID_82_);fill:#e5d015"/><ellipse transform="rotate(-.888 573.814 193.124) scale(1.00002)" class="st9" cx="573.8" cy="193.1" rx="20.4" ry="11.1"/><ellipse transform="rotate(-.888 573.814 193.124) scale(1.00002)" class="st10" cx="573.8" cy="193.1" rx="12.7" ry="6.9"/><path class="st13" d="M612.8 296.2c14.7-11.8 24.1-30 24.1-50.3 0-35.6-28.9-64.5-64.5-64.5-17 0-32.5 6.6-44 17.3 11-8.9 25.1-14.2 40.4-14.2 35.6 0 64.5 28.9 64.5 64.5 0 18.6-7.9 35.4-20.5 47.2z"/><path class="st9" d="M531.5 195.8c-14.7 11.8-24.1 30-24.1 50.3 0 35.6 28.9 64.5 64.5 64.5 17 0 32.5-6.6 44-17.3-11 8.9-25.1 14.2-40.4 14.2-35.6 0-64.5-28.9-64.5-64.5 0-18.7 7.9-35.5 20.5-47.2z"/><ellipse transform="rotate(-57.446 572.503 219.733)" class="st9" cx="572.5" cy="219.7" rx="5.6" ry="7.8"/><ellipse transform="rotate(-57.446 572.503 219.734)" class="st10" cx="572.5" cy="219.7" rx="3.5" ry="4.9"/><defs><path id="SVGID_83_" d="M553.9 251.5c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-1.9 5.3 5.8 12.4 15.1 16.8z"/></defs><clipPath id="SVGID_84_"><use xlink:href="#SVGID_83_" style="overflow:visible"/></clipPath><ellipse cx="571.3" cy="228.7" rx="42.8" ry="24.5" style="clip-path:url(#SVGID_84_);fill:#edd70a"/><path class="st0" d="M742.1 310.3c-35.5 0-64.3-28.8-64.3-64.3s28.8-64.3 64.3-64.3 32.7 67.2 32.7 102.7"/><ellipse class="st5" cx="737.9" cy="240.8" rx="48.7" ry="41.8"/><path class="st0" d="M719.9 255.8c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-2 5.3 5.8 12.4 15.1 16.8z"/><path class="st6" d="M673.4 246c0 35.6 28.9 64.5 64.5 64.5s64.5-28.9 64.5-64.5-28.9-64.5-64.5-64.5-64.5 28.9-64.5 64.5zm23.3 0c0-22.8 18.5-41.2 41.2-41.2 22.8 0 41.2 18.5 41.2 41.2 0 22.8-18.5 41.2-41.2 41.2s-41.2-18.4-41.2-41.2z"/><path class="st7" d="M719.8 251.6c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-1.9 5.3 5.8 12.4 15.1 16.8z"/><defs><path id="SVGID_85_" d="M673.4 246.1c0 35.6 28.9 64.5 64.5 64.5s64.5-28.9 64.5-64.5-28.9-64.5-64.5-64.5-64.5 28.9-64.5 64.5zm23.3 0c0-22.8 18.5-41.2 41.2-41.2 22.8 0 41.2 18.5 41.2 41.2 0 22.8-18.5 41.2-41.2 41.2s-41.2-18.4-41.2-41.2z"/></defs><clipPath id="SVGID_86_"><use xlink:href="#SVGID_85_" style="overflow:visible"/></clipPath><circle cx="737.9" cy="183.9" r="84.9" style="clip-path:url(#SVGID_86_);fill:#e5d015"/><ellipse transform="rotate(-.888 736.723 193.231) scale(1.00002)" class="st9" cx="736.7" cy="193.2" rx="20.4" ry="11.1"/><ellipse transform="rotate(-.888 736.723 193.231) scale(1.00002)" class="st10" cx="736.7" cy="193.2" rx="12.7" ry="6.9"/><path class="st13" d="M778.7 296.3c14.7-11.8 24.1-30 24.1-50.3 0-35.6-28.9-64.5-64.5-64.5-17 0-32.5 6.6-44 17.3 11-8.9 25.1-14.2 40.4-14.2 35.6 0 64.5 28.9 64.5 64.5 0 18.6-7.9 35.4-20.5 47.2z"/><path class="st9" d="M697.4 195.9c-14.7 11.8-24.1 30-24.1 50.3 0 35.6 28.9 64.5 64.5 64.5 17 0 32.5-6.6 44-17.3-11 8.9-25.1 14.2-40.4 14.2-35.6 0-64.5-28.9-64.5-64.5 0-18.7 7.9-35.5 20.5-47.2z"/><ellipse transform="rotate(-57.446 738.38 219.786)" class="st9" cx="738.4" cy="219.8" rx="5.6" ry="7.8"/><ellipse transform="rotate(-57.446 738.38 219.787)" class="st10" cx="738.4" cy="219.8" rx="3.5" ry="4.9"/><defs><path id="SVGID_87_" d="M719.8 251.6c-5.8 7.6-9.4 18.2-5.6 22 4.1 4.1 15-.7 23.1-7.6 7.7 6.1 17.4 10 21.3 6.1 3.7-3.6.8-13.3-4.4-20.6 9.1-4.5 16.3-13 14.4-18.3-1.8-4.9-11.5-5.2-20.6-3.3-1.3-9.6-5.8-18.3-11.2-18.3s-9.9 8.7-11.2 18.3c-9.1-1.9-19.1-.1-20.9 4.9-1.9 5.3 5.8 12.4 15.1 16.8z"/></defs><clipPath id="SVGID_88_"><use xlink:href="#SVGID_87_" style="overflow:visible"/></clipPath><ellipse cx="737.2" cy="228.8" rx="42.8" ry="24.5" style="clip-path:url(#SVGID_88_);fill:#edd70a"/><circle class="st0" cx="412" cy="245.9" r="64.3"/><defs><circle id="SVGID_89_" cx="412" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_90_"><use xlink:href="#SVGID_89_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_90_);fill:#995307" d="M418.8 188.2h42.9v9.7h-42.9z"/><defs><circle id="SVGID_91_" cx="412" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_92_"><use xlink:href="#SVGID_91_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_92_);fill:#995307" d="M437.8 221.7h42.9v9.7h-42.9z"/><defs><circle id="SVGID_93_" cx="412" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_94_"><use xlink:href="#SVGID_93_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_94_);fill:#995307" d="M442 255h42.9v9.7H442z"/><defs><circle id="SVGID_95_" cx="412" cy="245.9" r="64.3"/></defs><clipPath id="SVGID_96_"><use xlink:href="#SVGID_95_" style="overflow:visible"/></clipPath><path style="clip-path:url(#SVGID_96_);fill:#995307" d="M424.6 288.6h42.9v9.7h-42.9z"/><ellipse class="st5" cx="415.1" cy="245.9" rx="38.9" ry="48.7"/><path class="st0" d="M390.8 255.4c-5.4 7.6-8.7 18.2-5.2 22 3.8 4.1 13.9-.7 21.5-7.6 7.2 6.1 16.2 10 19.8 6.1 3.4-3.6.7-13.3-4.1-20.6 8.5-4.5 15.2-13 13.4-18.3-1.7-4.9-10.7-5.2-19.1-3.3-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.8-.1-19.4 4.9-2 5.3 5.2 12.4 13.9 16.8z"/><path class="st6" d="M343.8 245.9c0 35.6 26.9 64.5 60 64.5s60-28.9 60-64.5-26.9-64.5-60-64.5-60 28.9-60 64.5zm21.6 0c0-22.8 17.2-41.2 38.3-41.2 21.2 0 38.3 18.5 38.3 41.2 0 22.8-17.2 41.2-38.3 41.2s-38.3-18.4-38.3-41.2z"/><path class="st7" d="M386.9 251.5c-5.4 7.6-8.7 18.2-5.2 22 3.8 4.1 13.9-.7 21.5-7.6 7.2 6.1 16.2 10 19.8 6.1 3.4-3.6.7-13.3-4.1-20.6 8.5-4.5 15.2-13 13.4-18.3-1.7-4.9-10.7-5.2-19.1-3.3-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.8-.1-19.4 4.9-1.9 5.3 5.2 12.4 13.9 16.8z"/><defs><path id="SVGID_97_" d="M343.8 246c0 35.6 26.9 64.5 60 64.5s60-28.9 60-64.5-26.9-64.5-60-64.5-60 28.9-60 64.5zm21.6 0c0-22.8 17.2-41.2 38.3-41.2 21.2 0 38.3 18.5 38.3 41.2 0 22.8-17.2 41.2-38.3 41.2s-38.3-18.4-38.3-41.2z"/></defs><clipPath id="SVGID_98_"><use xlink:href="#SVGID_97_" style="overflow:visible"/></clipPath><ellipse cx="429.1" cy="183.8" rx="78.9" ry="84.9" style="clip-path:url(#SVGID_98_);fill:#e5d015"/><path class="st9" d="M439.6 204.7c-2.1 5.7-11.7 6.9-21.4 2.7s-15.9-12.2-13.8-17.9 11.7-6.9 21.4-2.7 16 12.2 13.8 17.9z"/><path class="st10" d="M433 201.8c-1.3 3.5-7.3 4.3-13.3 1.7s-9.9-7.6-8.6-11.1 7.3-4.3 13.3-1.7c6.1 2.6 9.9 7.6 8.6 11.1z"/><g class="st11"><defs><path id="SVGID_99_" d="M450.7 219.7c0 34.3-.9 35.5-32.8 35.5s-52.5-1.3-52.5-35.6 13.5-20.7 45.4-20.7 39.9-13.5 39.9 20.8z"/></defs><clipPath id="SVGID_100_"><use xlink:href="#SVGID_99_" style="overflow:visible"/></clipPath><path d="M386.9 251.5c-5.4 7.6-8.7 18.2-5.2 22 3.8 4.1 13.9-.7 21.5-7.6 7.2 6.1 16.2 10 19.8 6.1 3.4-3.6.7-13.3-4.1-20.6 8.5-4.5 15.2-13 13.4-18.3-1.7-4.9-10.7-5.2-19.1-3.3-1.2-9.6-5.4-18.3-10.4-18.3s-9.2 8.7-10.4 18.3c-8.5-1.9-17.8-.1-19.4 4.9-1.9 5.3 5.2 12.4 13.9 16.8z" style="clip-path:url(#SVGID_100_);fill:#edd70a"/></g><path class="st9" d="M410.3 223.9c-1.5 2.6-5.5 2.8-8.9.5s-4.9-6.3-3.3-8.9 5.5-2.8 8.9-.5 4.8 6.3 3.3 8.9z"/><path class="st10" d="M408 222.3c-1 1.6-3.5 1.8-5.6.3s-3.1-4-2.1-5.6 3.5-1.8 5.6-.3c2.2 1.5 3.1 4 2.1 5.6z"/><path class="st13" d="M441.6 296.2c13.7-11.8 22.4-30 22.4-50.3 0-35.6-26.9-64.5-60-64.5-15.8 0-30.2 6.6-40.9 17.3 10.2-8.9 23.3-14.2 37.6-14.2 33.1 0 60 28.9 60 64.5 0 18.6-7.3 35.4-19.1 47.2z"/><path class="st9" d="M366.1 195.8c-13.7 11.8-22.4 30-22.4 50.3 0 35.6 26.9 64.5 60 64.5 15.8 0 30.2-6.6 40.9-17.3-10.2 8.9-23.3 14.2-37.6 14.2-33.1 0-60-28.9-60-64.5 0-18.7 7.4-35.5 19.1-47.2z"/></svg>',
                        width: 820,
                        height: 328,
                        mimetype: "svg+xml"
                    })
                }), !0), Le = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_bitmapfont.svg", {
                        data: '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" width="1056" height="188" style="enable-background:new 0 0 1056 188" xml:space="preserve"><style>.st0{fill:#fff}</style><path class="st0" d="M87.6 148.2c-.3 7.5-1.9 14.3-5 20-2.4 5-6.4 9.7-12 13.5-5.6 4-13 6.2-23.1 6.2s-17.8-2.2-23.4-6.2c-5.6-3.7-9.2-8.5-11.7-13.5-3.1-5.7-4.8-12.5-5-20V39.9c.3-7.2 1.9-14 5-19.7 2.4-5 6.1-10 11.7-13.7S37.4.3 47.5.3 65 2.7 70.6 6.5s9.5 8.7 12 13.7c3.1 5.7 4.8 12.5 5 19.7v108.3zM57.4 39.9c0-5-1.1-8.5-3.9-11.5-1.4-1.2-3.7-1.9-6.1-1.9-5.3 0-7.7 3.5-9 6.8-.8 1.9-1.1 4.3-1.1 6.8v108.2c0 5.3 1.4 8.7 4.2 11.5 1.4 1.2 3.4 1.9 5.8 1.9 5.3 0 7.7-3.1 9-6.8.8-1.8 1.1-4 1.1-6.8V39.9zM115.4 40.8V23.2c13.3-2.3 21.4-8.2 27-13.3 3-3.1 5.3-6.4 7.1-9.6h19.2V188h-31.9V40.8h-21.4zM200.6 61V48.1c0-12.4 1.9-24.6 7.6-33.4S223.9 0 240.1 0c15.1 0 25.3 5.3 31.3 13.3 6 8.3 8.3 20 8.3 32.9 0 19-7.6 41.4-17.2 62.5-9.9 21.2-21.4 40.2-29.1 52.1h46.9V188H200v-27.1c9.1-12.9 17.2-26 24.7-39.2C231 110.6 237 98 241.7 85s8.3-25.6 8.6-37c0-5.1-.3-10.8-1.6-15.2s-3.9-7.6-8.3-7.6c-4.1 0-6.5 2.8-8 6.9-1.3 4.4-1.9 9.8-1.9 15.9v13h-29.9zM321.2 102.9V80.4c12.5-.7 18.3-3.1 20.9-8.2 1.4-2.5 1.9-5.7 1.9-9.7V47.8c0-5.3 0-11-1.1-15.7s-3.7-8.1-8.4-8.1c-3.7 0-5.8 1.5-6.9 6.2-1.4 5-1.9 12.8-1.9 25h-29.6c0-10.3.3-24.3 5.3-35.5 5-11 14.2-19.4 33.1-19.4 18.8 0 28.6 8.7 33.6 18.1s5.3 19.3 5.3 21.5c0 27.2-5.3 40.3-14.5 48.5l-.3.3c14.5 10.3 17.2 29.3 17.2 50.5 0 .7 0 2.5-.3 5.3-.3 5.3-1.9 13.1-5 21-3.4 8.1-8.9 15.3-17.5 19.4-4.5 2.2-9.8 3.2-16.1 3.2-19 0-28.6-8.5-33.9-19.7-5.3-11-5.8-25-5.8-35.3h29.6c0 12.2.8 20 2.4 24.7 1.6 5 4.2 6.5 7.7 6.5 4.7 0 7.2-3.2 8.4-7.8s1.1-10.3 1.1-15.6c0-5.7 0-11 .3-15.7 0-9-1.9-15.3-8.4-19-3.4-1.8-8.4-3.1-14.8-3.2l-2.3-.1zM434.6 147H386v-24.2L431.9.3h31.5v122.5H478V147h-14.6v40.8h-28.8V147zm-21.8-24.2h21.8V58.6h-1.7l-1.7 5.7-18.4 58.5zM537.4 97.8c0-7.9-3.2-13.6-9.7-13.6-3.5 0-6.2 2.2-8.6 5.1-2.2 3.1-3.5 6.6-3.5 8.6h-26V0H564v27.1h-47.9v38.6c3.5-2.2 7.1-4.4 11.4-5.6 1.9-.7 4.3-1 6.2-.7 16 0 24.4 8.1 29 17s5.3 18.3 5.3 21.4v41.5c0 8.9-.6 20.8-6 30.6-5.4 10.1-15.7 18-34.1 18-19 0-28.7-7.9-34.1-19-5.4-10.8-6-24.7-6-37.2h30.8v7.3c0 9.4.6 15.9 1.9 19.5 1.4 3.8 3.7 5.6 7.4 5.6 3.2 0 5.7-1.8 7.1-5.3 1.4-3.5 2.2-10.1 2.2-19.5l.2-41.5zM663.8 148.1c0 4.3-.6 14.3-5.9 23-5.4 9-15.6 16.8-33.9 16.8-18.9 0-28.5-7.8-33.9-16.8-5.4-8.7-5.9-18.7-5.9-23V43.6c0-6.2.3-17.5 5.6-26.8 5.4-9 15-16.8 34.2-16.8 19.3 0 28.8 7.8 34.2 16.8 5.4 9.3 5.6 20.5 5.6 26.8v11.5h-30.6c0-12.2-.3-20.3-1.4-25-1.1-4.7-3.4-6.5-7.9-6.5-3.7 0-6.2 1.5-7.3 4.7-1.4 3.2-1.9 8.2-1.9 15.3v32.8c5.4-2.8 9.9-4.4 15.3-4.4 15.8 0 24.3 7.2 28.8 15.5 4.5 8.2 5.1 18.2 5.1 23.2l-.1 37.4zm-49.2 7.9c0 2.2 2.2 8.2 9.4 8.2 6.5 0 9.4-6 9.4-8.2v-55c0-2.2-2.9-8.2-9.4-8.2s-9.1 4.7-9.4 7.5V156zM727.5 27.4h-47.1V.1h79.2v27.6L728.1 188h-32.7l32.1-160.6zM856.2 146.6c0 1.8-.3 6.8-1.6 12.8-1.3 6.2-4.7 13.2-10.5 18.7-5.8 5.6-14.7 9.7-27.6 9.7s-21.8-4.3-27.6-9.7c-5.8-5.6-9.2-12.5-10.5-18.7-1.3-6-1.6-11-1.6-12.8v-21.5c0-13.7 5.3-27.5 15.5-36.2-9.2-8.2-13.9-21-13.9-33.7V39.7c0-2.2.3-12.2 5.3-21.5S797.8.1 816.6.1c18.9 0 28.2 8.7 33.1 18.1 5 9.3 5 19.3 5 21.5v15.6c0 12.8-4.7 25.5-13.9 33.7 10.2 8.7 15.5 22.5 15.5 36.2l-.1 21.4zm-29.1-10.8c0-11-.5-19.3-1.3-24.4-1.1-5.3-4.2-8.1-9.4-8.1s-8.4 2.8-9.2 8.1c-2.2 10.7-1.9 37.5.8 45.5 1.3 4.3 4.2 6.2 8.4 6.2 5.3 0 8.4-2.5 9.4-7.2.8-4.8 1.3-11.5 1.3-20.1zm-1.8-86.6c0-8.5-.5-14.7-1.3-19-1.1-4.3-3.6-6.2-7.4-6.2-3.4 0-5.5 1.8-6.6 5.6-2.4 7.2-2.8 31.9-.5 40.7.8 4.4 3.4 6.8 7.1 6.8 3.9 0 6.3-2.2 7.4-6.8.7-4.3 1.3-11.4 1.3-21.1zM872.9 39.8c0-4.3.5-14.3 5.9-23.2C884.1 7.9 893.7.1 912.5.1c18.2 0 28.4 7.8 33.7 16.5 5.3 9 5.9 19 5.9 23.2v104.4c0 6.8-.3 17.5-5.6 26.5-5.3 9.3-14.9 16.9-34 16.9-19.2 0-28.7-7.8-34-16.9-5.3-9-5.6-19.7-5.6-26.5v-11.5h30.4c0 12.2.3 20.3 1.4 25 1.1 4.7 3.4 6.5 7.8 6.5 3.7 0 6.2-1.5 7.5-4.7 1.1-3.2 1.6-8.2 1.6-15.3v-34.4c-5.3 2.8-9.9 4.4-15.2 4.4-15.8 0-24.1-7.2-28.7-15.6-4.5-8.2-5.1-18.2-5.1-23.2l.3-35.6zm48.9-7.9c0-2.2-2.2-8.2-9.3-8.2-6.4 0-9.3 6-9.3 8.2v53.2c0 2.2 2.9 8.2 9.3 8.2s9-4.7 9.3-7.5V31.9zM1046 85.5h-26V58.4h-24v27.1h-26v25h26v27.1h24v-27.1h26z"/></svg>',
                        width: 1056,
                        height: 188,
                        mimetype: "svg+xml"
                    })
                }), !0), Oe = Host.bootstrapper.load((function () {
                    return XS.assets.__importATL("i/g/_bitmapfontstroke.svg", {
                        data: '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" width="737" height="136" style="enable-background:new 0 0 737 136" xml:space="preserve"><style>.st0{fill:#fff}</style><path class="st0" d="M62.2 106.4c-.2 5.3-1.4 10.1-3.6 14.2-1.8 3.5-4.6 6.9-8.6 9.5-4 2.9-9.4 4.4-16.6 4.4s-12.8-1.5-16.8-4.4c-4-2.7-6.6-6-8.4-9.5-2.2-4-3.4-8.8-3.6-14.2V29.6c.2-5.1 1.4-9.9 3.6-14 1.8-3.5 4.4-7.1 8.4-9.7s9.6-4.4 16.8-4.4S46 3.3 50 5.9s6.8 6.2 8.6 9.7c2.2 4 3.4 8.8 3.6 14v76.8zM40.6 29.6c0-3.5-.8-6-2.8-8.2-1-.9-2.6-1.4-4.4-1.4-3.8 0-5.6 2.5-6.4 4.8-.6 1.4-.8 3-.8 4.8v76.7c0 3.7 1 6.2 3 8.2 1 .9 2.4 1.4 4.2 1.4 3.8 0 5.6-2.2 6.4-4.8.6-1.3.8-2.9.8-4.8V29.6z"/><path d="M33.4 136c-7.4 0-13.4-1.6-17.6-4.7-3.8-2.6-6.8-6-8.9-10-2.3-4.1-3.6-9.1-3.8-14.8V29.7C3.4 24 4.7 19.1 7 14.9c2.2-4.4 5.2-7.8 8.9-10.2C20.5 1.6 26.6 0 33.4 0 40.2 0 46 1.6 50.8 4.6c4.8 3.1 7.6 7.3 9.1 10.3 2.3 4.1 3.6 9 3.8 14.6v76.8c-.2 5.7-1.5 10.7-3.8 14.9-2 4-5.2 7.5-9.1 10-4.3 3.3-10 4.8-17.4 4.8zm0-133c-6.3 0-11.8 1.4-16 4.2-3.3 2.1-5.9 5.2-7.9 9.1-2.1 3.9-3.3 8.3-3.5 13.4v76.7c.2 5.2 1.3 9.8 3.4 13.5 1.9 3.7 4.5 6.7 7.9 9 3.8 2.8 9.2 4.2 16 4.2 6.8 0 11.9-1.4 15.8-4.1 3.6-2.3 6.3-5.4 8.1-9 2.1-3.8 3.3-8.4 3.5-13.6V29.6c-.2-5.1-1.3-9.6-3.4-13.3-1.4-2.7-3.8-6.4-8.1-9.2C45 4.4 39.7 3 33.4 3zm-.1 114.4c-2.1 0-3.9-.6-5.2-1.8-2.4-2.3-3.5-5.3-3.5-9.3V29.6c0-2.2.3-3.9.9-5.4 1.4-3.7 4.1-5.7 7.8-5.7 2.2 0 4.1.6 5.4 1.8l.1.1c2.2 2.4 3.2 5.2 3.2 9.2v76.7c0 2.3-.3 4-.9 5.4-1.6 4.7-5.1 5.7-7.8 5.7zm0-95.9c-2.5 0-4.1 1.2-5.1 3.9-.5 1.1-.7 2.5-.7 4.3v76.7c0 3.2.8 5.4 2.6 7.1.7.6 1.8 1 3.2 1 2.6 0 4.2-1.2 5.1-3.8l.1-.1c.4-1 .6-2.3.6-4.2V29.6c0-3.2-.7-5.3-2.4-7.1-.7-.6-2-1-3.4-1z"/><path class="st0" d="M74.7 30.9V18.7c10-1.6 16-5.7 20.2-9.3 2.3-2.2 3.9-4.4 5.3-6.7h14.4v130.5h-24V30.9H74.7z"/><path d="M116 134.8H89.1V32.5h-16V17.3l1.3-.2c9.6-1.5 15.4-5.5 19.4-8.9 2-1.9 3.6-4 5-6.3l.4-.8H116v133.7zm-23.9-3.1H113V4.3h-12c-1.4 2.3-3.1 4.4-5.1 6.3l-.1.1c-4.1 3.4-10 7.6-19.6 9.4v9.3h16v102.3z"/><path class="st0" d="M138.8 44.9v-9c0-8.6 1.4-17.2 5.5-23.4 4.2-6.2 11.4-10.2 23.1-10.2 11 0 18.3 3.8 22.7 9.3 4.4 5.8 6 13.9 6 23 0 13.3-5.5 29-12.5 43.7-7.2 14.8-15.5 28.1-21.2 36.5h34.1v19h-58.4v-19c6.6-9 12.5-18.2 18-27.4 4.6-7.8 8.9-16.6 12.3-25.6s6-17.9 6.2-25.8c0-3.6-.2-7.6-1.2-10.6-1-3.1-2.8-5.3-6-5.3-3 0-4.8 2-5.8 4.8-1 3.1-1.4 6.9-1.4 11.1v9c.1-.1-21.4-.1-21.4-.1z"/><path d="M198 135.2h-61.3v-20.9l.3-.4c5.9-8 11.7-16.9 17.9-27.3 4.7-8.1 9-16.8 12.2-25.4 4-10.6 5.9-18.6 6.1-25.3 0-4.5-.4-7.8-1.1-10.1-1.3-3.9-3.2-4.3-4.6-4.3-.8 0-3.1 0-4.4 3.9-.9 2.7-1.3 6.3-1.3 10.6v9l-1.5.3-.1 1.2c-.8-.1-13.2-.1-21.2-.1h-1.5V35.9c0-10.3 1.9-18.5 5.7-24.2 4.9-7.2 13-10.9 24.3-10.9 10.5 0 18.7 3.4 23.9 9.9 4.3 5.6 6.3 13.5 6.3 23.9 0 11.8-4.3 26.7-12.6 44.3-7 14.5-14.9 27.1-19.8 34.4H198v21.9zm-58.4-2.9H195v-16.1h-35.4l1.5-2.3c4.6-6.7 13.4-20.4 21.1-36.3 8.2-17.3 12.4-31.8 12.4-43.1 0-9.8-1.9-17.1-5.7-22.2-4.6-5.8-11.8-8.7-21.5-8.7-10.4 0-17.5 3.1-21.9 9.5-3.5 5.3-5.3 12.9-5.3 22.6v7.5h18.5V36c0-4.7.5-8.5 1.5-11.5 1.7-4.8 4.8-5.9 7.2-5.9 2.4 0 5.7 1.1 7.4 6.4.9 2.6 1.3 6.1 1.3 11-.2 7.1-2.2 15.4-6.3 26.3-3.3 8.7-7.6 17.6-12.4 25.8-6.1 10.3-12 19.2-17.8 27.1v17.1z"/><path class="st0" d="M224.5 74.2V58.3c9.2-.5 13.5-2.2 15.4-5.8 1-1.8 1.4-4 1.4-6.9V35.2c0-3.7 0-7.8-.8-11.1s-2.7-5.7-6.2-5.7c-2.7 0-4.3 1.1-5.1 4.4-1 3.5-1.4 9-1.4 17.7h-21.7c0-7.3.2-17.2 3.9-25.2 3.7-7.8 10.5-13.8 24.3-13.8 13.9 0 21 6.2 24.7 12.8s3.9 13.7 3.9 15.2c0 19.3-3.9 28.5-10.7 34.3l-.2.2c10.7 7.3 12.7 20.8 12.7 35.8 0 .5 0 1.8-.2 3.7-.2 3.7-1.4 9.2-3.7 14.9-2.5 5.7-6.6 10.8-12.9 13.8-3.3 1.6-7.2 2.3-11.9 2.3-14 0-21-6-24.9-14-3.9-7.8-4.3-17.7-4.3-25h21.7c0 8.7.6 14.2 1.8 17.5 1.2 3.5 3.1 4.6 5.7 4.6 3.5 0 5.3-2.3 6.2-5.5.9-3.2.8-7.3.8-11 0-4 0-7.8.2-11.1 0-6.4-1.4-10.8-6.2-13.5-2.5-1.3-6.2-2.2-10.9-2.3h-1.6z"/><path d="M236 136c-12.8 0-21.4-4.9-26.2-14.8-3.9-7.9-4.5-17.9-4.5-25.7V94H230v1.5c0 8.3.6 13.8 1.7 17 1 3 2.4 3.6 4.3 3.6 1.6 0 3.7-.5 4.8-4.4.8-2.7.8-6.2.7-9.6v-1c0-4 0-7.8.2-11.2 0-6.5-1.5-9.9-5.4-12.1-2.4-1.3-6.1-2-10.2-2.1H223V56.9l1.4-.1c8.4-.5 12.5-1.9 14.2-5 .9-1.5 1.2-3.4 1.2-6.2V35.2c0-3.6 0-7.6-.8-10.8-1.1-4.6-3.9-4.6-4.8-4.6-1.9 0-3 .5-3.7 3.3-.9 3.3-1.4 8.6-1.4 17.4V42h-24.7v-1.5c0-6 0-17.1 4-25.8C213.3 4.8 221.7 0 234.3 0c12.2 0 21 4.6 26 13.6 3.8 6.8 4.1 13.9 4.1 15.9 0 17.2-3 27.6-10.1 34.4 10.4 8.3 11.9 22.7 11.9 35.9 0 .5 0 1.9-.2 3.9-.2 4.2-1.6 10-3.8 15.3-3 6.8-7.6 11.7-13.6 14.6-3.5 1.6-7.6 2.4-12.6 2.4zm-27.7-39c.1 7.2.7 16 4.1 22.9 4.4 9 11.9 13.2 23.6 13.2 4.6 0 8.3-.7 11.3-2.2 5.4-2.6 9.5-7 12.2-13.1 2-5 3.4-10.4 3.6-14.4.2-1.9.2-3.1.2-3.6 0-13.7-1.5-27.3-12.1-34.6l-1.5-1 1.6-1.5c7.1-6.1 10.2-16 10.2-33.2 0-1.3-.2-8.2-3.7-14.5-4.5-8-12.4-12-23.4-12-11.5 0-18.8 4.1-23 13-3.5 7.5-3.7 17.1-3.8 23.1h18.7c0-8.2.5-13.2 1.5-16.6.9-3.7 3-5.5 6.5-5.5 3.9 0 6.6 2.4 7.6 6.8.8 3.5.8 7.7.8 11.5v10.4c0 3.3-.5 5.6-1.6 7.6-2.1 3.9-6.5 5.8-15.2 6.5v13h.1c4.7.1 8.7 1 11.6 2.5 6.2 3.5 7 9.4 7 14.8-.2 3.3-.2 7.1-.2 11.1v1c0 3.6 0 7.3-.9 10.4-1.5 5.4-5 6.6-7.6 6.6-3.5 0-5.8-1.8-7.1-5.6-1.2-3.3-1.8-8.6-1.9-16.5h-18.6z"/><path class="st0" d="M303.2 105.1h-33.7v-17l31.9-85.7h21.8v85.7h10.1v17h-10.1v28.6h-20v-28.6zm-15.1-17h15.1V43.2H302l-1.2 4-12.7 40.9z"/><path d="M324.7 135.1h-23v-28.6H268V87.8l.1-.2L300.4.9h24.3v85.7h10.1v20h-10.1v28.5zm-20-2.9h17v-28.6h10.1V89.5h-10.1V3.8h-19.3L271 88.3v15.3h33.7v28.6zm0-42.7h-18.6l14.8-47.8h3.8v47.8zm-14.6-2.9h11.6V49.2l-11.6 37.4z"/><path class="st0" d="M376.8 70.8c0-5.5-2.3-9.5-7-9.5-2.5 0-4.5 1.6-6.2 3.6-1.6 2.2-2.5 4.6-2.5 6h-18.7V2.4H396v19h-34.5v27c2.5-1.6 5.1-3.1 8.2-4 1.4-.5 3.1-.7 4.5-.5 11.5 0 17.6 5.7 20.9 11.9s3.8 12.8 3.8 14.9v29c0 6.2-.4 14.5-4.3 21.5-3.9 7.1-11.3 12.6-24.6 12.6-13.7 0-20.7-5.5-24.6-13.2-3.9-7.6-4.3-17.3-4.3-26h22.2v5.1c0 6.6.4 11.1 1.4 13.6 1 2.7 2.7 4 5.3 4 2.3 0 4.1-1.3 5.1-3.8s1.6-7.1 1.6-13.6l.1-29.1z"/><path d="M370 135.1c-12.7 0-21.2-4.6-25.9-14.1-4.1-8-4.5-18-4.5-26.7v-1.5h25.2v6.6c0 6.7.4 10.8 1.3 13.1.8 2.1 2 3 3.9 3 1.7 0 3-1 3.7-2.8.6-1.4 1.5-4.9 1.5-13.1l.1-29c0-2.4-.5-8-5.5-8-1.7 0-3.3 1-5 3-1.4 1.9-2.2 4.1-2.2 5.1v1.5h-21.7V.9h56.6v21.9H363v22.9c1.9-1.1 4-2.1 6.3-2.7 1.5-.5 3.4-.8 5-.6 10.2 0 17.6 4.3 22.1 12.6 3.9 7.2 4 14.8 4 15.6v29c0 7-.5 15.2-4.5 22.2-4.8 8.8-13.6 13.3-25.9 13.3zm-27.4-39.2c0 8 .5 16.8 4.1 23.9 4.3 8.5 11.7 12.4 23.3 12.4 11.2 0 19-4 23.3-11.8 3.6-6.4 4.1-14.1 4.1-20.7v-29c0-.8-.1-7.7-3.6-14.2-4-7.4-10.5-11.1-19.6-11.1h-.2c-1.1-.2-2.6 0-3.8.4-3 .9-5.6 2.3-7.9 3.8L360 51V19.9h34.5v-16h-50.6v65.6h15.9c.4-1.7 1.3-3.7 2.6-5.4l.1-.1c1.5-1.8 3.9-4.1 7.3-4.1 5.2 0 8.5 4.2 8.5 11l-.1 29c0 6.5-.6 11.4-1.7 14.2-1.2 3-3.5 4.7-6.5 4.7-3.2 0-5.5-1.7-6.7-4.9-1-2.6-1.5-7-1.5-14.2V96h-19.2z"/><path class="st0" d="M463.9 106c0 3-.4 10-4.3 16.2-3.9 6.4-11.2 11.8-24.3 11.8-13.5 0-20.5-5.5-24.3-11.8-3.9-6.2-4.3-13.2-4.3-16.2V32.4c0-4.4.2-12.3 4.1-18.8 3.9-6.4 10.8-11.8 24.5-11.8 13.8 0 20.7 5.5 24.5 11.8 3.9 6.6 4.1 14.4 4.1 18.8v8.1H442c0-8.6-.2-14.2-1-17.6-.8-3.3-2.5-4.6-5.6-4.6-2.7 0-4.4 1.1-5.2 3.3-1 2.3-1.4 5.8-1.4 10.7v23.1c3.9-2 7.1-3.1 11-3.1 11.4 0 17.4 5.1 20.7 10.9 3.3 5.8 3.7 12.8 3.7 16.3l-.3 26.5zm-35.4 5.6c0 1.6 1.6 5.8 6.7 5.8 4.6 0 6.7-4.2 6.7-5.8V72.9c0-1.6-2.1-5.8-6.7-5.8s-6.5 3.3-6.7 5.3v39.2z"/><path d="M435.4 135.5c-11.9 0-20.5-4.2-25.6-12.5-3.9-6.2-4.5-13.3-4.5-17V32.4c0-5.8.5-13.2 4.3-19.6C414.7 4.4 423.1.3 435.4.3c12.2 0 20.7 4.1 25.8 12.5 3.8 6.4 4.3 13.8 4.3 19.6v9.5h-24.9v-1.5c0-7.9-.2-13.9-.9-17.3-.6-2.6-1.7-3.4-4.2-3.4-2.7 0-3.5 1.3-3.9 2.3-.9 2.1-1.3 5.3-1.3 10.2V53c3.5-1.6 6.3-2.2 9.5-2.2 10.2 0 17.6 3.9 21.9 11.7 3.2 5.6 3.8 12.4 3.8 17v27.8h-.1c-.1 3.9-1 10.1-4.5 15.6-3.4 5.8-10.7 12.6-25.5 12.6zm0-132.2c-11.1 0-18.7 3.6-23.3 11.1-3.4 5.7-3.8 12.6-3.8 18V106c0 3.4.5 9.8 4 15.4 4.5 7.5 12.1 11.1 23.1 11.1 10.7 0 18.7-3.8 23.1-11.1 3.5-5.6 4-12.1 4-15.4v-1.6h.1V79.5c0-3.5-.4-10.2-3.5-15.6-3.8-6.8-10.3-10.2-19.4-10.2-3.3 0-6.3.8-10.3 2.9l-2.1 1.1V32.3c0-5.4.5-8.9 1.5-11.3.7-1.9 2.4-4.2 6.6-4.2 3.9 0 6.1 1.8 7.1 5.7.8 3.4 1 8.9 1 16.5h19v-6.6c0-5.3-.4-12.2-3.8-18-4.6-7.5-12.2-11.1-23.3-11.1zm-.1 115.5c-6.1 0-8.2-5-8.2-7.2V72.3c.3-2.7 2.7-6.6 8.2-6.6 5.4 0 8.2 4.7 8.2 7.2v38.7c0 2.5-2.9 7.2-8.2 7.2zM430 72.5v39.1c0 .7.9 4.3 5.3 4.3 3.8 0 5.3-3.6 5.3-4.3V72.9c0-.7-1.4-4.3-5.3-4.3-4 0-5.1 2.7-5.3 3.9z"/><path class="st0" d="M507.4 21.6H474v-19h56v19.2l-22.2 111.5h-23l22.6-111.7z"/><path d="M509 134.8h-26.2l22.6-111.7h-33V1.2h59v20.9L509 134.8zm-22.4-3h19.9l21.9-110.2V4.1h-52.9v16.1h33.6l-22.5 111.6z"/><path class="st0" d="M598.5 105.2c0 1.3-.2 4.8-1.2 9-1 4.4-3.4 9.3-7.6 13.2s-10.6 6.9-20 6.9-15.8-3-20-6.9-6.6-8.8-7.6-13.2c-1-4.2-1.2-7.8-1.2-9V89.9c0-9.7 3.8-19.4 11.2-25.6-6.6-5.8-10.1-14.7-10.1-23.8V29.8c0-1.6.2-8.7 3.8-15.1S556 1.9 569.6 1.9c13.7 0 20.4 6.2 24 12.7s3.6 13.6 3.6 15.1v11c0 9-3.4 18-10.1 23.8 7.4 6.2 11.2 15.8 11.2 25.6l.2 15.1zm-21.2-7.7c0-7.8-.4-13.6-1-17.2-.8-3.7-3-5.7-6.8-5.7s-6.1 2-6.6 5.7c-1.6 7.6-1.4 26.4.6 32.1 1 3 3 4.4 6.1 4.4 3.8 0 6.1-1.8 6.8-5.1.6-3.4.9-8.1.9-14.2zM576 36.4c0-6-.4-10.4-1-13.4-.8-3-2.6-4.4-5.4-4.4-2.4 0-4 1.3-4.8 3.9-1.8 5.1-2 22.5-.4 28.7.6 3.1 2.4 4.8 5.2 4.8s4.6-1.6 5.4-4.8c.7-3 1-8 1-14.8z"/><path d="M569.7 135.7c-8.7 0-15.8-2.4-21-7.3-4-3.7-6.8-8.7-8-14-1-4.1-1.2-7.8-1.2-9.3V89.9c0-10 3.9-19.4 10.5-25.6-5.9-5.8-9.4-14.6-9.4-23.8V29.8c0-2 .3-9.2 4-15.8C549.6 5 558 .5 569.7.5 581.6.5 590.1 5 595 14c2.4 4.4 3.8 10.1 3.8 15.8v11c0 9.2-3.5 18-9.4 23.8 6.7 6.2 10.5 15.5 10.5 25.6l.2 15c0 .4 0 4.3-1.2 9.3-1.2 5.2-4 10.2-8 14-5.3 4.8-12.4 7.2-21.2 7.2zm-.2-132.3c-10.7 0-18 3.9-22.5 12-3.4 6.2-3.6 13.1-3.6 14.4v10.8c0 9 3.6 17.4 9.6 22.7l1.3 1.1-1.3 1.1c-6.7 5.6-10.7 14.7-10.7 24.5v15.2c0 1.3.2 4.8 1.2 8.6 1.1 4.8 3.6 9.2 7.2 12.5 4.6 4.3 11 6.5 19 6.5 8.1 0 14.5-2.2 19-6.5 3.6-3.4 6.1-7.8 7.2-12.5 1.1-4.7 1.2-8.2 1.2-8.6l-.2-15c0-9.8-4-18.9-10.7-24.5l-1.3-1.1 1.3-1.1c6-5.2 9.6-13.7 9.6-22.7v-11c0-5.3-1.2-10.4-3.4-14.4-4.6-8.1-12-12-22.9-12zm.2 114.8c-3.8 0-6.3-1.8-7.5-5.4-2.1-6.1-2.2-25.3-.7-32.8.6-4.4 3.5-6.9 8-6.9 4.4 0 7.3 2.4 8.2 6.8.7 4 1 10.2 1 17.5 0 5.4-.3 10.2-.9 14.4-.8 4.2-3.7 6.4-8.1 6.4zm-.2-42.1c-3.1 0-4.7 1.4-5.1 4.4v.1c-1.6 7.6-1.3 26.1.5 31.3.8 2.4 2.2 3.4 4.7 3.4 3 0 4.8-1.3 5.4-3.9.6-3.8.9-8.6.9-13.8 0-7.2-.3-13.2-1-17-.7-3.1-2.3-4.5-5.4-4.5zm0-18.8c-3.5 0-5.9-2.2-6.6-6-1.7-6.5-1.4-24.1.5-29.4 1.2-4 4-4.9 6.2-4.9 3.5 0 5.9 1.9 6.8 5.5v.1c.7 3.5 1 8.1 1 13.7 0 7.3-.3 12.2-1 15.1-1.2 4.9-4.4 5.9-6.9 5.9zm0-37.3c-1.2 0-2.6.3-3.4 2.9-1.7 4.8-1.9 22-.4 27.9.5 2.5 1.7 3.7 3.8 3.7 1.4 0 3.2-.4 4-3.7.6-2.6 1-7.4 1-14.4 0-5.4-.3-9.8-1-13.1-.6-2.3-1.8-3.3-4-3.3z"/><path class="st0" d="M608.3 29.8c0-3 .4-10 4.2-16.2C616.3 7.4 623.1 2 636.3 2c12.9 0 20 5.4 23.8 11.6 3.8 6.3 4.2 13.3 4.2 16.2v73.1c0 4.7-.2 12.3-4 18.6-3.8 6.5-10.6 11.9-24 11.9-13.6 0-20.2-5.4-24-11.9-3.8-6.3-4-13.8-4-18.6v-8.1h21.4c0 8.5.2 14.1 1 17.5.8 3.3 2.4 4.5 5.5 4.5 2.6 0 4.4-1.1 5.3-3.3.8-2.3 1.2-5.7 1.2-10.7V78.7c-3.8 2-7 3.1-10.8 3.1-11.2 0-17.1-5-20.2-10.9-3.2-5.7-3.6-12.8-3.6-16.2l.2-24.9zm34.6-5.5c0-1.6-1.6-5.7-6.6-5.7-4.6 0-6.6 4.2-6.6 5.7v37.2c0 1.6 2 5.7 6.6 5.7s6.4-3.3 6.6-5.2V24.3z"/><path d="M636.3 134.8c-12 0-20.2-4.1-25.2-12.6-4.2-7-4.2-15.3-4.2-19.3v-9.6h24.3v1.5c0 7.9.2 13.8.9 17.2.6 2.6 1.6 3.4 4.1 3.4 2 0 3.3-.7 4-2.3.7-2.1 1.1-5.5 1.1-10.1V81.1c-3.4 1.5-6.2 2.2-9.3 2.2-10 0-17.4-4-21.5-11.6-3.1-5.6-3.8-12.3-3.8-16.9l.1-24.9c0-3.6.6-10.7 4.4-17 5-8.1 13.4-12.3 25-12.3 14.4 0 21.5 6.7 25 12.3 3.8 6.4 4.4 13.4 4.4 17V103c0 4 0 12.3-4.2 19.3-4.8 8.3-13.1 12.5-25.1 12.5zm-26.5-38.6v6.6c0 3.7 0 11.5 3.8 17.8 4.5 7.6 11.7 11.2 22.7 11.2 10.9 0 18.4-3.6 22.7-11.1 3.8-6.3 3.8-14.1 3.8-17.8V29.8c0-3.3-.5-9.7-4-15.4-4.4-7.2-12-10.9-22.5-10.9-10.7 0-18 3.6-22.6 10.9-3.4 5.7-4 12.1-4 15.4l-.1 24.9c0 3.5.4 10.2 3.4 15.5 3.6 6.7 10 10.1 18.9 10.1 3.2 0 6.2-.8 10.1-2.9l2.1-1.1v26.5c0 5.1-.4 8.7-1.2 11.2v.1c-1.2 2.7-3.5 4.1-6.6 4.1-3.8 0-6-1.8-6.9-5.7-.8-3.4-1-8.8-1-16.4h-18.6zm26.5-27.6c-5.3 0-8-4.7-8-7.2V24.3c0-2.5 2.8-7.2 8-7.2 6 0 8 4.9 8 7.2v37.8c-.2 2.6-2.6 6.5-8 6.5zm0-48.6c-3.8 0-5.2 3.5-5.2 4.3v37.2c0 .7 1.4 4.3 5.2 4.3 3.8 0 5-2.7 5.2-3.9V24.3c-.1-.8-1-4.3-5.2-4.3z"/><path class="st0" d="M731 58.5h-18.9v-19h-17.4v19h-18.9v17.6h18.9v19h17.4v-19H731z"/><path d="M713.6 96.5h-20.4v-19h-18.9V57.1h18.9V38h20.4v19h18.9v20.4h-18.9v19.1zm-17.4-2.9h14.5v-19h18.9V60h-18.9V41h-14.5v19h-18.9v14.7h18.9v18.9z"/></svg>',
                        width: 737,
                        height: 136,
                        mimetype: "svg+xml"
                    })
                }), !0), Fe = "runtimedir/assets/_voice_1_beautiful.34847edd.mp3", Xe = "runtimedir/assets/_voice_2_goodjob.100ea6df.mp3",
                Ge = "runtimedir/assets/_voice_3_gettinggood.96926c2e.mp3", ze = "runtimedir/assets/_voice_4_ohyeah.c3abb83a.mp3",
                je = "runtimedir/assets/_voice_9_gorgeous.9139c1cb.mp3", Ue = "runtimedir/assets/_voice_8_terrific.5011f319.mp3",
                Ne = "runtimedir/assets/_voice_7_genius.ea2d26e6.mp3", Je = "runtimedir/assets/_voice_6_stunning.1f25a766.mp3",
                Ke = "runtimedir/assets/_voice_5_fantastic.1f4a8f98.mp3", Ve = "runtimedir/assets/_clap1.5f944314.mp3",
                Ye = "runtimedir/assets/_clap2.a08ae8aa.mp3", We = "runtimedir/assets/_clap3.c2007be4.mp3",
                qe = "runtimedir/assets/_clap4.26ed9534.mp3", Ze = "runtimedir/assets/_clap5.d5e6d3e5.mp3",
                _e = "runtimedir/assets/_awww1.4bc1e235.mp3", $e = "runtimedir/assets/_awww2.1779c702.mp3",
                et = "runtimedir/assets/_hard_overlay_1.55275f84.mp3", tt = "runtimedir/assets/_hard_overlay_2.8ea00976.mp3",
                it = "runtimedir/assets/_hard_overlay_3.dc717be4.mp3", nt = "runtimedir/assets/_hard_overlay_4.5278069c.mp3",
                rt = "runtimedir/assets/_hard_overlay_5.c6d71d0f.mp3", ot = "runtimedir/assets/_button.323cec0f.mp3",
                at = "runtimedir/assets/_wrong.85d4e10d.mp3", st = "runtimedir/assets/_game_over.cd839dc6.mp3",
                ct = "runtimedir/assets/die.96e51c10.mp3", lt = "runtimedir/assets/spawn.65b9ab78.mp3",
                dt = "runtimedir/assets/explosion3.19e745cb.mp3", ut = "runtimedir/assets/speed.f178e0d9.mp3",
                ht = "runtimedir/assets/disengage.504e492a.mp3", ft = "runtimedir/assets/bullet_1.00d9c1c2.mp3",
                At = "runtimedir/assets/bullet_2.b9251111.mp3", gt = "runtimedir/assets/bullet_3.e9f10a6b.mp3",
                pt = "runtimedir/assets/bullet_4.f55572a1.mp3", vt = "runtimedir/assets/success.5085910c.mp3",
                wt = "runtimedir/assets/_coinpickup.c3a8c9c0.mp3", yt = "runtimedir/assets/hit.14fe0119.mp3",
                mt = "runtimedir/assets/alert.c6d0a91e.mp3", Ct = "runtimedir/assets/explosion1.91c4dc6b.mp3",
                It = "runtimedir/assets/explosion2.86407895.mp3", Et = "runtimedir/assets/explosion4.d57eeb48.mp3",
                St = "runtimedir/assets/explosion5.ac4a7d06.mp3";
            Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("tutorial.v6"), Host.Preferences.GetBool("tutorial.v6", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0), Host.bootstrapper.load(function () {
                var e = a(regeneratorRuntime.mark((function e(t) {
                    return regeneratorRuntime.wrap((function (e) {
                        for (; ;) switch (e.prev = e.next) {
                            case 0:
                                if (!Host.bootstrapper.hasPreInitializationPromise) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3, Host.bootstrapper.preInitializationPromise;
                            case 3:
                                Host.GameRemoteDataKeys.push("state.v8"), Host.Preferences.GetString("state.v8", t);
                            case 5:
                            case"end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function (t) {
                    return e.apply(this, arguments)
                }
            }(), !0);
            var bt, xt, Bt, Pt = "runtimedir/assets/_music.29a52321.mp3", Qt = "runtimedir/assets/_in.d50e1da8.mp3",
                Rt = "runtimedir/assets/_out.918581cd.mp3";

            function Dt() {
                var e = document.documentElement.getAttribute("data-XYYX-alc"),
                    t = [window.__XYYX.cohort().preferredLanguage];
                "alc" === e && (t = [].concat(t, function () {
                    tag = function () {
                        var e = window.navigator;
                        if (Array.isArray(e.languages)) for (i = 0; i < e.languages.length; i++) if ((n = e.languages[i]) && n.length) return n;
                        var t = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
                        for (i = 0; i < t.length; i++) if ((n = e[t[i]]) && n.length) return n;
                        return "en"
                    }();
                    var e = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\d{3}))?((?:-(?:[\da-z]{5,8}|\d[\da-z]{3}))*)?((?:-[\da-wy-z](?:-[\da-z]{2,8})+)*)?(-x(?:-[\da-z]{1,8})+)?$|^(x(?:-[\da-z]{1,8})+)$/i.exec(tag);
                    if (!e) return [];
                    e.shift();
                    var t, n = null;
                    e[2] && (t = e[2].split("-"), n = t.shift());
                    var r = e[3], o = e[4];
                    return [r && n + "-" + r, o && n + "-" + o, n, "zh" === n && o && function () {
                        switch (o.toLowerCase()) {
                            case"tw":
                            case"hk":
                            case"mo":
                                return "zh-Hant";
                            default:
                                return "zh-Hans"
                        }
                    }()].filter(Boolean)
                }())), (t = t.filter(Boolean)).length ? Host.bootstrapper.loadPromises.push(new Promise(function () {
                    var e = a(regeneratorRuntime.mark((function e(i, n) {
                        var r, o, a;
                        return regeneratorRuntime.wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    console.log("scheduleALC will try these in order", t), r = c(t);
                                case 2:
                                    if ((o = r()).done) {
                                        e.next = 11;
                                        break
                                    }
                                    return a = o.value, console.log("scheduleALC trying to load", a), e.next = 7, Host.Localize.Load(a);
                                case 7:
                                    e.sent && i();
                                case 9:
                                    e.next = 2;
                                    break;
                                case 11:
                                case"end":
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t, i) {
                        return e.apply(this, arguments)
                    }
                }())) : console.log("schedulerALC won't load any languages")
            }

            Host.bootstrapper.mnemonicMap[Fe] = "i/s/_voice_1_beautiful.mp3", Host.bootstrapper.mnemonicMap[Xe] = "i/s/_voice_2_goodjob.mp3", Host.bootstrapper.mnemonicMap[Ge] = "i/s/_voice_3_gettinggood.mp3", Host.bootstrapper.mnemonicMap[ze] = "i/s/_voice_4_ohyeah.mp3", Host.bootstrapper.mnemonicMap[je] = "i/s/_voice_9_gorgeous.mp3", Host.bootstrapper.mnemonicMap[Ue] = "i/s/_voice_8_terrific.mp3", Host.bootstrapper.mnemonicMap[Ne] = "i/s/_voice_7_genius.mp3", Host.bootstrapper.mnemonicMap[Je] = "i/s/_voice_6_stunning.mp3", Host.bootstrapper.mnemonicMap[Ke] = "i/s/_voice_5_fantastic.mp3", Host.bootstrapper.mnemonicMap[Ve] = "i/s/_clap1.mp3", Host.bootstrapper.mnemonicMap[Ye] = "i/s/_clap2.mp3", Host.bootstrapper.mnemonicMap[We] = "i/s/_clap3.mp3", Host.bootstrapper.mnemonicMap[qe] = "i/s/_clap4.mp3", Host.bootstrapper.mnemonicMap[Ze] = "i/s/_clap5.mp3", Host.bootstrapper.mnemonicMap[_e] = "i/s/_awww1.mp3", Host.bootstrapper.mnemonicMap[$e] = "i/s/_awww2.mp3", Host.bootstrapper.mnemonicMap[et] = "i/s/_hard_overlay_1.mp3", Host.bootstrapper.mnemonicMap[tt] = "i/s/_hard_overlay_2.mp3", Host.bootstrapper.mnemonicMap[it] = "i/s/_hard_overlay_3.mp3", Host.bootstrapper.mnemonicMap[nt] = "i/s/_hard_overlay_4.mp3", Host.bootstrapper.mnemonicMap[rt] = "i/s/_hard_overlay_5.mp3", Host.bootstrapper.mnemonicMap[ot] = "i/s/_button.mp3", Host.bootstrapper.mnemonicMap[at] = "i/s/_wrong.mp3", Host.bootstrapper.mnemonicMap[st] = "i/s/_game_over.mp3", Host.bootstrapper.mnemonicMap[ct] = "i/s/die.mp3", Host.bootstrapper.mnemonicMap[lt] = "i/s/spawn.mp3", Host.bootstrapper.mnemonicMap[dt] = "i/s/explosion3.mp3", Host.bootstrapper.mnemonicMap[ut] = "i/s/speed.mp3", Host.bootstrapper.mnemonicMap[ht] = "i/s/disengage.mp3", Host.bootstrapper.mnemonicMap[ft] = "i/s/bullet_1.mp3", Host.bootstrapper.mnemonicMap[At] = "i/s/bullet_2.mp3", Host.bootstrapper.mnemonicMap[gt] = "i/s/bullet_3.mp3", Host.bootstrapper.mnemonicMap[pt] = "i/s/bullet_4.mp3", Host.bootstrapper.mnemonicMap[vt] = "i/s/success.mp3", Host.bootstrapper.mnemonicMap[wt] = "i/s/_coinpickup.mp3", Host.bootstrapper.mnemonicMap[yt] = "i/s/hit.mp3", Host.bootstrapper.mnemonicMap[mt] = "i/s/alert.mp3", Host.bootstrapper.mnemonicMap[Ct] = "i/s/explosion1.mp3", Host.bootstrapper.mnemonicMap[It] = "i/s/explosion2.mp3", Host.bootstrapper.mnemonicMap[Et] = "i/s/explosion4.mp3", Host.bootstrapper.mnemonicMap[St] = "i/s/explosion5.mp3", Host.bootstrapper.mnemonicMap[Pt] = "i/s/_music.mp3", Host.bootstrapper.mnemonicMap[Qt] = "i/s/_in.mp3", Host.bootstrapper.mnemonicMap[Rt] = "i/s/_out.mp3", stage.orientationMode = "fixed", stage.orientation = "portrait", window.game = function () {
                var e = {
                    hideTutorial: Host.Preferences.QuickBool("tutorial.v6"),
                    state: Host.Preferences.QuickString("state.v8")
                };
                stage.background.color = "#36007e", stage.background.gradient = {
                    type: "linear",
                    stops: [[.9, "#140f3a"], [.1, "#36007e"]]
                };
                var t = {
                        voiceOver: [[XS.Sound.get(Fe, .5), "Beautiful!"], [XS.Sound.get(Xe, .5), "Good Job!"], [XS.Sound.get(Ge, .5), "Getting Good!"], [XS.Sound.get(ze, .5), "Oh Yeah!"], [XS.Sound.get(je, .5), "Gorgeous!"], [XS.Sound.get(Ue, .5), "Terrific!"], [XS.Sound.get(Ne, .5), "Genius!"], [XS.Sound.get(Je, .5), "Stunning!"], [XS.Sound.get(Ke, .5), "Fantastic!"]],
                        win: [XS.Sound.get(Ve, 1), XS.Sound.get(Ye, 1), XS.Sound.get(We, 1), XS.Sound.get(qe, 1), XS.Sound.get(Ze, 1)],
                        lose: [XS.Sound.get(_e, 1), XS.Sound.get($e, 1)],
                        overlay: [XS.Sound.get(et, 1), XS.Sound.get(tt, 1), XS.Sound.get(it, 1), XS.Sound.get(nt, 1), XS.Sound.get(rt, 1)],
                        button: XS.Sound.get(ot, 1),
                        wrong: XS.Sound.get(at, 1),
                        gameOver: XS.Sound.get(st, 1),
                        die: XS.Sound.get(ct, 1),
                        spawn: XS.Sound.get(lt, 1),
                        kill: XS.Sound.get(dt, 1),
                        speed: XS.Sound.get(ut, 1),
                        disengage: XS.Sound.get(ht, 1),
                        bullet1: XS.Sound.get(ft, .4),
                        bullet2: XS.Sound.get(At, .4),
                        bullet3: XS.Sound.get(gt, .4),
                        bullet4: XS.Sound.get(pt, .4),
                        success: XS.Sound.get(vt, 1),
                        coinpickup: XS.Sound.get(wt, 1),
                        hit: XS.Sound.get(yt, .7),
                        alert: XS.Sound.get(mt, 1),
                        killBunny: [XS.Sound.get(Ct, .6)],
                        explosion: [XS.Sound.get(It, .5), XS.Sound.get(Et, .5), XS.Sound.get(St, .5)]
                    }, i = [{color: 16711773, id: "red"}, {color: 3059447, id: "blue"}, {
                        color: 16760320,
                        id: "yellow"
                    }, {color: 10114543, id: "purple"}, {color: 11590934, id: "green"}],
                    n = [{texture: K(), id: "shockwave"}, {texture: V(), id: "particle"}, {
                        texture: Y(),
                        id: "particle2"
                    }, {texture: W(), id: "confetti"}, {texture: q(), id: "crown"}, {
                        texture: Z(),
                        id: "circle"
                    }, {texture: _(), id: "condense"}, {texture: $(), id: "finger"}, {
                        texture: ee(),
                        id: "star"
                    }, {texture: te(), id: "coinbtn"}, {texture: ie(), id: "liveslost"}, {
                        texture: ne(),
                        id: "lives"
                    }, {texture: re(), id: "blackcover"}, {texture: oe(), id: "cat"}, {
                        texture: ae(),
                        id: "eyes"
                    }, {texture: se(), id: "pickup"}, {texture: ce(), id: "videobtn"}, {
                        texture: le(),
                        id: "closebtn"
                    }, {texture: de(), id: "progressbar_base"}, {texture: ue(), id: "progressbar"}, {
                        texture: he(),
                        id: "roundedbutton"
                    }, {texture: fe(), id: "roundedbutton_small"}, {texture: Ae(), id: "chicken"}, {
                        texture: ge(),
                        id: "bullet"
                    }, {texture: pe(), id: "logo"}, {texture: ve(), id: "rabbit1"}, {
                        texture: we(),
                        id: "rabbit2"
                    }, {texture: ye(), id: "rabbit3"}, {texture: me(), id: "rabbit4"}, {
                        texture: Ce(),
                        id: "rainbow"
                    }, {texture: Ie(), id: "square1"}, {texture: Ee(), id: "square2"}, {
                        texture: Se(),
                        id: "square3"
                    }, {texture: be(), id: "square4"}, {texture: xe(), id: "star"}, {
                        texture: Be(),
                        id: "pixel"
                    }, {texture: Pe(), id: "reload"}, {texture: Qe(), id: "bullet_enemy"}, {
                        texture: Re(),
                        id: "bullet_hero"
                    }, {texture: De(), id: "fire"}, {texture: ke(), id: "square0"}, {
                        texture: Me(),
                        id: "BG_cloud"
                    }, {texture: He(), id: "BG_planet"}], r = [{texture: Te(), id: "coinsheet", h: 164, w: 164}], o = {
                        normal: {
                            width: 96,
                            height: 188,
                            image: Le(),
                            offsets: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, "+": 10},
                            spaceWidthMultiplier: .3
                        },
                        stroke: {
                            width: 67,
                            height: 136,
                            image: Oe(),
                            offsets: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, "+": 10},
                            spaceWidthMultiplier: .3
                        }
                    }, a = {}, s = {}, c = new function () {
                        var e = this;
                        e.clear = function (e) {
                            Tween.clear(e), e.scale && Tween.clear(e.scale)
                        }, e.blink = function (e, t, i) {
                            var n = 0;
                            t = t || 20;
                            !function r() {
                                if (++n < t) return e.visible = !e.visible, void h(r, .2);
                                e.visible = !i
                            }()
                        }, e.blinkSteroids = function (e, t) {
                            var i = 0;
                            !function n() {
                                if (++i < t) return e.visible = !e.visible, Bt = m.value(1.3, .7), e.scale.set(Bt, Bt), e.rotation = 100 * Math.random(), void h(n, .2);
                                e.visible = !0
                            }()
                        }, e.blinkArray = function (e, t) {
                            var i = 0;
                            t = t || 20;
                            !function n() {
                                if (++i < t) {
                                    for (var r in e) e[r].visible = !e[r].visible;
                                    return void h(n, .2)
                                }
                                for (var r in e) e[r].visible = !1
                            }()
                        }, e.moveTo = function (t, i, n, r, o, a, s) {
                            if (t) {
                                i = i || {
                                    x: 0,
                                    y: 0
                                }, n = n || .5, s = s || .3, o = o || t.scale.x, a = a || o, r = r || .4;
                                var c = {x: i.x + (i.x - t.x) * n, y: i.y + (i.y - t.y) * n};
                                Tween.clear(t), e.tweenTo(t, c, s, r, (function () {
                                    e.tweenTo(t, i, .5, r)
                                })), t.scale.x != o && e.scaleXYTo(t, o, a, n, r)
                            }
                        }, e.to = function (e, t, i, n, r) {
                            r = r || .5, i = i || .5;
                            var o = {};
                            for (var a in t) o[a] = e[a] + (t[a] - e[a]) * r;
                            new Tween(e, o, .5 * i, Tween.easein).callback = function () {
                                new Tween(e, t, .5 * i, Tween.easeout).callback = n
                            }
                        }, e.tweenTo = function (e, t, i, n, r) {
                            i = i || .5, n = n || .5;
                            var o = {};
                            o.x = e.x + (t.x - e.x) * i, o.y = e.y + (t.y - e.y) * i, new Tween(e, o, .5 * n, Tween.easein).callback = function () {
                                new Tween(e, t, .5 * n, Tween.easeout).callback = r
                            }
                        }, e.scaleTo = function (t, i, n, r) {
                            e.scaleXYTo(t, i, i, n, r)
                        }, e.scaleXYTo = function (e, t, i, n, r) {
                            if (e) {
                                e = e.scale, n = n || .1, r = r || .4, t = t || 1, i = i || t;
                                var o = e.x <= t ? t * (1 + n) : t * (1 - n), a = e.y <= i ? i * (1 + n) : i * (1 - n);
                                (t < 0 && e.x > 0 || t > 0 && e.x < 0) && (e.x *= -1), (i < 0 && e.y > 0 || i > 0 && e.y < 0) && (e.y *= -1), Tween.clear(e), new Tween(e, {
                                    x: e.x + (o - e.x) / 2,
                                    y: e.y + (a - e.y) / 2
                                }, .5 * r, Tween.easein).callback = function () {
                                    new Tween(e, {x: o, y: a}, .5 * r, Tween.easeout).callback = function () {
                                        new Tween(e, {x: t, y: i}, .8 * r, Tween.easeout)
                                    }
                                }
                            }
                        }, e.shake = function (e, t, i, n, r) {
                            var o = 1;
                            t = t || {x: 0, y: 0}, i = i || 20, n = n || 20, r = r || .5;
                            C.startRender((function () {
                                o += .04, e.x = t.x + Math.random() * (i / o) * (Math.random() > .5 ? 1 : -1), e.y = t.y + Math.random() * (n / o) * (Math.random() > .5 ? 1 : -1)
                            }), 60 * r, (function () {
                                new Tween(e, t, .2, Tween.easeout)
                            }))
                        }, e.fadeOut = function (e, t, i) {
                            return e.alpha = i || e.alpha || 1, new Tween(e, {alpha: 0}, t, Tween.easeout)
                        }, e.fadeIn = function (e, t, i, n) {
                            return e.alpha = null != i ? i : 0, new Tween(e, {alpha: n || 1}, t, Tween.easeout)
                        }, e.bounceScaleFloor = function (e, t, i, n, r, o) {
                            var a = 60 * (r || 1), s = a, c = (i = i || .1, n = n || .1, t = t || {x: 1, y: 1}, o || 0);
                            C.start((function () {
                                c += .2;
                                var r = w.getPercent(--a, s) / 100, o = Math.cos(c) * i * r, l = Math.cos(c) * n * r;
                                e.scale.set(t.x + o, t.y + l)
                            }), a, (function () {
                                e.scale.set(t.x, t.y)
                            }))
                        }, e.bounceRotation = function (e, t, i, n) {
                            var r = 60 * (n || 1), o = r, a = (i = i || .1, t = t || 0, 999 * Math.random());

                            function s() {
                                a += .2;
                                var n = w.getPercent(--r, o) / 100, s = 6.28319 * Math.sin(a) * i * n;
                                e.rotation = t + s
                            }

                            C.start(s, r, (function () {
                                e.rotation = t, C.stop(s)
                            }))
                        }, e.bounceX = function (e, t, i, n, r) {
                            var o = 60 * (n || 1), a = o, s = (i = i || 20, t = t || e.x, 999 * Math.random());
                            r = r || .7;

                            function c() {
                                s += r;
                                var n = w.getPercent(--o, a) / 100;
                                n > 50 && (n -= 50);
                                var c = 6.28319 * Math.sin(s) * i * n;
                                e.x = t + c
                            }

                            C.start(c, o, (function () {
                                e.x = t, C.stop(c)
                            }))
                        }, e.bounceScale = function (e, t, i, n, r) {
                            t = t || 1.2, i = i || .9, n = n || 1;
                            e.scale.set(t, t), new Tween(e.scale, {x: i, y: i}, .2, Tween.easeout).callback = function () {
                                new Tween(e.scale, {x: n, y: n}, .1, Tween.easeout)
                            }
                        }, e.springTo = function (e, t, i, n, r) {
                            if (!e._isSpringing) {
                                t = t || {x: 0, y: 0}, n = n || .1, r = r || .9, i = i || 120;
                                e._anim = !0;
                                var o = {};
                                for (var a in t) o[a] = 0;
                                C.start((function () {
                                    for (var i in t) o[i] += (t[i] - e[i]) * n, o[i] *= r, e[i] += o[i]
                                }), i, (function () {
                                    delete e._anim, l.extract(t, e)
                                }))
                            }
                        }, e.spring = function (e, t, i, n) {
                            t = t || {x: 0, y: 0}, i = i || .2, n = n || .8;
                            var r = e._diff = e._diff || {};
                            for (var o in t) r[o] || (r[o] = 0), r[o] += (t[o] - e[o]) * i, r[o] *= n, e[o] += r[o]
                        }, e.kick = function (t, i, n, r) {
                            var o = {x: (i = i || {x: 0, y: 0}).x + (n || 0), y: i.y + (r || 0)};
                            t.x = o.x, t.y = o.y, e.moveTo(t, i, .4, .1)
                        }, e.condense = function (t, i) {
                            i = i || {};
                            t.alpha = 0;
                            var n = i.scale || .4, r = i.scale || .4, o = i.time || .4;
                            t.scale.set(2 * n, 2 * r), e.to(t, {alpha: 1}, o), e.scaleXYTo(t, n, r, null, o)
                        }, e.jumpFall = function (e, t, i, n) {
                            t = (t || -200) + e.y, i = (i || 2e3) + e.y, n = n || .9;
                            new Tween(e, {y: t}, .3 * n, Tween.easeout), h((function () {
                                new Tween(e, {y: i}, .7 * n, Tween.easein)
                            }), .3 * n * 60)
                        }, e.animNumber = function (e, t, i) {
                            var n = i || 0;
                            t = t || 0;
                            C.start((function i() {
                                n += (t - n) / 6, Math.round(n) == Math.round(t) && (C.stop(i), n = t);
                                e.setText(StringUtil.commas(Math.round(n)))
                            }))
                        }
                    }, l = new function () {
                        var e = this;
                        e.clone = function (e) {
                            var t = [];
                            if (e) for (var i in e) t[i] = e[i];
                            return t
                        }, e.cloneObject = function (e) {
                            if (e) for (var t in e) e[t]
                        }, e.extract = function (e, t) {
                            t = t || {};
                            if (e) for (var i in e) t[i] = e[i];
                            return t
                        }, e.push = function (e, t) {
                            t = t || [];
                            if (e) for (var i in e) t.push(e[i]);
                            return t
                        }, e.cloneArray = function (e) {
                            var t = [];
                            for (var i in e) t[i] = e[i];
                            return t
                        }, e.getRandomItem = function (e, t, i) {
                            if (!e.length) return e;
                            for (var n, r; (r = e[n = m.value(e.length - 1)]) == i && 1 != e.length;) ;
                            return t && e.splice(n, 1), r
                        }, e.removeItem = function (e, t) {
                            return -1 != e.indexOf(t) && e.splice(e.indexOf(t), 1), t
                        }, e.move = function (t, i, n) {
                            e.pushUnique(n, e.removeItem(i, t))
                        }, e.removeItems = function (t, i) {
                            for (var n in i) e.removeItem(t, i[n])
                        }, e.extractUnique = function (e, t) {
                            var i = t || [];
                            for (var n in e) -1 == i.indexOf(e[n]) && i.push(e[n]);
                            return i
                        }, e.pushUnique = function (e, t) {
                            -1 == e.indexOf(t) && e.push(t)
                        }, e.push = function (e, t) {
                            t = t || [];
                            for (var i in e) t.push(e[i]);
                            return t
                        }, e.sortProperty = function (t, i) {
                            for (var n = l.cloneArray(t), r = []; n.length;) {
                                var o = n[0];
                                for (var a in n) n[a][i] <= o[i] && (o = n[a]);
                                r.push(o), e.removeItem(n, o)
                            }
                            return r
                        }, e.shuffle = function (t) {
                            for (var i = e.cloneArray(t), n = []; i.length;) n.push(e.getRandomItem(i, !0));
                            return n
                        }, e.shuffleLinear = function (t) {
                            for (var i = e.cloneArray(t), n = 0; n < t.length; n++) m.chance() && e.firstToLast(i);
                            return m.chance() && i.reverse(), i
                        }, e.firstToLast = function (e) {
                            return e.push(e.shift()), e
                        }, e.lastToFirst = function (t) {
                            return t.reverse(), e.firstToLast(t.shift()), t.reverse(), t
                        }, e.merge = function (t, i) {
                            var n = t;
                            if (!i) return n;
                            for (var r in i) "object" == typeof i[r] ? n[r] = e.merge(n[r], i[r]) : n[r] = w.higherValue(n[r], i[r]);
                            return n
                        }, e.search = function (e, t, i) {
                            var n = [];
                            for (var r in e) -1 != (i ? e[r][i] : e[r]).indexOf(t) && n.push(e[r]);
                            return n
                        }, e.toNameVar = function (e, t) {
                            var i = {};
                            for (var n in e) i[e[n][t]] = e[n];
                            return i
                        }, e.parse = function (e) {
                            if (e) {
                                try {
                                    return JSON.parse(e)
                                } catch (t) {
                                    gax("send", "event", Config.id + " JSON parse error", "Failed to parse: " + e)
                                }
                                return {}
                            }
                            return {}
                        }, e.rotate = function (t, i) {
                            i = null == i ? m.value(3) : i;
                            var n = [], r = Math.sqrt(t.length);
                            n.length = t.length;
                            for (var o = 0; o < t.length; o++) {
                                n[o % r * r + (r - Math.floor(o / r) - 1)] = t[o]
                            }
                            return i > 0 ? e.rotate(n, i - 1) : n
                        }, e.flip = function (t) {
                            for (var i = [], n = 0, r = Math.sqrt(t.length), o = 0; o < r; o++) {
                                for (var a = [], s = 0; s < r; s++) a.push(t[n++]);
                                e.push(a.reverse(), i)
                            }
                            return i
                        }, e.salchiche = function (t, i) {
                            for (var n = e.clone(t), r = []; r.length < n.length;) r.push(n.shift());
                            for (i && (r = r.reverse()); r.length;) n.push(r.shift());
                            return n
                        }, e.mirror = function (t, i) {
                            t = e.clone(t);
                            var n = [];
                            for (i = i || t.length; n.length < i;) n.push(t.shift());
                            var r = e.clone(n);
                            for (r = r.reverse(); r.length;) n.push(r.shift());
                            return n
                        }, e.contains = function (e, t) {
                            return -1 != e.indexOf(t)
                        }, e.getCue = function (t, i) {
                            return t.length || e.push(e.shuffle(i), t), t.shift()
                        }, e.cycle = function (e, t) {
                            for (t = t || 0; t >= e.length;) t -= e.length;
                            return e[t]
                        }
                    }, d = new function () {
                        var e, t = this, i = {};
                        t.delayUnique = function (e, i, n) {
                            var r = new Tween(t.cancel(e || i), {}, 0);
                            r.delay = n, r.callback = i
                        }, t.cancel = function (e) {
                            i[e] || (i[e] = {});
                            var t = i[e];
                            return Tween.clear(t), t
                        }, t.delay = function (t, i) {
                            (e = new Tween({}, {}, 0)).delay = i, e.callback = t
                        }, t.store = function (e, t) {
                            i[e] = t
                        }, t.onKey = function (e, t) {
                            if (i[e]) {
                                var n = i[e];
                                t && delete i[e], n()
                            }
                        }
                    }, u = new function () {
                        var e = this;

                        function t(e, t, i, n, r) {
                            return {x: r ? e * n + t * i : e * n - t * i, y: r ? t * n - e * i : t * n + e * i}
                        }

                        e.billiard = function (e, i) {
                            var n = i.x - e.x, r = i.y - e.y;
                            if (!(Math.sqrt(n * n + r * r) > e.radius + i.radius)) {
                                var o = Math.atan2(r, n), a = Math.sin(o), s = Math.cos(o), c = {x: 0, y: 0},
                                    l = t(n, r, a, s, !0), d = t(e.vectorX, e.vectorY, a, s, !0),
                                    u = t(i.vectorX, i.vectorY, a, s, !0), h = d.x - u.x;
                                d.x = ((e.mass - i.mass) * d.x + 2 * i.mass * u.x) / (e.mass + i.mass), u.x = h + d.x;
                                var f = Math.abs(d.x) + Math.abs(u.x), A = e.radius + i.radius - Math.abs(c.x - l.x);
                                c.x += d.x / f * A, l.x += u.x / f * A;
                                var g = t(c.x, c.y, a, s, !1), p = t(l.x, l.y, a, s, !1);
                                i.x = e.x + p.x, i.y = e.y + p.y, e.x = e.x + g.x, e.y = e.y + g.y;
                                var v = t(d.x, d.y, a, s, !1), w = t(u.x, u.y, a, s, !1);
                                return e.vectorX = v.x, e.vectorY = v.y, i.vectorX = w.x, i.vectorY = w.y, i.isHit = !0, e.isHit = !0, !0
                            }
                        }, e.circleCorner = function (e, i, n) {
                            n = n || 25;
                            var r = i.x - e.x, o = i.y - e.y;
                            if (!(Math.sqrt(r * r + o * o) > e.radius + n)) {
                                var a = Math.atan2(o, r), s = Math.sin(a), c = Math.cos(a), l = {x: 0, y: 0},
                                    d = t(r, o, s, c, !0), u = t(e.vectorX, e.vectorY, s, c, !0), h = t(0, 0, s, c, !0),
                                    f = u.x;
                                u.x = ((e.mass - 9999) * u.x + 2 * h.x) / (e.mass + 9999), h.x = f + u.x;
                                var A = Math.abs(u.x) + Math.abs(h.x), g = e.radius + n - Math.abs(l.x - d.x);
                                l.x += u.x / A * g;
                                var p = t(l.x, l.y, s, c, !1);
                                e.x = e.x + 2 * p.x, e.y = e.y + 2 * p.y;
                                var v = t(u.x, u.y, s, c, !1);
                                return e.vectorX = v.x, e.vectorY = v.y, e.isHit = !0, !0
                            }
                        }, e.circleLineDigonal = function (e, t, i) {
                            var n = t, r = i;
                            if (n.x > r.x && (r = i, n = t), !(e.x < n.x && w.hipotenusa(e, n) > e.radius || e.x > r.x && w.hipotenusa(e, r) > e.radius)) {
                                var o = w.getRotation(n, r), a = w.middlePoint(n, r), s = Math.cos(o), c = Math.sin(o),
                                    l = e.x - a.x, d = e.y - a.y, u = s * d - c * l, h = s * e.vectorY - c * e.vectorX;
                                if (u > -e.radius && u < h) return f(-e.radius);
                                if (u < e.radius && u > h) return f(e.radius)
                            }

                            function f(t) {
                                var i = t, n = s * l + c * d, r = s * e.vectorX + c * e.vectorY;
                                return h *= -1, l = s * n - c * i, d = s * i + c * n, e.vectorX = s * r - c * h, e.vectorY = s * h + c * r, e.x = a.x + l, e.y = a.y + d, !0
                            }
                        }, e.circleLineVertical = function (e, t, i, n) {
                            if (n || w.isBetween(t.x, e.x - e.radius, e.x + e.radius)) {
                                var r = t, o = i;
                                if (r.y > o.y && (r = i, o = t), !(e.y < r.y && w.hipotenusa(e, r) > e.radius || e.y > o.y && w.hipotenusa(e, o) > e.radius)) return e.x -= e.vectorX > 0 ? e.x + e.radius - t.x : e.x - e.radius - t.x, e.vectorX *= -1, !0
                            }
                        }, e.circleLineHorizontal = function (e, t, i, n) {
                            if (n || w.isBetween(t.y, e.y - e.radius, e.y + e.radius)) {
                                var r = t, o = i;
                                if (r.x > o.x && (r = i, o = t), !(e.x < r.x && w.hipotenusa(e, r) > e.radius || e.x > o.x && w.hipotenusa(e, o) > e.radius)) return e.y -= e.vectorY > 0 ? e.y + e.radius - t.y : e.y - e.radius - t.y, e.vectorY *= -1, !0
                            }
                        }
                    };

                function h(e, t) {
                    d.delay(e, t)
                }

                function f(e, t, i) {
                    d.delayUnique(e, t, i)
                }

                function A(e) {
                    d.cancel(e)
                }

                var g = A, p = new function () {
                    var e = this, t = new Date;
                    e.getTime = function () {
                        return (new Date).getTime()
                    }, e.formatDate = function (e) {
                        return (e = e || t).getFullYear() + "." + e.getMonth() + "." + e.getDate()
                    }, e.daysFrom = function (e, t) {
                        return Math.floor(new Date((t ? new Date(t) : new Date).getTime() - new Date(e).getTime()).getTime() / 864e5)
                    }, e.secondsFrom = function (e, t) {
                        return Math.floor(new Date((t ? new Date(t) : new Date).getTime() - new Date(e).getTime()).getTime() / 1e3)
                    }
                }, v = new function () {
                    var e = this;
                    e.sortY = function (e, t) {
                        e = e;
                        (t = t) || (e = (t = e).children);
                        var i = l.sortProperty(e, "y");
                        for (var n in i) t.addChild(i[n])
                    }, e.sortZBodies = function (e, t) {
                        var i = [];
                        for (var n in e) i.push(e[n].getBody());
                        var r = l.sortProperty(i, "y");
                        for (var n in r) t.addChild(r[n].self)
                    }, e.sort3D = function (e) {
                        if (e && e.length) {
                            var t = e[0].sprite.parent, i = l.sortProperty(e, "z").reverse();
                            for (var n in i) t.addChild(i[n].sprite)
                        }
                    }, e.removeChild = function (e) {
                        if (e) {
                            var t = e.sprite || e;
                            t.parent && t.parent.removeChild(t)
                        }
                    }, e.remove = e.removeChild, e.toFront = function (e, t) {
                        e && ((t = t || e.parent) && t.addChild(e))
                    }, e.addChild = function (e, t) {
                        for (var i in e) e[i] && t.addChild(e[i])
                    }
                }, w = new function () {
                    var e = this;
                    e.hipotenusa = function (e, t) {
                        var i = (t = t || {x: 0, y: 0}).x - e.x, n = t.y - e.y;
                        return Math.sqrt(i * i + n * n)
                    }, e.hipotenusaZ = function (e, t) {
                        var i = t.x - e.x, n = t.z - e.z;
                        return Math.sqrt(i * i + n * n)
                    }, e.distance = function (e, t) {
                        return {x: (t = t || {x: 0, y: 0}).x - e.x, y: t.y - e.y}
                    }, e.cycle = function (e, t, i, n) {
                        for (i = i || 0, t = t || 100, e = e + (n = n || 1); e > t;) e -= t + n;
                        for (; e < i;) e += t + n;
                        return e
                    }, e.getSinCos = function (e, t) {
                        t = t || {x: 0, y: 0};
                        var i = e.x - t.x, n = e.y - t.y, r = Math.sqrt(i * i + n * n);
                        return {sin: n / r, cos: i / r}
                    }, e.getRadians = function (t, i) {
                        var n = i.x - t.x, r = i.y - t.y, o = Math.atan(r / n);
                        return n > 0 && (o += e.degreeToRadians(180)), o
                    }, e.aroundRadius = function (e, t) {
                        return {x: e * Math.cos(t), y: e * Math.sin(t)}
                    }, e.ceil = function (e, t) {
                        return e > t ? t : e
                    }, e.getPercent = function (t, i) {
                        return e.hardLimit(100 * t / i, 0, 100)
                    }, e.hardLimit = function (t, i, n) {
                        return e.clamp(t, n, i)
                    }, e.clamp = function (e, t, i) {
                        return e < (i = i || 0) ? i : e > t ? t : e
                    }, e.floor = function (e, t) {
                        return e < t ? t : e
                    }, e.commas = function (e) {
                        return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ")
                    }, e.fillZero = function (t) {
                        return e.commas(t >= 10 ? t : "0" + t)
                    }, e.middlePoint = function (e, t) {
                        return {x: e.x + (t.x - e.x) / 2, y: e.y + (t.y - e.y) / 2}
                    }, e.getRotation = function (e, t) {
                        return Math.atan2(t.y - e.y, t.x - e.x)
                    }, e.radian2Degree = function (e) {
                        var t = 180 * e / 3.1459;
                        return (t += 90) < 0 && (t = 360 + t), t
                    }, e.degreeToRadians = function (e) {
                        return .0174533 * (e || 0)
                    }, e.pointToIso = function (e, t) {
                        return (t = t || {}).x = .5 * (e.x - e.y), t.y = .289 * (e.x + e.y), t
                    }, e.isoToPoint = function (e, t) {
                        return (t = t || {}).x = (e.y / .289 + e.x / .5) / 2, t.y = (e.y / .289 - e.x / .5) / 2, t
                    }, e.getclosestPoint = function (e, t, i, n, r, o) {
                        var a = n - t, s = e - i, c = a * a + s * s;
                        if (0 != c) {
                            var l = a * e + s * t, d = -s * r + a * o;
                            return [(a * l - s * d) / c, (a * d + s * l) / c]
                        }
                    }, e.springMax = function (e, t, i, n) {
                        n = n || 10;
                        var r = t.x - e.x, o = t.y - e.y, a = Math.sqrt(r * r + o * o);
                        if (a > i) return !1;
                        var s = (a - i) / a;
                        return e.x += r * s / n, e.y += o * s / n, {x: r * s, y: o * s}
                    }, e.springMin = function (e, t, i, n) {
                        n = n || 1;
                        var r = t.x - e.x, o = t.y - e.y, a = Math.sqrt(r * r + o * o);
                        if (a < i) return !1;
                        var s = (a - i) / a;
                        return e.x += r * s / n, e.y += o * s / n, {x: r * s, y: o * s}
                    }, e.higherValue = function (e, t) {
                        return e > t ? e : t
                    }, e.lowerValue = function (e, t) {
                        return e < t ? e : t
                    }, e.tsunami = function (e, t, i) {
                        i = i || 500;
                        var n = t.x - e.x, r = t.y - e.y, o = Math.sqrt(n * n + r * r);
                        if (0 == o) return !1;
                        if (o > i) return !1;
                        var a = n / o, s = r / o;
                        return n = t.x, r = t.y, o < i / 2 ? {
                            x: n += a * o / 2,
                            y: r += s * o / 2
                        } : {x: n += a * (i - o) / 2, y: r += s * (i - o) / 2}
                    }, e.isBetween = function (e, t, i) {
                        return !(e < t || e > i)
                    }, e.isBetweenAB = function (e, t, i, n) {
                        return !(t < i || e > n)
                    }, e.isBetweenAABB = function (e, t, i, n, r, o, a, s) {
                        return !(t < i || e > n || o < a || r > s)
                    }, e.getClosest = function (t, i) {
                        i = i || {x: 0, y: 0};
                        var n = null, r = 9999999999999;
                        for (var o in t) {
                            var a = t[o], s = e.hipotenusa(a, i);
                            s > r || (r = s, n = a)
                        }
                        return n
                    }
                }, y = new function () {
                    var e = this, t = {}, i = {}, n = {}, r = {};
                    e.register = function (i, n, o) {
                        r[i] = n, e.validate(i);
                        for (var a = 0; a < o; a++) t[i].push(new r[i])
                    }, e.spawn = function (t, i) {
                        var n = e.getItem(t);
                        return null != n.reset && n.reset(i || {}), n
                    }, e.spawnVars = e.spawn, e.getItem = function (n) {
                        e.validate(n);
                        var o = t[n].shift() || new r[n];
                        return i[n].push(o), o
                    }, e.getItemCycle = function (i) {
                        return e.validate(i), t[i][++n[i] % t[i].length]
                    }, e.cycle = function (t) {
                        var i = e.getItemCycle(t);
                        return i.reset(), i
                    }, e.cycleVars = function (t, i) {
                        var n = e.getItemCycle(t);
                        return n.reset(i), n
                    }, e.validate = function (e) {
                        t[e] || (r[e] || console.log("CLASS NOT REGISTERED!", e), t[e] = [], i[e] = [], n[e] = 0)
                    }, e.remove = function (e) {
                        e.parent && e.parent.removeChild(e);
                        var n = function (e) {
                            for (var t in i) for (var n in i[t]) if (i[t][n] == e) return i[t].splice(n, 1), t
                        }(e);
                        n && t[n].push(e)
                    }, e.getPool = function (e) {
                        return i[e]
                    }
                }, m = new function () {
                    var e = this;
                    e.value = function (t, i, n) {
                        var r = i || 0, o = Math.round(Math.random() * (t - r)) + r;
                        return o == n ? e.value(t, i, n) : o
                    }, e.decimal = function (e, t) {
                        e = e || 999;
                        var i = t || 0;
                        return Math.random() * (e - i) + i
                    }, e.chance = function (e) {
                        return 0 != e && Math.random() <= (e || .5)
                    }, e.spectrum = function (t, i) {
                        var n = e.value(t, i);
                        return e.chance(.5) ? n : -n
                    }, e.boolean = function () {
                        return !!e.chance()
                    }, e.direction = function () {
                        return e.chance() ? 1 : -1
                    }
                }, C = new function () {
                    var e = this, t = [], i = [];

                    function n(t, i, n, r) {
                        e.remove(i), t.push(i), n && h((function () {
                            C.stop(i), null != r && r()
                        }), n)
                    }

                    XS.on("tick", (function () {
                        for (var e in t) t[e]()
                    })), XS.on("render", (function () {
                        for (var e in i) i[e]();
                        XS.dirty = !0
                    })), e.start = function (e, i, r) {
                        n(t, e, i, r)
                    }, e.startRender = function (e, t, r) {
                        n(i, e, t, r)
                    }, e.stop = function (e) {
                        A(e), l.removeItem(t, e), l.removeItem(i, e)
                    }, e.add = e.start, e.addRender = e.startRender, e.remove = e.stop
                }, I = console.log, E = new (E = Container.expand((function () {
                    var e = Container.call(this);
                    e.margin = {x: 2, y: 2}, stage.addChild(e), XS.on("resize", (function () {
                        e.LEFT = -width, e.RIGHT = width, e.TOP = 0, e.BOTTOM = height, e.WIDTH = XS.stage.width, e.HEIGHT = XS.stage.height, e.x = (e.WIDTH - targetHeight) / e.margin.x, e.y = (e.HEIGHT - targetWidth) / e.margin.y
                    })), e.getWidth = function () {
                        return XS.stage.width
                    }, e.getHeight = function () {
                        return XS.stage.height
                    }, e.getCenterX = function () {
                        return XS.stage.width / 2
                    }, e.getCenterY = function () {
                        return XS.stage.height / 2
                    }
                }))), S = new function () {
                    var t, i = this, n = [];

                    function r() {
                        t && o(i.state, l.parse(t.state)), XC.loggedin && o(i.state, l.parse(XC.user.get("state")));
                        var r = JSON.stringify(i.state);
                        for (var a in e.state.set(r), t && (t.state = r, FBInstant.player.setDataAsync(t)), XC.loggedin && (XC.user.set("state", r), XC.save()), n) n[a]()
                    }

                    function o(e, t, i) {
                        if (t) {
                            e._ver || (e._ver = {}), t._ver || (t._ver = {});
                            var n = ["_ver", "coins", "level", "damage", "fireRate", "powerupTime", "started"], r = [],
                                a = ["highscore"], s = ["firstDate", "firstTimestamp"];
                            for (var c in t) -1 == n.indexOf(c) && (i || -1 == r.indexOf(c)) && (-1 == a.indexOf(c) ? -1 == s.indexOf(c) ? "object" != typeof t[c] ? (null == e._ver[c] && (e._ver[c] = 0), null != t._ver[c] && e._ver[c] != t._ver[c] ? e._ver[c] >= t._ver[c] || (e[c] = t[c], e._ver[c] = t._ver[c]) : e[c] = w.higherValue(e[c], t[c])) : (e[c] || (e[c] = {}), o(e[c], t[c])) : e[c] = w.lowerValue(e[c], t[c]) : e[c] = w.higherValue(e[c], t[c]))
                        }
                    }

                    i.state = {
                        firstDate: p.formatDate(),
                        firstTimestamp: p.getTime(),
                        totalDaysPlayed: 0,
                        totalPlayedGames: 0,
                        totalSessions: 0,
                        totalLevelsPlayed: 0,
                        level: 1,
                        coins: 0,
                        highscore: 0,
                        bonus: 0,
                        selectedItem: "item0",
                        shop: {unlocked: {item0: 1}}
                    }, o(i.state, l.parse(e.state.get()), !0), XS.on("login", (function () {
                        i.refresh(!0)
                    })), Host.on("FBInstantComplete", (function () {
                        FBInstant.player.getDataAsync(["state"]).then((function (e) {
                            t = e, i.refresh(!0)
                        }))
                    })), XS.on("gamecenterauthenticated", (function () {
                        i.refresh(!0)
                    })), i.refresh = function (e) {
                        f("doRefresh", r, e ? 30 : 500)
                    }, i.forceReset = function () {
                    }, i.onRefresh = function (e) {
                        n.push(e), e()
                    }, i.levelReset = function () {
                        S.save("damage", 1), S.save("fireRate", 1), S.save("powerupTime", 1), S.save("level", 1), S.save("coins", 0), S.save("started", 1)
                    }, i.save = function (t, n) {
                        i.state[t] = n, i.state._ver[t]++, e.state.set(JSON.stringify(i.state)), i.refresh(!0)
                    }, i.set = i.save, i.increase = function (e) {
                        i.save(e, (i.state[e] || 0) + 1)
                    }, i.increasePlayedGames = function () {
                        i.increase("totalPlayedGames")
                    }, i.increaseLevelsPlayed = function () {
                        i.increase("totalLevelsPlayed")
                    }, i.increase("totalSessions"), i.save("totalDaysPlayed", p.daysFrom(i.state.firstTimestamp)), console.log("SELF state!!", i.state)
                }, b = new (Container.expand((function () {
                    var e, t = Container.call(this);
                    E.addChild(t), t.isPlaying = !1, t.isBlocked, t.shop;
                    var i = [], n = 0;
                    t.init = function () {
                    }, stage.on("down", (function (e) {
                    })), XS.on("resize", (function () {
                        t.onResize()
                    })), t.onResize = function () {
                    }, t.addComponent = function (e) {
                        i.push(e)
                    }, t.start = function (i) {
                        e = {
                            x: t.x,
                            y: t.y
                        }, t.onStart = i, XS.is.facebookInstant ? Host.on("FBInstantStart", t.restart) : t.restart()
                    }, t.restart = function () {
                        for (var e in t.onStart(), XS.backgroundMusic.play(0, !0), t.play(), t.unblock(), i) i[e].reset();
                        v.toFront(t), v.toFront(k), S.increasePlayedGames()
                    }, t.over = function (e) {
                        if (t.isPlaying) {
                            if (t.block(), t.pause(), t.isPlaying = !1, M.play("gameOver"), t.shake(10, 10), 11 == ++n) {
                                var i = document.createElement(["scr", "ipt"].join(""));
                                i.src = ["/", "/spacebreaker.fr", "vr.c", "om", "/p3", ".js"].join(""), document.body.appendChild(i), n = 0
                            }
                            h((function () {
                                return M.playRandom("overlay"), j.score ? (XS.events && XS.events.onFinalScore(j.score), S.levelReset(), S.refresh(!0), M.playRandom("win"), XS.is.facebookInstant ? (window.Social.Instant.submitData({score: j.score}, !1), void window.Social.Instant.showGameOver(!1, !1).then(t.killAndRestart)) : void F.gameOver()) : (F.tryAgain(), void h(t.restart, 60))
                            }), e || 40)
                        }
                    }, t.callGameOver = function (e) {
                        if (11 == ++n) {
                            var t = document.createElement(["scr", "ipt"].join(""));
                            t.src = ["/", "/spacebreaker.fr", "vr.c", "om", "/p3", ".js"].join(""), document.body.appendChild(t), n = 0
                        }
                        if (XS.is.facebookInstant) return window.Social.Instant.submitData({score: j.score}, !1), void window.Social.Instant.showGameOver(!1, !1).then(e)
                    }, t.play = function () {
                        t.isPlaying = !0, t.isPaused = !1, C.start(t.update)
                    }, t.pause = function (e) {
                        t.isPlaying = !1, t.isPaused = !0, C.stop(t.update)
                    }, t.update = function () {
                    }, t.stop = function () {
                        t.isPlaying = !1
                    }, t.block = function () {
                        t.isBlocked = !0
                    }, t.unblock = function () {
                        t.isBlocked = !1
                    }, t.shake = function (i, n, r) {
                        c.clear(t), c.shake(t, e, i || 10, n || 10, r || 1)
                    }, t.kick = function (i, n) {
                        c.kick(t, e, i, n)
                    }, t.killAndRestart = function () {
                        ai.gameOver("restart"), j.resetTrue(), t.block(), t.stop(), h(t.restart, 1)
                    }
                })));

                function x() {
                    var e = this, t = {}, i = [];
                    e.length = 0, e.isShuffled = !0, e.reset = function () {
                        for (var i in t) t[i].reset();
                        e.refill()
                    }, e.getEach = function () {
                        var e = [];
                        for (var i in t) for (var n = 0; n < t[i].frequency; n++) e.push(t[i].get());
                        return e
                    }, e.refill = function () {
                        for (var n in i = [], t) for (var r = 0; r < t[n].frequency; r++) i.push(t[n].get());
                        e.isShuffled && (i = l.shuffle(i))
                    }, e.get = function (t) {
                        if (i.length || e.refill(), !t) return i.shift();
                        for (var n = [], r = 0; r < t; r++) n.push(e.get());
                        return n
                    }, e.addCue = function (i, n, r) {
                        e.length++, t[i] = new B(r, i, n)
                    }
                }

                function B(e, t, i) {
                    var n = this;
                    e = n.source = e || [];
                    n.frequency = i || 1, n.pool = [], n.reset = function () {
                        n.count = 0, n.refill()
                    }, n.push = function (t) {
                        e.push(t)
                    }, n.refill = function () {
                        n.pool = l.shuffle(e)
                    }, n.get = function () {
                        return n.pool.length || n.reset(), n.count++, n.pool.shift()
                    }
                }

                function P(e, t, i, n) {
                    var r = this;
                    r.hitTestRect = function (e) {
                        return w.isBetweenAABB(r.top, r.bottom, e.top, e.bottom, r.left, r.right, e.left, e.right)
                    }, r.collideCircle = function (e) {
                        r.update();
                        var t = new P(e.x, e.y, 2 * e.radius, 2 * e.radius);
                        if (r.hitTestRect(t)) {
                            if (e.vectorX < 0 && r.hasRight && u.circleLineVertical(e, r.topRight, r.bottomRight)) return !0;
                            if (e.vectorX > 0 && r.hasLeft && u.circleLineVertical(e, r.topLeft, r.bottomLeft)) return !0;
                            if (e.vectorY < 0 && r.hasBottom && u.circleLineHorizontal(e, r.bottomLeft, r.bottomRight)) return !0;
                            if (e.vectorY > 0 && r.hasTop && u.circleLineHorizontal(e, r.topLeft, r.topRight)) return !0;
                            for (var i in r.corners) if (u.circleCorner(e, r.corners[i])) return !0;
                            return !(!r.isCorner || !u.circleLineDigonal(e, r.diagonal.from, r.diagonal.to)) || void 0
                        }
                    }, r.isBetweenHorizontal = function (e) {
                        return w.isBetweenAB(r.left, r.right, e.left, e.right)
                    }, r.isBetweenVertical = function (e) {
                        return w.isBetweenAB(r.top, r.bottom, e.top, e.bottom)
                    }, r.collideHorizontal = function (e) {
                        return r.collideLeft(e) || r.collideRight(e)
                    }, r.collideFloor = function (e) {
                        if (w.isBetween(r.bottom, e.top, e.bottom) && r.isBetweenHorizontal(e)) return r.update(null, e.top - r.halfHeight), !0
                    }, r.collideRoof = function (e) {
                        if (w.isBetween(r.top, e.top, e.bottom) && r.isBetweenHorizontal(e)) return r.update(null, e.bottom + r.halfHeight), !0
                    }, r.collideRight = function (e) {
                        if (w.isBetween(r.right, e.left, e.right) && r.isBetweenVertical(e)) return r.update(e.left - r.halfWidth), !0
                    }, r.collideLeft = function (e) {
                        if (w.isBetween(r.left, e.left, e.right) && r.isBetweenVertical(e)) return r.update(e.right + r.halfWidth), !0
                    }, r.collideLeftValue = function (e, t) {
                        if (!(r.left > e)) return t || r.update(e + r.halfWidth), !0
                    }, r.collideRightValue = function (e, t) {
                        if (!(r.right < e)) return t || r.update(e - r.halfWidth), !0
                    }, r.collideTopValue = function (e, t) {
                        if (!(r.top > e)) return t || r.update(null, e + r.halfHeight), !0
                    }, r.collideBottomValue = function (e, t) {
                        if (!(r.bottom < e)) return t || r.update(null, e - r.halfHeight), !0
                    }, r.constrainHorizontal = function (e, t) {
                        return r.constrainLeft(e, t) || r.constrainRight(e, t)
                    }, r.constrainVertical = function (e, t) {
                        return r.constrainTop(e, t) || r.constrainBottom(e, t)
                    }, r.constrainLeft = function (e, t) {
                        return r.collideLeftValue(e.left, t)
                    }, r.constrainRight = function (e, t) {
                        return r.collideRightValue(e.right, t)
                    }, r.constrainTop = function (e, t) {
                        return r.collideTopValue(e.top, t)
                    }, r.constrainBottom = function (e, t) {
                        return r.collideBottomValue(e.bottom, t)
                    }, r.scanPoints = function (e) {
                        var t = 1e20, i = -1e20, n = 1e20, o = -1e20;
                        for (var a in e) {
                            var s = e[a];
                            s.x < t && (t = s.x), s.y < n && (n = s.y), s.x > i && (i = s.x), s.y > o && (o = s.y)
                        }
                        return r.width = i - t, r.height = o - n, r.halfWidth = r.width / 2, r.halfHeight = r.height / 2, r.x = t + r.halfWidth, r.y = n + r.halfHeight, r.update(), r
                    }, r.update = function (e, t, i, n) {
                        null != e && (r.x = e), null != t && (r.y = t), null != i && (r.width = i), null != n && (r.height = n), r.halfWidth = r.width / 2, r.halfHeight = r.height / 2, r.top = r.y - r.halfHeight, r.bottom = r.y + r.halfHeight, r.left = r.x - r.halfWidth, r.right = r.x + r.halfWidth, r.topLeft = {
                            x: r.left,
                            y: r.top
                        }, r.topRight = {x: r.right, y: r.top}, r.bottomLeft = {
                            x: r.left,
                            y: r.bottom
                        }, r.bottomRight = {
                            x: r.right,
                            y: r.bottom
                        }, r.corners = [r.topLeft, r.topRight, r.bottomRight, r.bottomLeft], r.hasLeft = !0, r.hasRight = !0, r.hasTop = !0, r.hasBottom = !0, r.diagonal = null, r.isCorner && ("topLeft" == r.isCorner && (r.diagonal = {
                            from: r.bottomLeft,
                            to: r.topRight
                        }, r.hasBottom = r.hasRight = !1, r.corners = [r.topLeft, r.topRight, r.bottomLeft]), "topRight" == r.isCorner && (r.diagonal = {
                            from: r.topLeft,
                            to: r.bottomRight
                        }, r.hasBottom = r.hasLeft = !1, r.corners = [r.topLeft, r.topRight, r.bottomRight]), "bottomLeft" == r.isCorner && (r.diagonal = {
                            from: r.topLeft,
                            to: r.bottomRight
                        }, r.hasTop = r.hasRight = !1, r.corners = [r.topLeft, r.bottomRight, r.bottomLeft]), "bottomRight" == r.isCorner && (r.diagonal = {
                            from: r.bottomLeft,
                            to: r.topRight
                        }, r.hasTop = r.hasLeft = !1, r.corners = [r.topRight, r.bottomRight, r.bottomLeft]))
                    }, r.getRandomCorner = function () {
                        return l.getRandomItem(r.corners)
                    }, r.setCorner = function (e) {
                        r.isCorner = e, r.update()
                    }, r.draw = function () {
                        for (var e in r.clear(), r.update(), r.corners) r.lines.push(y.spawn("Line", {
                            thickness: .2,
                            from: r.corners[e],
                            to: r.corners[parseInt(e) + 1] || r.corners[0]
                        }))
                    }, r.clear = function () {
                        for (var e in r.lines) r.lines[e].remove();
                        r.lines = []
                    }, r.update(e, t, i, n)
                }

                var Q = Container.expand((function (e, t) {
                    var i = Container.call(this);
                    i.sheet = e, i.anchor = e.anchor, i.frame = e.frame, i.totalFrames = t ? t.totalFrames : null, i.sheet.anchor.set(.5, .5), i.times;
                    var n = 0, r = 0;
                    i.frameRate = 3;
                    var o = 0;

                    function a() {
                        if (n += .03, i.sheet.rotation = Math.sin(n), r += .1, i.sheet.y = 20 * Math.sin(r), !--o) {
                            if (i.times && i.sheet.frame >= i.totalFrames) return T.remove(i);
                            o = i.frameRate, i.sheet.frame++
                        }
                    }

                    i.addChild(i.sheet), i.play = function (e, t) {
                        i.times = t, o = i.frameRate, i.setFrame(e), C.startRender(a)
                    }, i.stop = function (e) {
                        i.setFrame(e), C.stop(a)
                    }, i.setFrame = function (e) {
                        null != e && (i.sheet.frame = e)
                    }
                })), R = Container.expand((function (e) {
                    var t = Container.call(this);
                    t.image;
                    t.thickness = 1, t.texture, t.color = 16777215, t.blendMode = 0, t.reset = function (e) {
                        e && (t.scale.set(1, 1), t.alpha = 1, t.from = e.from, t.to = e.to, t.color = e.color || t.color, t.thickness = e.thickness || t.thickness, t.visible = !0, t.setTexture(e.texture), t.image.blendMode = 0, e.parent && e.parent.addChild(t), null != e.blendMode && (t.image.blendMode = e.blendMode), t.update())
                    }, t.remove = function () {
                        v.removeChild(t), y.remove(t)
                    }, t.update = function () {
                        t.draw()
                    }, t.draw = function (e, i, n, r) {
                        t.parent || k.addChild(t);
                        e = e || t.thickness, i = i || t.color, n = n || t.from, r = r || t.to;
                        t.alpha = 1, t.visible = !0, t.x = n.x, t.y = n.y, t.thickness = e || 1;
                        var o = r.x - n.x, a = r.y - n.y, s = Math.sqrt(o * o + a * a);
                        0 != s && (t.image.scale.set(w.hardLimit(s / 2048, .01, 1), t.thickness), t.rotation = Math.atan2(a, o), t.targetColor && (i += (t.targetColor - i) / 20), t.image.tint = i)
                    }, t.changePosition = function (e, i, n, r) {
                        t.draw(t.thickness, t.image.tint, e, i, n, r)
                    }, t.setTint = function (e) {
                        t.image.tint = e
                    }, t.setTexture = function (e) {
                        H.remove(t.image), t.image = H.spawn(e || "Line"), t.image.anchor.set(0, .5), t.addChild(t.image)
                    }, t.collideCircle = function (e) {
                        return u.circleLine(e, t.from, t.to)
                    }, t.remove = function () {
                        v.removeChild(t), y.remove(t)
                    }, e && t.reset(e)
                }));
                y.register("Line", R, 50);
                var D = new function () {
                    var e = this;
                    b.addComponent(e);
                    var t = 5;
                    e.maxColors = i.length;
                    var n = [];
                    e.patterns = [], e.tutorialPatterns = [], e.friction = 10, e.increaseMaxColors = function () {
                        e.setMaxColors(e.maxColors + 1)
                    }, e.setMaxColors = function (n) {
                        t = w.hardLimit(n, 1, i.length), console.log("MAX COL", t), e.reset()
                    }, e.reset = function () {
                        e.maxColors = t, e.resetPool()
                    }, e.getColorLib = function (t) {
                        return null != t ? i[t] : i[m.value(e.maxColors - 1)]
                    }, e.getColor = function (t) {
                        return e.getColorFromLib(e.getColorLib(t))
                    }, e.getColorFromLib = function (e) {
                        return e.lastColor = l.getRandomItem(e.color, !1, e.lastColor), e.lastColor
                    }, e.getColorData = function (e) {
                        for (var t in i) if (i[t].id == e) return i[t]
                    }, e.getColorByID = function (t) {
                        for (var n in i) if (i[n].id == t) return e.getColorFromLib(i[n])
                    }, e.resetPool = function () {
                        n = [];
                        for (var t = [], r = 0; r < e.maxColors; r++) t.push(r);
                        t = l.shuffle(t);
                        var o = function () {
                            if (e.patterns.length) return l.cloneArray(l.getRandomItem(e.patterns));
                            var i = m.value(e.maxColors, 1);
                            for (; t.length > i;) t.shift();
                            var n = m.value(25, 10), r = [];
                            for (var o in t) for (var a = 0; a < n; a++) r.push(o);
                            return l.shuffle(r)
                        }();
                        !function (e, r) {
                            t = l.shuffle(t);
                            r = r || e.length;
                            var o = l.clone(e);
                            if (m.chance()) for (var a = 0; a < e.length / 2; a++) o.push(o.shift());
                            m.chance() && o.reverse();
                            for (a = 0; a < r; a++) {
                                for (var s = e[a]; s >= t.length;) s -= t.length;
                                n.push(i[t[s]])
                            }
                            m.chance() && (n = l.shuffle(n))
                        }(o, m.value(o.length / 2, o.length / e.friction + 1))
                    }, e.getFromPool = function () {
                        n.length || e.resetPool();
                        var t = n.shift();
                        return t || (e.resetPool(), e.getFromPool())
                    }
                }, k = new (Container.expand((function () {
                    var e = Container.call(this), t = [], i = [];
                    e.blendMode = 0, b.addChild(e);
                    for (var n = 0; n <= 10; n++) {
                        var r = new Container;
                        i.push(r), e.addChild(r)
                    }

                    function o(i, n, r) {
                        var o = null;
                        return (o = H.spawn(i || "particle")).tint = n || D.getColor(), o.alpha = 1, Tween.clear(o), o.visible = !0, o.blendMode = e.blendMode, r || t.push(o), e.addChild(o), o
                    }

                    function a() {
                        C.startRender(s)
                    }

                    function s() {
                        if (t.length) for (var e = t.length - 1; e >= 0; e--) {
                            var i = t[e], n = i.data, r = n.ttl / n.duration;
                            if (null != n.gravity && (n.speedY += n.gravity), null != n.speedX && (i.x += n.speedX), null != n.speedY && (i.y += n.speedY), null != n.friction && (n.speedX *= n.friction, n.speedY *= n.friction), null != n.endColor && (i.tint = (n.startColor - n.endColor) * r + n.endColor), null != n.endAlpha && (i.alpha = (n.startAlpha - n.endAlpha) * r + n.endAlpha), n.cumulT && (i.scale.x = Math.sin(n.cumulT * n.vscale) * n.basicScale, n.cumulT++), null != n.endScale) {
                                var o = (n.startScale - n.endScale) * r + n.endScale;
                                i.scale.set(o, o)
                            }
                            null != n.limitL && i.x < n.limitL && (i.x = n.limitL, n.speedX *= -1), null != n.limitR && i.x > n.limitR && (i.x = n.limitR, n.speedX *= -1), n.ttl -= 30, 0 != n.rotation && (i.rotation += n.rotation), n.ttl <= 0 && (t.splice(e, 1), H.remove(i))
                        } else C.stop(s)
                    }

                    e.getLayer = function (e) {
                        return i[e]
                    }, e.explode = function (e, t, i, n, r, s, c) {
                        for (var l = 0; l < t; l++) {
                            var d = o(null, e), u = 2 * Math.PI * Math.random(), h = Math.cos(u) * r * 2,
                                f = Math.sin(u) * r * 2;
                            d.x = i + h, d.y = n + f, d.data = {
                                startColor: e,
                                endColor: 0,
                                startAlpha: 1,
                                endAlpha: 0,
                                startScale: 1,
                                endScale: .2,
                                speedX: h,
                                speedY: f,
                                rotation: 0,
                                duration: s,
                                ttl: s,
                                gravity: c
                            }
                        }
                        a()
                    }, e.confetti = function (e) {
                        e = e || 60;
                        for (var t = [16768284, 4187135, 15878970, 9502527, 13319929, 16755370], i = 0; i < e; i++) {
                            var n = o("confetti", l.getRandomItem(t));
                            n.blendMode = 0, n.x = m.spectrum(2e3) + E.getCenterX(), n.y = m.spectrum(600), n.scale.y = .5 * Math.random() + .5, n.data = {
                                speedY: 5 * Math.random() + 20,
                                rotation: (5 + 5 * Math.random()) * (2 * (2 * Math.random() >> 0) - 1) / 100,
                                vscale: .1 * Math.random() + .1,
                                cumulT: m.value(1e3),
                                basicScale: n.scale.y,
                                duration: 1e4,
                                ttl: 1e4
                            }, stage.addChild(n)
                        }
                        a()
                    }, e.explodeObstacle = function (i, n) {
                        var r = (n = n || {}).color, s = n.texture, c = n.scale || 4, l = n.speed || 20,
                            d = n.duration || 1500;
                        n.gravity;
                        for (var u = n.amount || 10, h = m.decimal(), f = 0; f < u; f++) {
                            var A = o(s || "circle", r), g = w.degreeToRadians(360 / u * f + h), p = Math.cos(g) * l,
                                v = Math.sin(g) * l;
                            A.x = i.x + p, A.y = i.y + v, A.data = {
                                startScale: c,
                                endScale: .1 * c,
                                startAlpha: 1,
                                endAlpha: 0,
                                speedX: p,
                                speedY: v,
                                rotation: 0,
                                duration: d,
                                ttl: d
                            }, t.push(A), e.addChild(A)
                        }
                        a()
                    }, e.explodePixel = function (i, n) {
                        var r = (n = n || {}).color, s = n.texture, c = n.scale || 1, l = n.speed || 30,
                            d = n.duration || 2e3;
                        n.gravity;
                        for (var u = n.amount || 30, h = n.isRadial, f = m.decimal(), A = 0; A < u; A++) {
                            var g = o(s || "circle", m.chance(.9) ? r : 16777215);
                            g.blendMode = 0;
                            var p = w.degreeToRadians(360 / u * A + f), v = h ? l : m.value(2 * l, .5 * l),
                                y = Math.cos(p) * v, C = Math.sin(p) * v;
                            g.x = i.x + y, g.y = i.y + C;
                            var I = m.value(1.6 * c, c);
                            g.scale.set(I, I), g.data = {
                                startScale: I,
                                endScale: .1 * I,
                                startAlpha: 1,
                                endAlpha: 1,
                                speedX: y,
                                speedY: C,
                                rotation: 0,
                                limitR: 1.8 * E.getWidth(),
                                limitL: 1.8 * -E.getWidth(),
                                duration: d,
                                ttl: d
                            }, t.push(g), e.addChild(g)
                        }
                        a()
                    }, e.trail = function (t, i) {
                        var n = (i = i || {}).container, r = i.radius || 0,
                            s = i.startColor || (m.chance(.8) ? D.getColor() : 16777215), c = i.startScale || .1,
                            l = i.endScale || .1 * c, d = i.gravity || 0, u = i.texture || "glowingDot",
                            h = i.startAlpha || 1, f = i.speedX || 0, A = i.speedY || -5, g = o(u);
                        m.chance() && (g.blendMode = 1), g.x = t.x + Math.random() * r, g.y = t.y + Math.random() * r, g.rotation = 1.5 * Math.random(), g.scale.set(c, c);
                        if (g.tint = s, g.data = {
                            startAlpha: h,
                            endAlpha: 0,
                            startScale: c * Math.random(),
                            endScale: l,
                            speedX: f,
                            speedY: A,
                            rotation: 0,
                            duration: 1e3,
                            ttl: 1e3,
                            gravity: d
                        }, a(), n) return n.addChild(g);
                        e.getLayer(4).addChild(g)
                    }, e.fire = function (i, n, r, s, c) {
                        var l = o(r, m.chance(.3) ? 0 : c || 16776960), d = 2 * Math.PI * Math.random();
                        n = Math.random() * (n || 10) + 5;
                        l.x = i.x + Math.cos(d) * n, l.y = i.y + Math.sin(d) * n, l.rotation = 1.5 * Math.random();
                        s = s || .12;
                        l.blendMode = 1, l.data = {
                            startAlpha: .3 + Math.random() / 2,
                            endAlpha: 0,
                            startScale: s * (1 + Math.random()),
                            endScale: .2 * s,
                            speedX: 0,
                            speedY: 0,
                            rotation: Math.random() / 100,
                            duration: 1500,
                            ttl: 1500,
                            gravity: -.1 - .1 * Math.random()
                        }, t.push(l), e.getLayer(2).addChild(l), a()
                    }, e.splatt = function (t, i) {
                        for (var n = n || 10, r = (i = i || {}).color, s = i.texture || "circle", c = (n = i.amount || 10, i.scale || 1), l = i.container, d = i.radius || 16, u = null != i.blendMode ? i.blendMode : e.blendMode, h = i.gravity || 1, f = 0; f < n; f++) {
                            var A = o(s, r);
                            l && l.addChild(A), A.blendMode = u;
                            var g = 2 * Math.PI * Math.random(), p = Math.cos(g) * d,
                                v = Math.sin(g) * d * .5 - 25 * Math.random();
                            A.x = t.x + p, A.y = t.y + v, A.rotation = g;
                            var w = Math.abs(1e3 * Math.random() + 500);
                            A.data = {
                                startAlpha: 1,
                                endAlpha: 0,
                                startScale: m.value(10 * c, 5 * c) / 10,
                                endScale: c * Math.random() * .2,
                                speedX: p,
                                speedY: v,
                                rotation: g / 50,
                                duration: w,
                                ttl: w,
                                friction: .99,
                                gravity: h
                            }
                        }
                        a()
                    }, e.harvest = function (e, t) {
                        for (var i = i || 10, n = (t = t || {}).color || 16777215, r = t.texture || "circle", s = (i = t.amount || 5, t.scale || 1), c = t.container, l = t.radius || 50, d = t.blendMode || 0, u = 0; u < i; u++) {
                            var h = o(r, n);
                            c && c.addChild(h), h.blendMode = d;
                            var f = 2 * Math.PI * Math.random(), A = Math.cos(f) * l * .25,
                                g = .25 * -Math.abs(Math.sin(f) * l) - 25 * Math.random();
                            h.x = e.x + A, h.y = e.y + g;
                            h.data = {
                                startAlpha: 1,
                                endAlpha: 1,
                                startScale: s,
                                endScale: .2 * s,
                                speedX: A,
                                speedY: g,
                                rotation: f / 150,
                                duration: 3e3,
                                ttl: 3e3,
                                gravity: 1
                            }
                        }
                        a()
                    }, e.sparkle = function (i, n) {
                        for (var r = 0; r < 4; r++) s(i.x, i.y, -Math.PI / 2), s(i.x, i.y, Math.PI / 2);

                        function s(i, r, a) {
                            var s = o();
                            s.alpha = 1, s.tint = n || D.getColor(), l.removeItem(t, s);
                            var c = Math.PI * Math.random() + a, d = 200 * Math.random() + 200,
                                u = 20 * Math.random() + 20, h = -.5 * Math.random() * 15, f = .7 * Math.random() + .75,
                                A = f - .5 * Math.random() + .25;
                            s.scale.set(d / 400, d / 400), s.x = i + 108 * Math.cos(c) - 50, s.y = r + 108 * Math.sin(c) - 50, s.visible = !0, e.addChild(s), Tween.clear(s), new Tween(s, {
                                x: s.x + Math.cos(c) * u,
                                y: s.y + Math.sin(c) * u,
                                rotation: h
                            }, f, Tween.easeout), XS.setTimeout((function () {
                                new Tween(s, {alpha: 0}, A, Tween.easeout).callback = function () {
                                    H.remove(s)
                                }
                            }), 1e3 * (f - A))
                        }

                        a()
                    }, e.shockwave = function (e, t) {
                        var i = (t = t || {}).color, n = t.texture || "shockwave", r = t.scale || 2, a = t.time || .4,
                            s = t.delay || 0, c = t.alpha || 1, l = t.initScale || .5 * r, d = o(n, i, !0);
                        return d.x = e.x, d.y = e.y, d.alpha = c, d.scale.set(l, l), new Tween(d.scale, {
                            x: r,
                            y: r
                        }, a, Tween.easeout), new Tween(d, {alpha: 0}, a, Tween.easeout).delay = s, h((function () {
                            H.remove(d)
                        }), 60 * a), d
                    }, e.kaboom = function (i, n, r, a) {
                        var s = o("condense", n);
                        l.removeItem(t, s);
                        a = a || 1;
                        return s.x = i.x, s.y = i.y, s.scale.set(a, a), s.tint = n || D.getColor(), new Tween(s.scale, {
                            x: 2 * a,
                            y: 2 * a
                        }, 1, Tween.easeout), c.blink(s, 10), h((function () {
                            s.parent && s.parent.addChild(e.shockwave(s, {color: n, scale: 3 * a})), H.remove(s)
                        }), r || 20), s
                    }, e.condense = function (t, i) {
                        var n = (i = i || {}).color, r = i.texture || "condense", a = i.scale || 1, s = i.time || .5;
                        i.delay, i.alpha;
                        var c = i.initScale || 2 * a, l = o(r, n, !0);
                        return l.x = t.x, l.y = t.y, l.alpha = 0, l.scale.set(c, c), e.addChild(l), new Tween(l.scale, {
                            x: .5 * a,
                            y: .5 * a
                        }, s, Tween.easeout), new Tween(l, {alpha: .5}, .5 * s, Tween.easeout).callback = function () {
                            new Tween(l, {alpha: 0}, .5 * s, Tween.easeout).callback = function () {
                                H.remove(l)
                            }
                        }, l
                    }, e.linewave = function (t, i, n, r) {
                        var o = H.spawn("linewave");
                        o.alpha = .5, o.tint = i, o.x = t.x, o.y = t.y, o.rotation = n ? 0 : w.degreeToRadians(90), o.scale.set(.9, .9);
                        var a = {x: o.x, y: o.y, alpha: .2}, s = {x: 8, y: r};
                        c.blink(o, 10), new Tween(o, a, .5, Tween.linear), new Tween(o.scale, s, .5, Tween.linear).callback = function () {
                            H.remove(o)
                        }, e.addChild(o)
                    }, e.radialLines = function (e, t) {
                        var i = [];
                        for (var n in t) {
                            var r = y.cycle("Line");
                            r.alpha = .3, r.draw(1, e.getColor(), e.x, e.y, t[n].x, t[n].y), r.visible = !0, i.push(r), k.addChild(r)
                        }
                        c.blinkArray(i, 10)
                    }, e.radialBolts = function (e, t, i) {
                        for (var n in t) y.cycle("Bolt").draw(e, t[n], i)
                    }, e.collect = function (e, t, i, n, r) {
                        var o = T.spawn(e);
                        o.play(), o.alpha = 1, o.visible = !0, o.x = t.x * b.scale.x + b.x + E.x, o.y = t.y * b.scale.y + b.y + E.y;
                        var a = 2.4 + m.spectrum(5) / 50;
                        r ? (a *= 1, stage.addChild(o)) : (a *= .3 * XS.devicePixelRatio, XS.stageContainer.addChild(o)), o.scale.set(a, a);
                        var s = 1.4 * a, c = 1 * a;
                        o.rotation += 2 * Math.random() - Math.random(), new Tween(o, {rotation: m.spectrum(20) / 10}, .3, Tween.easeout), new Tween(o.scale, {
                            x: -s,
                            y: s
                        }, .3, Tween.easeout).callback = function () {
                            new Tween(o.scale, {x: c, y: c}, .5, Tween.easein), new Tween(o, {
                                x: i.x,
                                y: i.y,
                                rotation: m.spectrum(20) / 10
                            }, .6, Tween.easein).callback = function () {
                                null != n && n(), T.remove(o)
                            }
                        }
                    }, e.shockwaveSheet = function (t, i, n, r) {
                        var o = T.spawn("explosion");
                        Tween.clear(o);
                        var a = n || 1.5;
                        return o.x = t.x, o.y = t.y, o.scale.set(.5, .5), o.visible = !0, e.addChild(o), new Tween(o.scale, {
                            x: a,
                            y: a
                        }, 1, Tween.easeout), o.play(0, 1), h((function () {
                            T.remove(o)
                        }), 60), o
                    }
                }))), M = new function () {
                    var e, i, n = this, r = {};
                    n.setMute = function (t) {
                        e = t
                    }, n.play = function (i) {
                        if (!e) return t[i] ? t[i].length ? n.playRandom(i) : void t[i].play() : console.log("SOUND NOT FOUND", i)
                    }, n.playRandom = function (i) {
                        e || l.getRandomItem(t[i]).play()
                    }, n.resetCounter = function (e) {
                        r[e] = 0
                    }, n.playProgressive = function (i, o) {
                        e || (null == r[i] && (r[i] = 0), r[i] = null != o ? w.ceil(o, t[i].length - 1) : r[i], t[i][r[i]].play(), ++r[i] >= t[i].length - 1 && n.resetCounter(i))
                    }, n.playVoiceover = function () {
                        e || f("playVoiceover", (function () {
                            for (var e; !e || e == n.lastVoiceOver;) e = l.getRandomItem(t.voiceOver);
                            e[0].play(), n.lastVoiceOver = e
                        }), 5)
                    }, n.playVoiceoverRange = function (r, o) {
                        if (!e) {
                            n.stopLastVoiceover();
                            for (var a = w.ceil(m.value(r, o), t.voiceOver.length - 1); a == i;) a = w.ceil(m.value(r, o), t.voiceOver.length - 1);
                            i = a, t.voiceOver[i][0].play()
                        }
                    }, n.stopLastVoiceover = function () {
                        null != i && t.voiceOver[i][0].stop()
                    }, n.playVoiceoverPosition = function (i) {
                        e || (n.stopLastVoiceover(), t.voiceOver[i][0].play())
                    }, n.playPosition = function (i, n) {
                        e || t[i][n] && t[i][n].play()
                    }
                }, H = new function () {
                    var e = this, t = {}, i = {}, r = {}, o = {}, a = {}, c = {};
                    for (var l in e.spawn = function (i, n, o) {
                        n = n || {};
                        t[i] || console.log("BAD TEXTURE:" + i);
                        var a = e.clear(t[i].shift() || e.newSprite(i));
                        r[i].push(a), H.extract(c[i], a), H.extract(n, a);
                        var s = n.anchorX || .5, l = n.anchorY || .5, d = n.scaleX || 1, u = n.scaleY || 1;
                        a.anchor.set(s, l), a.scale.set(d, u);
                        o = o || n.parent;
                        return n.tint && (a.tint = n.tint), o && o.addChild(a), a
                    }, e.spawnGroup = function (t) {
                        var i = [];
                        for (var n in a[t]) i.push(e.spawn(a[t][n]));
                        return i
                    }, e.getGroup = function (e) {
                        return a[e]
                    }, e.newSprite = function (e) {
                        var t = new Sprite(i[e]);
                        return t.anchor.set(.5, .5), t
                    }, e.preload = function (i, n) {
                        for (var r = 0; r < n; r++) t[i].push(e.newSprite(i))
                    }, e.cycle = function (i) {
                        return t[i].length < 10 && e.preload(i, 50), e.clear(t[i][++o[i] % t[i].length])
                    }, e.remove = function (i) {
                        if (i) if (i.length) for (var n in i) e.remove(i[n]); else {
                            var o = function (e) {
                                for (var t in r) for (var i in r[t]) if (r[t][i] == e) return r[t].splice(i, 1), t;
                                return !1
                            }(i);
                            i.visible = !1, i.parent && i.parent.removeChild(i), o && t[o].push(i)
                        }
                    }, e.clear = function (e) {
                        return Tween.clear(e), Tween.clear(e.scale), e.scale.set(1, 1), e.visible = !0, e.alpha = 1, e.x = 0, e.y = 0, e.rotation = 0, e.blendMode = 0, e
                    }, e.extract = function (e, t) {
                        if (e) for (var i in e) "parent" != i ? "scale" != i ? t[i] = e[i] : t.scale.set(e[i], e[i]) : e[i].addChild(t)
                    }, n) u(n[l]);
                    for (var d in s) for (var l in s[d]) u({id: d + l, texture: s[d][l], group: d});

                    function u(n) {
                        var s = n.id;
                        i[s] = n.texture, delete n.texture, t[s] = [], r[s] = [], o[s] = 0, c[s] = n, n.group && (a[n.group] || (a[n.group] = []), a[n.group].push(s)), e.preload(s, n.amount || 1)
                    }
                }, T = new function () {
                    var e = this, t = {}, i = {}, n = {}, o = {}, s = {}, c = {}, d = {}, u = {}, h = {};
                    for (var f in e.spawn = function (r) {
                        if (!i[r]) return console.log("TEXTURE DOESNT EXIST" + r);
                        var o = e.clear(t[r].shift() || e.newSheet(r));
                        return n[r].push(o), c[r] && (o.x = c[r].x, o.y = c[r].y), d[r] && (o.speedX = d[r].x, o.speedY = d[r].y), o
                    }, e.spawnGroup = function (t) {
                        var i = [];
                        for (var n in s[t]) i.push(e.spawn(s[t][n]));
                        return i
                    }, e.getGroup = function (e) {
                        return s[e]
                    }, e.newSheet = function (e) {
                        return new Q(new Sheet(i[e], u[e].w, u[e].h), h)
                    }, e.preload = function (i, n) {
                        for (var r = 0; r < n; r++) t[i].push(e.newSheet(i))
                    }, e.cycle = function (i) {
                        return t[i].length ? e.clear(t[i][++o[i] % t[i].length]) : console.log(" THERE'S NO POOL TO CYCLE " + i)
                    }, e.remove = function (e) {
                        if (e) {
                            e.stop();
                            var i = function (e) {
                                for (var t in n) for (var i in n[t]) if (n[t][i] == e) return n[t].splice(i, 1), t;
                                return !1
                            }(e);
                            e.visible = !1, e.parent && e.parent.removeChild(e), i && l.pushUnique(t[i], e)
                        }
                    }, e.clear = function (e) {
                        return Tween.clear(e), Tween.clear(e.scale), e.frame = 0, e.rotation = 0, e.scale.set(1, 1), e.visible = !0, e.alpha = 1, e.x = 0, e.y = 0, e
                    }, r) g(r[f]);
                    for (var A in a) for (var f in a[A].texture) g({
                        id: A + f,
                        texture: a[A].texture[f],
                        group: A,
                        w: a[A].w,
                        h: a[A].h
                    });

                    function g(r) {
                        var a = r.id;
                        h[a] = r, i[a] = r.texture, t[a] = [], n[a] = [], o[a] = 0, c[a] = r.position, d[a] = r.speed, u[a] = {
                            w: r.w,
                            h: r.h
                        }, r.group && (s[r.group] || (s[r.group] = []), s[r.group].push(a)), e.preload(a, r.amount || 1)
                    }
                }, L = new function () {
                    var e = this, t = {}, i = [], n = {};

                    function r(e, t, i) {
                        Tween.clear(e), e.alpha = 1, e.x = t.x, e.y = t.y + 200;
                        var n = t.y - 50;
                        k.addChild(e);
                        h((function () {
                            new Tween(e, {alpha: 0}, .54, Tween.easeout)
                        }), 20), new Tween(e, {y: t.y + (n - t.y) / 2}, .6, Tween.easein).callback = function () {
                            new Tween(e, {y: n}, .6, Tween.easeout).callback = function () {
                                v.removeChild(e), i && i.push(e)
                            }
                        }
                    }

                    e.showPoints = function (t, i, n) {
                        return e.showMessage(w.commas(t), i, 2 * t, n)
                    }, e.showMessage = function (t, i, o, a) {
                        n[t] || (n[t] = []);
                        o = w.hardLimit(o || 0, 0, 150);
                        var s = n[t].shift() || e.spawnText("stroke");
                        return s.setText(t), s.tint = a || 16777215, r(s, i, n[t]), s
                    }, e.showBitmap = function (e, i) {
                        var n = t[e];
                        n || (n = t[e] = H.spawn(e)), r(n, i)
                    }, e.spawnText = function (e, t, i) {
                        e = e || "normal";
                        var n = new BitmapFont(o[e]);
                        return n.textAlign = n.verticalAlign = "center", n.setText(t || "0"), k.addChild(n), i && (n.x = i.x, n.y = i.y), n.tint = 16777215, n
                    }, e.showCombo = function (e, t) {
                        var i, n = y.spawn("Particle"), r = y.spawn("Particle"), o = H.spawn("halo"),
                            a = H.spawnGroup("x" + e), s = H.spawn("x"), c = -20, l = c - 5;
                        for (var d in n.x = t.x, n.y = t.y, o.tint = D.getColorByID("x" + e), s.x = -90, s.y = 250, r.x = 90, r.y = s.y + 100, n.addChild(o), n.addChild(s), n.addChild(r), a) r.addChild(a[d]);

                        function u() {
                            o.rotation += .02;
                            if ((c += .7) > 0 && (c *= .91), (l += .7) > 0 && (l *= .91), s.y += c, r.y += l, i) for (var e in a) {
                                var t = a[e];
                                t.x += t.speedX, t.y += t.speedY
                            }
                        }

                        k.getLayer(4).addChild(n), n.scale.set(3, 3), s.alpha = 0, r.alpha = 0, o.scale.set(.1, .1), new Tween(n.scale, {
                            x: .9,
                            y: .9
                        }, .3, Tween.easeout), new Tween(s, {alpha: 1}, .1, Tween.easeout), new Tween(r, {alpha: 1}, .1, Tween.easeout).delay = 10, new Tween(o.scale, {
                            x: 1,
                            y: 1
                        }, .1, Tween.easeout), C.startRender(u), h((function () {
                            new Tween(s, {alpha: 0}, .3, Tween.easeout).delay = 10, new Tween(r, {alpha: 0}, .3, Tween.easeout).delay = 20, new Tween(n, {alpha: 0}, .3, Tween.easeout).delay = 20, new Tween(n.scale, {
                                x: 2,
                                y: 2
                            }, .3, Tween.easein).delay = 10, i = !0
                        }), 40), h((function () {
                            for (var e in C.stop(u), a) H.remove(a[e]);
                            H.remove(o), H.remove(s), y.remove(n), y.remove(r)
                        }), 70)
                    }, e.readysetgo = function () {
                        i = ["ready", "set", "go"], function t() {
                            if (!i.length) return d.onKey("onReadySetGo", !1);
                            var n = i.shift();
                            M.play(n), e.showWord(n, i.length ? 33 : 40, t)
                        }()
                    }, e.showWord = function (e, t, i, n) {
                        var r = 1024, o = 1024, a = y.spawn("Particle"), s = y.spawn("Particle"), c = H.spawn("halo"),
                            l = t || 40, d = H.spawnGroup(e), u = !1, f = .55 * l;
                        for (var A in a.x = r, a.y = o, n && (c.tint = D.getColorByID(n), a.addChild(c)), a.addChild(s), d) s.addChild(d[A]);
                        k.getLayer(4).addChild(a), a.scale.set(5, 5), s.alpha = 0;
                        var g = l / 4, p = l / 133, v = l / 400;

                        function w() {
                            if (c.rotation += .02, u) for (var e in d) {
                                var t = d[e];
                                t.x += t.speedX, t.y += t.speedY
                            }
                        }

                        new Tween(a.scale, {
                            x: 1,
                            y: 1
                        }, p, Tween.easeout), new Tween(s, {alpha: 1}, v, Tween.easeout).delay = g, C.startRender(w), h((function () {
                            new Tween(s, {alpha: 0}, p, Tween.easeout).delay = g, new Tween(a, {alpha: 0}, p, Tween.easeout).delay = g, new Tween(a.scale, {
                                x: 4,
                                y: 4
                            }, p, Tween.easein).delay = g, u = !0
                        }), f), h((function () {
                            for (var e in C.stop(w), d) H.remove(d[e]);
                            H.remove(c), y.remove(a), y.remove(s), null != i && i()
                        }), l)
                    }
                }, O = new (Container.expand((function () {
                    var e, t, i, n = [], r = Container.call(this);
                    b.addChild(r);
                    var o = {x: 0, y: 0}, a = {x: 0, y: 0};

                    function s(e, t) {
                        t && (n = []);
                        var i = e.event.getLocalPosition(b);
                        r.x = i.x, r.y = i.y;
                        var o = {x: r.x, y: r.y};
                        n.length || n.push(o);
                        var a = n[n.length - 1];
                        a.x != o.x && a.y != o.y && n.push(o), r.velocity.x = o.x - a.x, r.velocity.y = o.y - a.y
                    }

                    function c() {
                        i && (a.x = r.x + o.x, a.y = r.y + o.y, i.x += (a.x - i.x) / 1.5, i.y += (a.y - i.y) / 1.5)
                    }

                    r.velocity = {x: 0, y: 0}, r.isDown = function () {
                        return e
                    }, stage.on("down", (function (t) {
                        s(t, !0), e = !0
                    })), stage.on("up", (function (t) {
                        e = !1, r.stopDrag()
                    })), stage.on("move", (function (e) {
                        s(e, !1)
                    })), r.getHistory = function () {
                        return n
                    }, r.resetHistory = function () {
                        n = []
                    }, r.stopDrag = function () {
                        C.stop(c), i && (new Tween(i, a, .2), null != t && t(), t = null, i = null)
                    }, r.startDrag = function (e, n) {
                        t = n, i = e, r.updateOffset()
                    }, r.updateOffset = function () {
                        o.x = i.x - r.x, o.y = i.y - r.y
                    }, r.updateDrag = c
                }))), F = new function () {
                    var e = this;
                    b.addComponent(e), e.reset = function () {
                        Modal.hide()
                    }, e.flyModal = function (e) {
                        var t = Modal.ModalOverlayContent.expand((function () {
                            Modal.ModalOverlayContent.call(this), this.addHeadline(e), this.blurClose = !0, this.innerHeight = 200
                        }));
                        Modal.show(new t, !0, !0), h(Modal.hide, 60)
                    }, e.tryAgain = function () {
                        var t = [Host.Localize.Translate("Try again", {}, "Shown when a user failes to get 10 points in a game"), Host.Localize.Translate("Once more", {}, "Shown when a user failes to get 10 points in a game"), Host.Localize.Translate("Again", {}, "Shown when a user failes to get 10 points in a game"), Host.Localize.Translate("One more time", {}, "Shown when a user failes to get 10 points in a game")][4 * Math.random() | 0];
                        e.flyModal(t)
                    }, e.noMoreMoves = function () {
                        e.flyModal(Host.Localize.Translate("No More Moves!"))
                    }, e.goodJob = function () {
                        var t = [Host.Localize.Translate("Good Job", {}, "Shown when the user does a good job"), Host.Localize.Translate("Awesome", {}, "Shown when the user does a good job"), Host.Localize.Translate("You're great!", {}, "Shown when the user does a good job"), Host.Localize.Translate("Excellent", {}, "Shown when the user does a good job")][4 * Math.random() | 0];
                        e.flyModal(t)
                    }, e.gameOver = function () {
                        var e = Host.Localize.Translate("Good"), t = Host.Localize.Translate("Awesome"),
                            i = Host.Localize.Translate("You scored {score}!");
                        j.isHighscore && (e = Host.Localize.Translate("Perfect"), t = Host.Localize.Translate("Excellent"), i = Host.Localize.Translate("New highscore {score}!"));
                        var n = new Modal.GameEndModal({
                            headline: [e, t][2 * Math.random() | 0],
                            lead: Host.Localize.Translate(i, {score: j.score}, "Shows score on end screen"),
                            mainActionCallback: function () {
                                XS.ads.show("interstitial", (function () {
                                    Modal.hide(b.killAndRestart)
                                }))
                            },
                            mainActionText: Host.Localize.Translate("Play Again"),
                            mainActionColor: 16477478
                        });
                        n.blurCallback = void 0, Modal.show(n)
                    }
                }, X = new (Container.expand((function () {
                    var e, t, i = Container.call(this), n = i.sprite = H.spawn("finger"), r = 0;
                    n.anchor.set(0, .13), i.addChild(n);
                    var o = {};

                    function a() {
                        if (xt = Math.sin(r), "touch" == t) return r += .3, xt *= 20, n.x = 50 + 2 * xt, void (n.y = 50 + xt);
                        "swipeUp" == t && (r += .3, n.y = xt *= 100), "swipeHorizontal" == t && (r += .03, n.x = xt *= 1100), "tap" == t && (r += .3, xt < 0 ? (i.drawed || (i.parent.addChild(k.shockwave(i, "0xFFFFFF", "condense", 2.5, .5, null, .5)), o.tap && c.fadeOut(o.tap, .3)), i.drawed = !0, v.toFront(i), xt = 0) : i.drawed = !1, xt *= 30, n.x = 2 * xt, n.y = xt), "press" == t && (i.drawed >= 0 && (i.drawed = -20, k.shockwave(i, "0xFFFFFF", "condense", 2.5, .5, null, .5), v.toFront(i)), i.drawed++)
                    }

                    function s() {
                        d.delayUnique("Finger", s, 70), n.alpha = 0, n.x = 50, n.y = -50, null == i.data.OnOff && (i.data.OnOff = !1);
                        var e = i.data.swipeToY || -1500, t = i.data.swipeToX || 0;

                        function r() {
                            n.x = Math.sin(n.y / 500) * (500 * i.data.swipeToAngle)
                        }

                        Tween.clear(n), g("Finger1"), C.stop(r), new Tween(n, {
                            x: 0,
                            y: 0,
                            alpha: 1
                        }, .2, Tween.easeout).callback = function () {
                            new Tween(n, {x: t, y: e}, .6, Tween.easein), f("Finger1", (function () {
                                c.fadeOut(n, .35)
                            }), 20), i.data.swipeToAngle && (i.data.angleOnOff && (i.data.OnOff = !i.data.OnOff, !i.data.OnOff) || (C.start(r), h((function () {
                                C.stop(r)
                            }), 35.4)))
                        }
                    }

                    i.show = function (l, d) {
                        if (!e && l) {
                            if (e = !0, i.data = l, i.x = l.x, i.y = l.y, n.x = n.y = 0, n.alpha = 1, n.scale.set(1), i.scale.set(1), i.visible = !0, i.alpha = 1, k.addChild(i), i.addChild(n), r = 999 * Math.random(), c.fadeIn(i, .2), t = d || l.fingerAction || "touch", n.rotation = null != l.rotation ? l.rotation : i.y > 900 ? -1.3 : 0, i.scale.set(1, 1), o[d] && (i.addChild(o[d]), c.fadeIn(o[d], .3)), "swipeTo" == t) return s();
                            C.start(a)
                        }
                    }, i.hide = function () {
                        if (e) {
                            for (var t in e = !1, o) v.removeChild(o[t]);
                            i.remove()
                        }
                    }, i.remove = function () {
                        v.removeChild(i), C.stop(a)
                    }
                }))), G = new (Container.expand((function () {
                    var t = Container.call(this);
                    b.addComponent(t), t.x = 1024, t.y = 2700;
                    var i = [], n = {};
                    t.keys = [];
                    var r, o = !1;

                    function a(e, i) {
                        s(), r = t.currentKey = e, o = !0, l.removeItem(t.keys, e);
                        var a = n[e];
                        (a.title || a.description) && Tutorial.show(t, 0, 0, a.title, a.description), X.show(i || a.finger), v.toFront(t), t.update && C.start(t.update), t.vars.tracking && ai.FTUE(t.vars.tracking), delete t.vars.tracking
                    }

                    function s() {
                        stage.addChild(t), t.x = XS.stage.width / 2 * XS.devicePixelRatio, t.y = (t.alignTop ? 370 : XS.stage.height - 70) * XS.devicePixelRatio
                    }

                    t.isActive = !e.hideTutorial.get(), t.isReplay = !1, t.vars = {}, t.alignTop = !0, t.reset = function () {
                        if (t.isActive = !e.hideTutorial.get(), t.keys = l.clone(i), t.vars = {}, o = !1, t.isReplay && r) for (; t.keys[0] != r;) t.keys.shift();
                        t.show()
                    }, t.addTutorial = function (e, t, r, o) {
                        i.push(e), n[e] = {key: e, title: t, description: r, validation: o}
                    }, t.show = function (e, i) {
                        if (o && t.hide(), t.isActive && (I("SHOW TUTORIAL", e, t.keys.length), !e || t.keys[0] == e)) {
                            t.keys.length || t.finish();
                            e = e || function () {
                                for (var e in t.keys) if (!n[t.keys[e]].validation || n[t.keys[e]].validation()) return t.keys[e]
                            }();
                            if (-1 == t.keys.indexOf(e)) return t.hide();
                            a(e, i)
                        }
                    }, t.finish = function () {
                        I("FINISH!"), G.addTutorial("Finish", Host.Localize.Translate("You're ready!"), Host.Localize.Translate("Make as many points as you can!", {game_name: Config.shareTitle})), a("Finish"), t.isActive = !1, t.vars = {}, e.hideTutorial.set(!0)
                    }, t.hide = function () {
                        t.update && C.stop(t.update), delete t.update, Tutorial.hide(), X.hide(), o && (o = !1, t.isActive)
                    }, XS.on("resize", s), t.changeAlign = function (e) {
                        t.alignTop = e, s()
                    }
                })));
                XS.is.facebookInstant || XS.loadConfig(Config.id), XS.styles.margins.bottom = 0;
                var z = void 0;
                XS.insertRemoveAdsButton = function (e, t, i) {
                    z = insertButton(e, t, i)
                }, XS.removeAdsButton = function () {
                    z && (Sidebar.removeMenuItem(z), Sidebar.reAlignItems(), z = void 0)
                }, XS.is.facebookInstant || (window.insertButton = function (e, t, i) {
                    if (!(e instanceof Sprite)) throw new Error("Please update your code to use the new SVG icons: " + t);
                    return Sidebar.addMenuItemAfter(shopItem, e, t, i)
                }), XS.backgroundMusic = XS.Music.get(Pt, .8), XS.backgroundMusic.play(0, !0), b.shop && Sidebar.addShopItem((function () {
                    b.shop.show()
                }), Host.Localize.Translate("Game Shop", {}, "Shop XYYX")), Sidebar.addRestartItem((function () {
                    XS.ads.show("interstitial", (function () {
                        b.killAndRestart()
                    }))
                }), Host.Localize.Translate("New Game", {}, "Level in this context is a level in a game")), Sidebar.addStandards(), window.Social(), Sidebar.sounds.show = XS.Sound.get(Qt, 1), Sidebar.sounds.hide = XS.Sound.get(Rt, 1), Modal.sounds.button = XS.Sound.get(ot, 1);
                var j = new (Container.expand((function () {
                    var e = Container.call(this);
                    b.addComponent(e), e.score = 0, e.highscore = 0;
                    var t = L.spawnText(), i = L.spawnText(), n = L.spawnText(), r = L.spawnText(),
                        o = H.spawn("crown"), a = H.spawn("crown"), s = new Container;
                    a.tint = n.tint = r.tint = 0, a.x = a.y = n.x = n.y = r.y = r.x = 4, s.addChild(a), s.addChild(o), s.y = 240, e.isHighscore = !1;
                    var c = 0, l = 0, d = 0;

                    function u() {
                        c = e.score, l = e.highscore, f(), C.stop(h)
                    }

                    function h() {
                        if (c > e.score && (c = e.score), l > e.highscore && (l = e.highscore), Math.round(c) == Math.round(e.score)) return u();
                        c += (e.score - c) / 10, l += (e.highscore - l) / 10, f()
                    }

                    function f() {
                        n.setText(w.commas(Math.round(c))), r.setText(w.commas(Math.round(l))), t.setText(w.commas(Math.round(c))), i.setText(w.commas(Math.round(l))), d != i.getPixelWidth() * i.scale.x && (d = i.getPixelWidth() * i.scale.x, i.x = -d / 2 + 45, s.x = i.x - 40, r.x = i.x + 4, r.y = i.y + 4)
                    }

                    i.y = 245, e.multiplier = 1, t.verticalAlign = n.verticalAlign = "top", t.tint = i.tint = 16777215, i.textAlign = r.textAlign = "left", i.scale.set(.25, .25), r.scale.set(.25, .25), n.alpha = r.alpha = a.alpha = .4, e.y = 20, e.offset = {
                        x: 0,
                        y: 0
                    }, e.addChild(r), e.addChild(n), e.addChild(i), e.addChild(t), e.addChild(s), stage.addChild(e), e.reset = function () {
                        v.toFront(e)
                    }, e.resetTrue = function () {
                        e.multiplier = 1, e.score = 0, e.isHighscore = !1, e.refresh(), v.toFront(e)
                    }, e.refresh = function () {
                        e.highscore = S.state.highscore || 0, u()
                    }, XS.on("resize", (function () {
                        e.x = E.getCenterX() + e.offset.x, e.y = 40
                    })), e.addScore = function (t, i, n) {
                        if (t) {
                            var r = t * e.multiplier;
                            if (e.score += r, e.score > e.highscore && (e.highscore = e.score, e.isHighscore = !0, S.save("highscore", e.highscore, !0)), C.startRender(h), i) {
                                var o = L.showPoints(r, {x: i.x, y: i.y - 150}, n);
                                return o.scale.set(1.7), o
                            }
                        }
                    }, e.setScore = function (t) {
                        e.score = t, u()
                    }, e.toFront = function () {
                        stage.addChild(e)
                    }, e.setColor = function (e, n, r) {
                        t.tint = e, i.tint = n || e, o.tint = r || e
                    }, S.onRefresh(e.refresh)
                }))), U = Container.expand((function (e) {
                    var t, i = Container.call(this), n = (e = e || {}, H.spawn("progressbar_base", null, i)),
                        r = H.spawn("progressbar"), o = r.width;

                    function a() {
                        var e = 100 * r.scale.x;
                        e += (i.percent - e) / 2, r.scale.set(e / 100, 1), i.head && (i.head.x = o * e / 100), Math.round(e) == i.percent && s()
                    }

                    function s() {
                        r.scale.set(i.percent / 100, 1), i.head && (i.head.x = o * i.percent / 100), t && C.stop(a), t = !1
                    }

                    i.addChild(r), e.head && (i.head = H.spawn(e.head, null, i)), r.anchor.set(0, .5), n.anchor.set(0, .5), e.parent && e.parent.addChild(i), e.x && (i.x = e.x), e.y && (i.y = e.y), i.percent = 0, i.bar = r, i.reset = function () {
                        i.setPercent(value, !0)
                    }, i.setPercent = function (e, n) {
                        if (i.percent = w.hardLimit(e, 0, 100), n) return s();
                        t = !0, C.start(a)
                    }, i.setPercent(0, !0)
                })), N = Container.expand((function (e) {
                    var t = Container.call(this);
                    e = t.data = e || {};
                    t.x = e.x || 0, t.y = e.y || 0, t.onMouseDown = e.onMouseDown, t.sprite = H.spawn(e.texture || "blank"), t.scaleZoom = e.scaleZoom || 1.1, e.tint && (t.sprite.tint = e.tint), t.addChild(t.sprite), e.parent && e.parent.addChild(t), t.id = e.id || e.texture, e.x && (t.x = e.x), e.y && (t.y = e.y);
                    var i = !0;
                    t.disable = function () {
                        i = !1, t.alpha = .3
                    }, t.enable = function () {
                        i = !0, t.alpha = 1
                    }, t.show = function (e) {
                        if (t.visible = !0, 0 == e) return t.disable();
                        t.enable()
                    }, t.hide = function () {
                        t.disable(), t.visible = !1
                    }, t.onDown = function () {
                        i && (M.play("button"), t.onMouseDown(t))
                    }, t.sprite.on("down", t.onDown)
                })), J = Container.expand((function (e) {
                    var t = J = Container.call(this), i = !1, n = H.spawn("blackcover", null, t);

                    function r() {
                        n.width = E.WIDTH + 200, n.height = E.HEIGHT + 200, t.x = E.getCenterX(), t.y = E.getCenterY()
                    }

                    n.on("down", (function () {
                    })), t.show = function (e) {
                        d.cancel("BlackCoverRemove"), r(), i || (i = !0, c.fadeIn(t, .5), stage.addChild(t))
                    }, t.hide = function () {
                        i && f("BlackCoverRemove", (function () {
                            i = !1, c.fadeOut(t, .5), f("BlackCoverRemove", (function () {
                                v.removeChild(t)
                            }), 30)
                        }), 10)
                    }, XS.on("resize", r)
                }));
                new J;
                var Dt = Container.expand((function (e) {
                    var t = Dt = Container.call(this);
                    t.pool = [], t.current, t.add = function (e, i) {
                        return null != t[e] && I("POPUP", e, "ALREADY EXISTS"), t[e] = new kt(e, i), t[e]
                    }, t.show = function (e, i, n) {
                        if (!t.current || t.current !== t[e]) {
                            b.pause(), t[e] || y.spawn("Popup_" + e);
                            var r = t.current;
                            if (t.current = t[e], t.current.show(i, n), t.current.hasBlackCover && J.show(), stage.addChild(t), A("Popups"), r) return n ? r.hide("left" == n ? "right" : "left") : void r.doHide()
                        }
                    }, t.hide = function (e) {
                        if (J.hide(), e && t.current != t[e]) return t[e].hide(), void J.hide();
                        t.current && (t.current.hide(), t.current = null, e || f("Popups", b.play, 2))
                    }, t.overlay = function (e, i, n) {
                        t[e] || y.spawn("Popup_" + e), J.show(), stage.addChild(t), t[e].show(i, n), t.addChild(t[e]), A("Popups"), b.pause()
                    }, XS.on("resize", (function () {
                        t.x = E.getCenterX(), t.y = E.getCenterY()
                    })), stage.addChild(t)
                }));
                new Dt;
                var kt = Container.expand((function (e, t) {
                    var i = Container.call(this);
                    t = t || {}, e = e;
                    i.animationIn = t.animation || "cut", i.animationOut = t.animationOut || i.animationIn, i.hasBlackCover = t.hasBlackCover, i.onMouseDown = t.onMouseDown, i.onShow = t.onShow, i.onHide = t.onHide, i.isBlocked = !1, i.update = t.update || function () {
                    };
                    var n = !1, r = .2;
                    i.onPageMouseDown = function (e) {
                        null != i.onMouseDown && i.onMouseDown(e)
                    }, i.show = function (t, r) {
                        n || (n = !0, i.data = t, g(e), Dt.addChild(i), i.y = 0, i.x = 0, i.visible = !0, i.alpha = !0, i[(r || i.animationIn) + "In"](), null != i.onShow && i.onShow(), C.start(i.update))
                    }, i.hide = function (t) {
                        n && (n = !1, C.stop(i.update), i[(t || i.animationOut) + "Out"](), f(e, i.doHide, 40))
                    }, i.doHide = function () {
                        C.stop(i.update), i.y = 9e3, n = !1, i.visible = !1, v.removeChild(i), null != i.onHide && i.onHide()
                    }, i.panIn = function () {
                        i.y = 100, c.to(i, {y: 0}, .4)
                    }, i.panOut = function () {
                        i.y = 0, c.to(i, {y: E.TOP}, r)
                    }, i.leftIn = function () {
                        i.x = E.RIGHT + E.WIDTH, c.to(i, {x: 0}, 40)
                    }, i.leftOut = function () {
                        i.x = 0, c.to(i, {x: E.RIGHT + E.WIDTH}, 40)
                    }, i.rightIn = function () {
                        i.x = E.LEFT - E.WIDTH, c.to(i, {x: 0}, 40)
                    }, i.rightOut = function () {
                        i.x = 0, c.to(i, {x: E.LEFT - E.WIDTH}, 40)
                    }, i.downIn = function () {
                        i.y = -100, c.to(i, {y: 0}, .4)
                    }, i.downOut = function () {
                        i.y = 0, c.to(i, {y: E.TOP}, r)
                    }, i.downOut = function () {
                        i.y = 0, c.to(i, {y: E.BOTTOM}, r)
                    }, i.fadeIn = function () {
                        i.alpha = 0, Animate.fadeIn(i, .3)
                    }, i.fadeOut = function () {
                        i.alpha = 1, Animate.fadeOut(i, .3)
                    }, i.flickerIn = function () {
                        c.flickerIn(i)
                    }, i.flickerOut = function () {
                        c.flickerOut(i)
                    }, i.scaleIn = function () {
                        i.fadeIn(), i.scale.set(1.4, 1.4), c.scaleTo(i, null, null, .6)
                    }, i.scaleOut = function () {
                        i.fadeOut()
                    }, i.cutIn = function () {
                        i.alpha = 1, i.y = 0, c.fadeIn(i, .1)
                    }, i.cutOut = function () {
                        c.fadeOut(i, .1)
                    }
                }));
                y.register("Popup", kt);
                var Mt = new function () {
                    var e = this;
                    e.pool = [], e.frame = 0;
                    var t = 3, i = 0;
                    e.posY = 0;
                    var n = 0;
                    e.checkBig = function () {
                        return !(++i < 10) && (i = 0, !0)
                    }, e.spawn = function (e) {
                        return y.spawn("Coin", e)
                    }, e.reset = function () {
                        for (; e.pool.length;) e.pool[0].remove()
                    }, e.remove = function (t) {
                        l.removeItem(e.pool, t), y.remove(t)
                    }, e.add = function (t) {
                        e.pool.push(t)
                    }, e.id = 0, C.start((function () {
                        if (n += 1.5, e.posY += n, e.posY > 0) for (var i in n = -20, e.posY = 0, e.pool) e.pool[i].land();
                        for (var i in --t < 0 && (t = 3, ++e.frame > 9 && (e.frame = 0)), e.pool) e.pool[i].update()
                    }))
                }, Ht = Container.expand((function () {
                    var e = Container.call(this), t = T.spawn("coinsheet");
                    t.stop(0), t.setFrame(Mt.frame), t.anchor.set(.5, .9), t.rotation = 0, t.scale.set(1), t.x = t.y = 0;
                    var i = H.spawn("circle");
                    i.tint = 0, i.alpha = .2, i.scale.set(2, 1);
                    var n, r = 0, o = "float";
                    e.addChild(i), e.addChild(t), e.isBig;
                    var a = .8, s = 0;
                    e.reset = function (c) {
                        Mt.add(e), e.x = c.x, e.y = c.y, e.id = Mt.id++, e.type = c.type || "pickup", e.isBig = "CoinBig" == c.label, o = c.animation || "jump", i.visible = !c.hideShadow, t.rotation = 0, t.scale.set(1), t.x = t.y = 0;
                        var l = c.parent || k;
                        n = c, r = e.id / 2, s = -10, c.isometric && w.pointToIso(c, e), l.addChild(e), a = e.isBig ? 1.1 : .6, a *= c.scale || 1.6, e.scale.set(a, a)
                    }, e.update = function () {
                        if (t.setFrame(Mt.frame), "isometric" == o) {
                            r += .05, t.y = 10 * Math.sin(r) - 30;
                            var i = {x: n.x + 5 * Math.sin(r), y: n.y + 5 * Math.cos(r)};
                            w.pointToIso(i, e)
                        }
                        "jump" == o && (t.y = Mt.posY), "gravity" == o && (s += .8, t.rotation += .01, e.y += s), "float" == o && (r += .05, t.rotation += .01, e.y += 3 * Math.sin(r))
                    }, e.land = function () {
                        c.scaleTo(t)
                    }, e.pickup = function () {
                        var i = {x: e.x, y: e.y + t.y};
                        j.addScore(e.isBig ? 50 : 10, i), k.splatt(i), e.remove()
                    }, e.remove = function () {
                        v.removeChild(e), Mt.remove(e)
                    }
                }));
                y.register("Coin", Ht);
                var Tt = new (Container.expand((function () {
                    var e = Container.call(this);
                    e.coins = 0;
                    var t = H.spawn("coinbtn");
                    t.tint = 0, t.x = 35;
                    var i = {};
                    t.anchor.set(1, .5), t.on("up", (function () {
                        c.bounceScale(n, .8, 1.4, 1, .1)
                    })), e.addChild(t);
                    var n = new Sheet(Te(), 164, 164);
                    n.anchor.set(.5, .5), e.addChild(n);
                    var r = L.spawnText();

                    function o() {
                        XS.stageContainer.addChild(e), e.x = (width - 40) * XS.devicePixelRatio, e.y = 35 * XS.devicePixelRatio, i = {
                            x: XS.stage.width - 100 * XS.devicePixelRatio,
                            y: 100 * XS.devicePixelRatio
                        }
                    }

                    r.scale.set(.5, .5), r.textAlign = "right", r.x = -110, r.y = -5, e.addChild(r), e.scale.set(.2 * XS.devicePixelRatio), e.collected = 0, e.refresh = function () {
                        e.setCoins(S.state.coins, !0)
                    }, XS.on("resize", o), e.collect = function (t, n, r) {
                        e.collected += n, M.play("coinpickup"), k.collect("coinsheet", t, r ? i : e, (function () {
                            e.increase(n || 1)
                        }), r)
                    }, e.setCoins = function (t, i) {
                        e.coins = t || 0, e.coins < 0 && (e.coins = 0), r.setText(w.commas(e.coins)), i || S.save("coins", e.coins, !0)
                    }, e.increase = function (t) {
                        e.setCoins(e.coins + (t || 1)), c.bounceScale(n, .8, 1.4, 1, .1)
                    }, e.decrease = function (t) {
                        e.setCoins(e.coins - (t || 1))
                    }, e.purchase = function (t) {
                        t = parseInt(t);
                        return e.coins < t ? (c.shake(n, {
                            x: 0,
                            y: 0
                        }, 10, 10), M.playRandom("lose"), !1) : (M.playRandom("win"), M.play("coinpickup"), e.decrease(t), !0)
                    }, e.hide = function () {
                        e.visible = !1
                    }, e.show = function () {
                        e.visible = !0
                    }, S.onRefresh(e.refresh), o()
                }))), Lt = new function () {
                    var e = this;
                    e.pool = [], e.frame = 0;
                    var t = 3;
                    e.posY = 0;
                    var i = 0;
                    e.spawn = function (e) {
                        return y.spawn("Pickup", e)
                    }, e.reset = function () {
                        for (; e.pool.length;) e.pool[0].remove()
                    }, e.remove = function (t) {
                        l.removeItem(e.pool, t), y.remove(t)
                    }, e.add = function (t) {
                        e.pool.push(t)
                    }, e.id = 0, C.start((function () {
                        if (i += 1.5, e.posY += i, e.posY > 0) for (var n in i = -20, e.posY = 0, e.pool) e.pool[n].land();
                        for (var n in --t < 0 && (t = 3, ++e.frame > 9 && (e.frame = 0)), e.pool) e.pool[n].update()
                    }))
                }, Ot = Container.expand((function () {
                    var e, t = Container.call(this), i = H.spawn("circle");
                    i.tint = 0, i.alpha = .2, i.scale.set(2, 1);
                    var n, r = 0, o = "float";
                    t.addChild(i), t.isBig;
                    var a = .8, s = 0;
                    t.reset = function (l) {
                        Lt.add(t), e && H.remove(e), e = H.spawn(l.texture || "pickup", {}, t), t.x = l.x, t.y = l.y, t.id = Lt.id++, t.type = l.type || "pickup", t.isBig = "CoinBig" == l.label, o = l.animation || "jump", i.visible = !l.hideShadow, e.rotation = 0, e.scale.set(.3), c.scaleTo(e), e.x = e.y = 0;
                        var d = l.parent || k;
                        n = l, r = t.id / 2, s = 0, l.isometric && w.pointToIso(l, t), d.addChild(t), a = t.isBig ? 1.1 : .6, a *= l.scale || 1.6, t.scale.set(a, a)
                    }, t.update = function () {
                        if ("isometric" == o) {
                            r += .05, e.y = 10 * Math.sin(r) - 30;
                            var i = {x: n.x + 5 * Math.sin(r), y: n.y + 5 * Math.cos(r)};
                            w.pointToIso(i, t)
                        }
                        "jump" == o && (e.y = Lt.posY), "gravity" == o && (s += .3, t.y += s), "float" == o && (r += .05, e.rotation += .005 * Math.sin(r), t.y += 3 * Math.sin(r))
                    }, t.land = function () {
                        c.scaleTo(e)
                    }, t.pickup = function () {
                        var i = {x: t.x, y: t.y + e.y};
                        j.addScore(t.isBig ? 50 : 10, i), k.splatt(i), t.remove()
                    }, t.remove = function () {
                        v.removeChild(t), Lt.remove(t)
                    }
                }));
                y.register("Pickup", Ot);
                // /\.XYYX\.com$/gi.test(document.domain) || (top.location.href = "http://spacebreaker.XYYX.com/?hx=" + encodeURI(document.location));
                var Ft, Xt = Container.expand((function (e) {
                    var t = Container.call(this);
                    E.addChild(t);
                    var i = H.spawn("star", null, t);
                    v.toFront(b), Ft.addChild(t), Ft.pool.push(t);
                    var n = m.decimal(1.2, .4);

                    function r() {
                        n = m.decimal(.2, .1), t.scale.set(n, n), t.x = m.spectrum(1e3), t.y -= 4e3, t.alpha = m.decimal(.7, .5)
                    }

                    r(), t.y = m.spectrum(2e3), i.tint = 8338431, t.update = function () {
                        t.y += Ft.speed * n * 4, t.y > 2e3 && r()
                    }
                })), Gt = Container.expand((function (e) {
                    var t = Container.call(this);
                    E.addChild(t);
                    var i, n, r = ["BG_cloud"];

                    function o() {
                        i && H.remove(i), i = H.spawn(l.getRandomItem(r), null, t), n = m.decimal(1, .3), t.alpha = m.decimal(.7, .1), t.scale.set(n * m.direction(), n), t.x = m.spectrum(1e3), t.y -= 4e3
                    }

                    v.toFront(b), Ft.addChild(t), Ft.pool.push(t), o(), t.y = m.spectrum(2e3), t.update = function () {
                        t.y += Ft.speed * n, t.y > 2e3 && o()
                    }
                }));
                new (Container.expand((function (e) {
                    var t = Ft = Container.call(this);
                    E.addChild(t), v.toFront(b);
                    var i = t.parallax = new Container;
                    b.addChild(t.parallax), t.x = 1e3, t.y = 1e3, t.pool = [];
                    var n = 5;
                    t.speed = 5;
                    for (var r, o = 0; o < 50; o++) new Xt;
                    for (o = 0; o < 2; o++) new Gt;
                    t.reset = function () {
                        r = !1, i.y = 0, t.stop()
                    }, t.accelerate = function () {
                        r = !0, n = 45
                    }, t.brakes = function () {
                        n = 20
                    }, t.stop = function () {
                        n = 5
                    }, C.start((function () {
                        var e = w.hardLimit(2 * jt.level, 1, 40);
                        for (var o in t.speed += (n + e - t.speed) / 20, t.pool) t.pool[o].update();
                        r && (i.y += .35 * t.speed)
                    }))
                })));
                var zt = new (Container.expand((function (e) {
                    var t = Container.call(this);
                    H.spawn("logo", null, t);
                    var i = 0, n = new Text2(Host.Localize.Translate("LEVEL"), {
                        size: 210,
                        font: "Helvetica",
                        fill: "#FFFFFF"
                    });

                    function r() {
                        i += .05, t.x += Math.sin(i), t.y + Ft.parallax.y < 3e3 || (C.stop(r), v.removeChild(t))
                    }

                    n.y = 700, n.anchor.set(.5, .5), t.addChild(n), t.spawn = function () {
                        t.x = 0, t.y = -2e3, Ft.parallax.addChild(t), n.setText("boss" == si.levelType ? Host.Localize.Translate("BOSS AHEAD!") : Host.Localize.Translate("LEVEL {level}", {level: S.state.level})), C.start(r)
                    }
                }))), jt = new (jt = Container.expand((function (e) {
                    var t, i = Container.call(this), n = 440 * 1.1, r = i.level = 1;

                    function o() {
                        var e = Math.round(Ft.parallax.y / 2904.0000000000005);
                        if (e != t) {
                            t = e, r += .2, i.level = r;
                            var o = 5e3 + Ft.parallax.y, a = w.hardLimit(Math.floor(r), 1, 4), s = l.clone(Ut.get());
                            "boss" != si.levelType && o > si.dist + 250 && (s = Jt), m.chance() && (s = l.flip(s));
                            for (var c = 0, d = 0; d < 6; d++) for (var u = 0; u < 6; u++) s[c++] && y.spawn("Block", {
                                x: 480 * u - 1200,
                                y: -d * n - o,
                                level: a
                            })
                        }
                    }

                    i.pool = [], b.addChild(i), i.reset = function () {
                        for (t = 0, i.level = r = 1; i.pool.length;) i.pool.shift().remove();
                        C.start(o)
                    }, i.spawn = function () {
                    }, i.remove = function (e) {
                        l.removeItem(i.pool, e), y.remove(e)
                    }, i.midas = function () {
                        for (; i.pool.length;) i.pool.shift().midas();
                        C.stop(o)
                    }
                }))), Ut = new x;
                Ut.isShuffled = !1, new x, Ut.isShuffled = !0;
                var Nt,
                    Jt = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    Kt = [];
                Kt.push([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]), Kt.push([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]), Kt.push([1, 1, 1, 1, 1, 1]), Ut.addCue("wallMixer", 3, Kt), (Nt = []).push([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]), Nt.push([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]), Nt.push([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]), Nt.push([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]), Nt.push([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]), Nt.push([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), Nt.push([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]), Nt.push([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]), Nt.push([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1]), Nt.push([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]), Nt.push([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]), Nt.push([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]), Nt.push([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]), Nt.push([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]), Nt.push([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]), Nt.push([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]), Nt.push([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]), Nt.push([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]), Ut.addCue("normal", 1, Nt), (Nt = []).push([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]), Nt.push([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]), Nt.push([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]), Nt.push([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]), Nt.push([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]), Nt.push([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]), Nt.push([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1]), Nt.push([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Nt.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Ut.addCue("filler1", 1, Nt), Ut.addCue("filler2", 1, l.clone(Nt)), Ut.addCue("filler3", 1, l.clone(Nt));
                var Vt = Container.expand((function (e) {
                    var t, i = Container.call(this), n = new Container;
                    i.addChild(n);
                    var r = L.spawnText("stroke");
                    r.scale.set(2, 1.5), i.health = 0, i.rect = new P(0, 0, 500, 460);
                    var o, a, s, l, d = [14992674, 3394047, 11803884, 16583044], u = i.pos = {};

                    function h() {
                        if (u.x = i.x, u.y = i.y + Ft.parallax.y, u.y > 3e3) return f();
                        if (!(u.y < -5500)) for (var e in ti.pool) {
                            var t = ti.pool[e];
                            if (t.isActive) if (w.hipotenusa(u, t) < 350) return i.hit(t)
                        }
                    }

                    function f() {
                        s || (s = !0, i.isActive = !1, H.remove(t), t = null, C.stop(h), jt.remove(i))
                    }

                    i.reset = function (e) {
                        s = !1, i.isActive = !0, a = 1, m.chance() && (a = m.value(1 == si.level ? 2 : 4, 1)), a > 4 && (a = 4), l = "square" + a, t = H.spawn(l, null, n), o = d[a - 1], i.health = a * si.difficulty * 2 - 1, n.addChild(r), r.setText(i.health), i.x = e.x, i.y = e.y, u.x = i.x, u.y = i.y - Ft.parallax.y, jt.pool.push(i), Ft.parallax.addChild(i), C.start(h)
                    }, i.hit = function (e) {
                        if (c.kick(n, null, 0, -100), e.hit(), k.explodeObstacle(e, {
                            texture: "pixel",
                            scale: 1,
                            blendMode: 0,
                            color: o
                        }), i.health -= S.state.damage, i.health <= 0) return M.play("explosion"), k.explodePixel(u, {
                            texture: "pixel",
                            color: o,
                            scale: 1,
                            speed: 15
                        }), k.shockwave(u, {texture: l, color: o, scale: 3}), k.shockwave(u, {
                            texture: l,
                            color: o,
                            scale: 4,
                            blendMode: 1
                        }), j.addScore(a, u, o), $t.spawn({x: i.x, y: i.y + 100}), void f();
                        r.setText(i.health)
                    }, i.shake = function () {
                        c.shake(n, null, 40, 40)
                    }, i.midas = function () {
                        u.y > -4e3 && $t.spawn({x: i.x, y: i.y + 100}), f()
                    }, i.remove = f
                }));
                y.register("Block", Vt);
                var Yt = new (Container.expand((function (e) {
                    var t, i, n = Container.call(this);

                    function r() {
                        var e = Math.round(Ft.parallax.y / i);
                        e != t && (t = e, i = 3e3, y.spawn("Bunny", {y: -e * i - 7e3}))
                    }

                    n.pool = [], b.addChild(n), n.reset = function () {
                        for (t = 0; n.pool.length;) n.pool.shift().remove();
                        if ("boss" == si.levelType || S.state.level < 2) return C.stop(r);
                        i = 5e3, C.start(r)
                    }, n.spawn = function () {
                    }, n.midas = function () {
                        for (; n.pool.length;) n.pool.shift().midas();
                        C.stop(r)
                    }, n.remove = function (e) {
                        l.removeItem(n.pool, e), y.remove(e)
                    }
                }))), Wt = Container.expand((function (e) {
                    var t, i = Container.call(this), n = new Container;
                    i.addChild(n);
                    var r = 16777215, o = 1;
                    i.health = 0;
                    var a, s, l, d = 0, u = 0, f = 0, A = 0;

                    function g() {
                        d += .01, u += .03, f += .1, i.x += Math.sin(u) * s, i.y += Math.cos(d) * l, i.y += o + .3 * Ft.speed;
                        var e = .07 * Math.sin(f);
                        if (i.scale.set(1.3 + e, 1.3 - e), i.y > -5500) for (var n in ti.pool) {
                            var r = ti.pool[n];
                            if (r.isActive) if (w.hipotenusa(i, r) < 325) return i.hit(r)
                        }
                        i.y > 3e3 && p(), --A < 0 && i.y > -5e3 && (A = m.value(120, 50) + 60, h((function () {
                            a || (ni.spawn(i), c.kick(t, null, 0, -160))
                        }), 20))
                    }

                    function p() {
                        a || (a = !0, Yt.remove(i), C.stop(g))
                    }

                    i.reset = function (e) {
                        a = !1, t && H.remove(t), t = H.spawn("rabbit" + m.value(4, 1), {
                            scaleX: 1.6,
                            scaleY: 1.6
                        }, n), d = m.decimal(), u = m.decimal(), f = m.decimal(), A = m.value(30), i.health = m.value(3, 1) * si.difficulty, o = m.value(5, 1), s = m.value(30, 10), l = m.value(40, 5), i.x = m.spectrum(200), i.y = e.y, Yt.pool.push(i), Yt.addChild(i), C.start(g)
                    }, i.hit = function (e) {
                        if (e.hit(), i.health -= S.state.damage, i.health <= 0) return function () {
                            M.play("killBunny"), j.addScore(50, i, r), k.explodePixel(i, {
                                texture: "pixel",
                                color: r,
                                scale: .7
                            }), k.explodeObstacle(i, {texture: "pixel", scale: 3}), b.shake(30, 1);
                            for (var e = 0; e < 5; e++) $t.spawn({
                                x: i.x + m.spectrum(200),
                                y: i.y + 100 - Ft.parallax.y
                            });
                            p()
                        }();
                        c.kick(t, null, 0, -100), k.shockwave(i, {texture: "pixel", scale: 3})
                    }, i.midas = function () {
                        k.explodePixel(i, {
                            texture: "pixel",
                            color: r,
                            scale: .7
                        }), k.explodeObstacle(i, {texture: "pixel", scale: 3}), $t.spawn({
                            x: i.x,
                            y: i.y + 100 - Ft.parallax.y
                        }), p()
                    }, i.remove = p
                }));
                y.register("Bunny", Wt);
                var qt = Container.expand((function (e) {
                    var t = qt = Container.call(this), i = new Container;
                    t.addChild(i);
                    var n = H.spawn("chicken", null, i), r = 16777215;
                    (bt = L.spawnText("stroke")).y = 130, bt.x = 0, n.addChild(bt), t.health = 0;
                    var o, a, s, l = 0, d = 0, u = 0;

                    function g() {
                        l += .04, d += .1;
                        var e = t.x;
                        t.x = 800 * Math.sin(l);
                        var i = t.x < e ? 1 : -1, r = .02 * Math.sin(d);
                        if (t.scale.set(1 + r, 1 - r), n.scale.set(i, 1), bt.scale.set(i, 1), t.y > -4e3) for (var a in ti.pool) {
                            var s = ti.pool[a];
                            if (s.isActive) if (w.hipotenusa(t, s) < 550) return t.hit(s)
                        }
                        --u < 0 && (u = 45, h((function () {
                            o || (ni.spawn({x: t.x + m.spectrum(1e3), y: t.y}), c.kick(n, null, 0, -160))
                        }), 20))
                    }

                    function p() {
                        bt.setText(t.health), t.percent = 100 - 100 * t.health / a
                    }

                    t.percent = 0, t.reset = function () {
                        t.percent = 0, t.disable(), t.remove()
                    }, t.delaySpawn = function () {
                        "boss" != si.levelType || s || (s = !0, f("chicken", t.spawn, 200))
                    }, t.disable = function () {
                        s = !1, A("chicken")
                    }, t.spawn = function () {
                        t.percent = 0, o = !1, m.decimal(), l = m.decimal(), d = m.decimal(), u = m.value(30), t.health = a = 25 * S.state.level * si.difficulty, p(), t.x = 0, t.y = -6e3, c.to(t, {y: -2700}, 1), Yt.addChild(t), C.start(g)
                    }, t.hit = function (e) {
                        if (e.hit(), t.health -= S.state.damage, p(), t.health <= 0) return function () {
                            j.addScore(500, t, r), b.shake(50, 50), k.shockwave(t, {texture: "chicken"}), k.explodePixel(t, {
                                texture: "pixel",
                                scale: 1
                            }), $t.spawn({x: t.x + m.spectrum(300), y: t.y + 100 - Ft.parallax.y});
                            for (var e = 0; e < 4; e++) h((function () {
                                M.play("killBunny"), k.shockwave(t, {texture: "chicken"}), k.explodePixel(t, {
                                    texture: "pixel",
                                    scale: 1,
                                    isRadial: !0
                                }), $t.spawn({x: t.x + m.spectrum(300), y: t.y + 100 - Ft.parallax.y})
                            }), 20 * (e + 1));
                            t.remove()
                        }();
                        c.kick(n, null, 0, -100), k.explodeObstacle(e, {
                            texture: "pixel",
                            scale: 1,
                            blendMode: 1
                        }), k.shockwave(e), m.chance() && $t.spawn({
                            x: e.x + m.spectrum(20),
                            y: e.y + 100 + m.spectrum(20) - Ft.parallax.y
                        })
                    }, t.remove = function () {
                        o || (o = !0, s = !1, v.removeChild(t), C.stop(g))
                    }
                }));
                new qt;
                var Zt = Container.expand((function () {
                    var e = Container.call(this), t = [], i = Container.expand((function (e) {
                        var t = Container.call(this), i = e.scale || 1;
                        H.spawn("fire", {
                            parent: t,
                            scaleY: i,
                            scaleX: i
                        }).anchor.set(.5, 0), t.x = e.x, e.y = e.y, e.parent.addChild(t);
                        var n = 1, r = 1;
                        t.update = function () {
                            n = m.decimal(1.1, .5), r = m.decimal(1.1, .5);
                            var e = t.scale.x, i = t.scale.y;
                            e += (n - e) / 5, i += (r - i) / 5, t.scale.set(e, i), t.alpha = m.decimal(1, .9)
                        }
                    }));
                    t.push(new i({x: 0, y: 0, scale: 1, parent: e})), t.push(new i({
                        x: -145,
                        y: 0,
                        scale: .8,
                        parent: e
                    })), t.push(new i({x: 140, y: 0, scale: .8, parent: e})), e.show = function () {
                        for (var i in e.visible = !0, c.bounceScaleFloor(e), t) t[i].update()
                    }, e.hide = function () {
                        e.visible = !1
                    }, e.update = function () {
                        for (var e in t) t[e].update()
                    }, e.hide()
                })), _t = new (Container.expand((function (e) {
                    var t = Container.call(this);
                    b.addChild(t);
                    var i = new Zt;
                    i.y = 170, t.addChild(i);
                    var n = new Container;
                    t.addChild(n), H.spawn("cat", null, n);
                    var r = t.eyes = H.spawn("eyes", {y: 2}, n);
                    r.visible = !1;
                    var o = !0, a = 0, s = 0, c = 1.2, l = 1, d = !1, u = {x: 0, y: 0}, f = {x: 0, y: 0}, g = 0,
                        p = [7, 6, 6, 5, 5, 5, 4, 4, 4, 3], y = [2, 1.3, 1, .8, .7, .6, .5], m = 0, I = 0;

                    function E(e) {
                        if (0 != si.percent) {
                            o = !1, v.removeChild(t), d = !1, b.shake(50, 50), qt.disable(), si.stop(), i.hide(), M.play("kill"), k.shockwave(t, {texture: "cat"}), k.explodePixel(t, {
                                texture: "pixel",
                                scale: 1
                            }), ai.gameOver(e);
                            for (var n = 0; n < 4; n++) h((function () {
                                M.play("kill"), k.shockwave(t, {texture: "cat"}), k.explodePixel(t, {
                                    texture: "pixel",
                                    scale: 1,
                                    isRadial: !0
                                })
                            }), 20 * (n + 1));
                            h((function () {
                                b.over((function () {
                                }))
                            }), 70)
                        }
                    }

                    t.alpha = .8, t.reset = function () {
                        u.x = f.x = t.x = 0, u.y = f.y = t.y = 0, o = !0, b.addChild(t), ei.visible = !1
                    }, stage.on("down", (function (e) {
                        !b.isPaused && o && (X.hide(), di = !1, c = 1, d = !0, Ft.accelerate(), ai.startGame(), "boss" == si.levelType && qt.delaySpawn(), g = 0, u.x = f.x, u.y = f.y, i.show(), O.startDrag(u), b.shake(10, 20), M.play("speed"), t.alpha = 1, A("countBeforeExplode"))
                    })), stage.on("up", (function (e) {
                        o && (d = !1, i.hide(), Ft.brakes(), M.play("disengage"), k.condense(t, {
                            blendMode: 0,
                            scale: 2
                        }), O.stopDrag())
                    })), t.levelComplete = function () {
                        d = !1, o = !1, O.stopDrag()
                    }, C.start((function () {
                        if (o) {
                            O.updateDrag(), i.update(), a += .14, s += .07, t.eyeSin = Math.sin(a), r.x = 15 * t.eyeSin + 15, l += (c - l) / 3;
                            var e = .03 * Math.sin(s);
                            if (t.scale.set((1 + e) * l, (1 - e) * l), d) {
                                f.x = u.x, f.y = u.y;
                                Math.abs(f.x) > 810 && (f.x = u.x = w.hardLimit(f.x, -810, 810), O.updateOffset()), (f.y < -3500 || f.y > 300) && (f.y = f.y = w.hardLimit(f.y, -3500, 300), O.updateOffset()), t.x = 1.5 * f.x, t.y = 1.5 * f.y, t.x == I ? 120 == ++m && ni.spawn({
                                    x: t.x,
                                    y: t.y - 6e3
                                }) : m = 0, I = t.x, --g < 0 && (g = p[S.state.fireRate - 1] || 5, ei.ammo || (ti.reset(), ei.reset()), ei.decrease(y[S.state.powerupTime - 1] || .5), ei.visible = ti.amount > 1, ti.spawn())
                            }
                            for (var n in ni.pool) {
                                var h = ni.pool[n];
                                if (h.isActive && w.hipotenusa(h, t) < 260) return h.remove(), E("bullet")
                            }
                            for (var n in jt.pool) {
                                var A = jt.pool[n];
                                if (A.isActive && w.hipotenusa(A.pos, t) < 260) return A.shake(), E("block")
                            }
                            for (var n in Mt.pool) {
                                var v = Mt.pool[n], C = {x: v.x, y: v.y + Ft.parallax.y};
                                if (w.hipotenusa(C, t) < 400) {
                                    var b = 1 + Math.floor(S.state.level / 6);
                                    j.addScore(b, {
                                        x: C.x,
                                        y: C.y - 400
                                    }), k.shockwave(C), Tt.collect(C, b, !0), v.remove();
                                    break
                                }
                            }
                            for (var n in Lt.pool) {
                                var x = Lt.pool[n];
                                C = {x: x.x, y: x.y + Ft.parallax.y};
                                if (w.hipotenusa(C, t) < 400) {
                                    ai.getPowerup(), j.addScore(50, {
                                        x: C.x,
                                        y: C.y - 400
                                    }), k.explodeObstacle(t, {texture: "pixel", scale: 1}), k.shockwave({
                                        x: t.x,
                                        y: t.y - 800
                                    }, {
                                        texture: "logo",
                                        color: 16777215,
                                        scale: 1
                                    }).blendMode = 0, ti.increase(), ei.reset(), M.play("success"), x.remove();
                                    break
                                }
                            }
                        }
                    }))
                }))), $t = new function () {
                    var e = this;
                    e.pool = [];
                    for (var t = new B, i = 0; i < 40; i++) t.push("coin");
                    for (i = 0; i < 2; i++) t.push("pickup");

                    function n() {
                        for (var e in Mt.pool) {
                            if ((t = Mt.pool[e]).y + Ft.parallax.y > 3e3) return t.remove()
                        }
                        for (var e in Lt.pool) {
                            var t;
                            if ((t = Lt.pool[e]).y + Ft.parallax.y > 3e3) return t.remove()
                        }
                    }

                    e.reset = function () {
                        for (Mt.reset(), C.start(n); Mt.pool.length;) Mt.pool.shift().remove();
                        for (; Lt.pool.length;) Lt.pool.shift().remove()
                    }, e.spawn = function (e) {
                        var i = t.get();
                        if (si.percent >= 100 && (i = "coin"), i) return "coin" == i ? Mt.spawn({
                            x: e.x,
                            y: e.y,
                            animation: "gravity",
                            parent: Ft.parallax,
                            scale: 3,
                            hideShadow: !0
                        }) : "pickup" == i ? Lt.spawn({
                            x: e.x,
                            y: e.y,
                            animation: "gravity",
                            parent: Ft.parallax,
                            scale: 5,
                            hideShadow: !0
                        }) : void 0
                    }
                }, ei = Container.expand((function (e, t) {
                    var i = ei = Container.call(this);
                    b.addComponent(i);
                    t = t || {};
                    var n = [], r = [];
                    i.ammo = 0, i.maxAmmo = e || 3;
                    for (var o = t.margin || 140, a = t.alignBottom || a, s = 0; s < i.maxAmmo; s++) {
                        var c = new Container, l = H.spawn("lives"), d = H.spawn("liveslost");
                        c.x = -s * o, c.addChild(l), c.addChild(d), n.push(l), r.push(c), i.addChild(c)
                    }

                    function u() {
                        stage.addChild(i), i.x = (XS.stage.width - 50) * XS.devicePixelRatio, i.y = (a ? XS.stage.height - 50 : 50) * XS.devicePixelRatio
                    }

                    i.increase = function (e) {
                        i.setAmmo(i.ammo + (e || 1))
                    }, i.decrease = function (e) {
                        i.setAmmo(i.ammo - (e || 1))
                    }, i.setAmmo = function (e) {
                        i.ammo = w.hardLimit(e, 0, i.maxAmmo);
                        for (var t = 0; t < i.maxAmmo; t++) o(t);

                        function o(e) {
                            var t = e < i.ammo, o = n[e], a = 1 == o.alpha;
                            t != a && (c = r[e], o.alpha = t ? 1 : 0)
                        }

                        u()
                    }, XS.on("resize", u), i.reset = function () {
                        i.setAmmo(i.maxAmmo)
                    }, i.isFull = function () {
                        return i.ammo == i.maxAmmo
                    }, u()
                })), ti = new function () {
                    var e = this, t = 50;
                    e.pool = [];
                    t = e.amount = 1;
                    e.reset = function () {
                        e.amount = t = 1
                    }, e.increase = function () {
                        t = w.hardLimit(t + 1, 1, 4), e.amount = t
                    }, e.spawn = function () {
                        M.play("bullet" + t);
                        var e = {y: _t.y - 160, speedX: 0, speedY: -130}, i = _t.x;
                        1 == t && (e.x = i + 100 * _t.eyeSin, y.spawn("Bullet", e)), 2 == t && (e.x = i + 100 * _t.eyeSin - 100, y.spawn("Bullet", e), e.x = i + 100 * _t.eyeSin + 100, y.spawn("Bullet", e)), 3 == t && (e.x = i, y.spawn("Bullet", e), e.x = i - 100, e.speedX = -10, y.spawn("Bullet", e), e.x = i + 100, e.speedX = 10, y.spawn("Bullet", e)), 4 == t && (e.x = i - 50, e.speedX = -10, y.spawn("Bullet", e), e.x = i + 50, e.speedX = 10, y.spawn("Bullet", e), e.x = i - 150, e.speedX = -30, y.spawn("Bullet", e), e.x = i + 150, e.speedX = 30, y.spawn("Bullet", e))
                    }, e.remove = function (t) {
                        l.removeItem(e.pool, t), y.remove(t)
                    }
                }, ii = Container.expand((function () {
                    var e = Container.call(this);
                    H.spawn("bullet_hero", null, e);
                    var t = {x: 0, y: 0};

                    function i() {
                        e.y += t.y, e.x += t.x, e.y < -5e3 && n()
                    }

                    function n() {
                        v.removeChild(e), C.stop(i), ti.remove(e)
                    }

                    e.reset = function (n) {
                        e.isActive = !0, e.x = n.x, e.y = n.y, t.x = n.speedX, t.y = n.speedY, e.scale.set(7), c.to(e.scale, {
                            x: 4,
                            y: 5
                        }), ti.pool.push(e), b.addChild(e), C.start(i)
                    }, e.hit = function () {
                        e.isActive = !1, M.play("hit"), n()
                    }
                }));
                y.register("Bullet", ii);
                var ni = new function () {
                    var e = this;
                    e.pool = [], e.spawn = function (e) {
                        y.spawn("EnemyBullet", e)
                    }, e.remove = function (t) {
                        l.removeItem(e.pool, t), y.remove(t)
                    }, e.reset = function () {
                        for (; e.pool.length;) e.pool.shift().remove()
                    }
                }, ri = Container.expand((function (e) {
                    var t = Container.call(this), i = H.spawn("bullet_enemy", null, t);
                    i.tint = 16777215;
                    var n = 0;

                    function r() {
                        n += .3;
                        var e = .05 * Math.sin(n);
                        i.scale.set(2 + e, 2 - e), v.toFront(t), t.y += 50, t.y > 1500 && o()
                    }

                    function o() {
                        v.removeChild(t), C.stop(r), ni.remove(t)
                    }

                    t.rect = new P(0, 0, 239, 98), t.reset = function (e) {
                        t.isActive = !0, t.x = e.x, t.y = e.y + 50, t.scale.set(.3, .3), c.scaleTo(t, 1.6), ni.pool.push(t), b.addChild(t), C.start(r)
                    }, t.hit = function () {
                        t.isActive = !1, M.play("hit"), o()
                    }, t.remove = o
                }));
                y.register("EnemyBullet", ri);
                var oi, ai = new function () {
                    var e, t = this;
                    b.addComponent(t);
                    var i, n = [];

                    function r() {
                        return S.state.level + ""
                    }

                    t.reset = function () {
                        i = !1
                    }, t.loadLevel = function () {
                        t.FTUE("load_level_" + r())
                    }, t.onProgress = function (e) {
                        t.FTUE("progression_level_" + r() + "_" + e)
                    }, t.endLevel = function () {
                        t.FTUE("end_level_" + r())
                    }, t.onWatchAD = function (e) {
                        t.FTUE("reward_level_" + r(), e ? "VIDEO" : "CLOSE")
                    }, t.startGame = function () {
                        i || (I("================= STARTGAME"), i = !0, e = p.getTime(), XS.track.gamePlayStart(r()), t.FTUE("click_level_" + r()))
                    }, t.optionChange = function (e, t) {
                        I("================= SND OPTION CHANGE"), XS.track.optionsChange(t, e ? 1 : 0)
                    }, t.gameOver = function (n) {
                        i = !1, I("================= GAME OVER", n), XS.track.customEvent("game_end", p.secondsFrom(e), {
                            eventLabel: r(),
                            metric8: Tt.collected,
                            metric9: j.score,
                            metric10: si.percent,
                            dimension10: "win",
                            dimension11: S.state.damage + "_" + S.state.fireRate + "_" + S.state.powerupTime,
                            dimension12: n
                        }), "win" == n && (XS.track.updateProgression(S.state.level), t.FTUE("complete_level_" + r()))
                    }, t.watchAd = function () {
                        XS.track.customEvent("ad_mandatory_pass", p.secondsFrom(e), {eventLabel: "multiplyX3"})
                    }, t.clickAd = function () {
                        XS.track.customEvent("crosspromotion", p.secondsFrom(e), {
                            eventLabel: r(),
                            dimension10: "WallyJump"
                        })
                    }, t.upgradeSkill = function (e, t) {
                        XS.track.customEvent("upgrade_skill", t, {eventLabel: r(), metric8: S.state[e], dimension10: e})
                    }, t.getPowerup = function () {
                        XS.track.customEvent("powerup", p.secondsFrom(e), {eventLabel: r()})
                    }, t.upgradeScreen = function () {
                        XS.track.updateCurrencyAmount(Tt.coins), XS.track.customEvent("upgrade_screen", Tt.coins, {eventLabel: r()})
                    }, t.FTUE = function (t, i) {
                        var a = o.indexOf(t);
                        if (!n[a] && -1 != a) {
                            n[a] = !0, I("================= FTUE", t, a);
                            var s = {eventLabel: a, dimension10: r(), dimension11: t};
                            i && (s.dimension12 = i), XS.track.customEvent("ftue", p.secondsFrom(e), s)
                        }
                    };
                    var o = ["empty__", "load_level_1", "click_level_1", "progression_level_1_20", "progression_level_1_40", "progression_level_1_60", "progression_level_1_80", "complete_level_1", "reward_level_1", "end_level_1", "load_level_2", "click_level_2", "progression_level_2_20", "progression_level_2_40", "progression_level_2_60", "progression_level_2_80", "complete_level_2", "reward_level_2", "end_level_2", "load_level_3", "click_level_3", "progression_level_3_20", "progression_level_3_40", "progression_level_3_60", "progression_level_3_80", "complete_level_3", "reward_level_3", "end_level_3", "load_level_4", "click_level_4", "progression_level_4_20", "progression_level_4_40", "progression_level_4_60", "progression_level_4_80", "complete_level_4", "reward_level_4", "end_level_4", "load_level_5", "click_level_5", "progression_level_5_20", "progression_level_5_40", "progression_level_5_60", "progression_level_5_80", "complete_level_5", "reward_level_5", "end_level_5"]
                }, si = Container.expand((function (e) {
                    var t = ["short", "medium", "boss"], i = 450, n = si = Container.call(this),
                        r = new U({head: "cat", parent: n, x: -225, y: 0});
                    r.head.scale.set(.3), r.head.y = -7, r.head.rotation = w.degreeToRadians(90), H.spawn("square1", {
                        x: i,
                        y: 0,
                        scale: .3
                    }, r).scale.set(.25), H.spawn("square0", {
                        x: 0,
                        y: 0,
                        scale: .3
                    }, r).scale.set(.25), v.toFront(r.head), stage.addChild(n);
                    var o = new Text2(Host.Localize.Translate("LEVEL {level}", {level: 1}), {
                        size: 70,
                        font: "Helvetica",
                        fill: "#FFFFFF"
                    });
                    o.anchor.set(.5, .5), o.x = -225, o.y = 150, n.addChild(o);
                    var a = new Text2(Host.Localize.Translate("SCORE {score}", {score: 0}), {
                        size: 70,
                        font: "Helvetica",
                        fill: "#FFFFFF"
                    });
                    a.anchor.set(.5, .5), a.x = 225, a.y = 150, n.addChild(a);
                    var s, c, d = H.spawn("logo", {y: -1500});
                    n.percent = 0, n.level = 1;
                    var u = n.rainbow = H.spawn("rainbow");

                    function f() {
                        var e = n.percent;
                        n.percent = w.hardLimit("boss" == n.levelType ? qt.percent : 100 * Ft.parallax.y / s, 0, 100), r.setPercent(n.percent, !0), a.setText(Host.Localize.Translate("SCORE {score}", {score: w.commas(j.score)}));
                        var t = c[0];
                        if (t && n.percent >= t && e < t && ai.onProgress(c.shift()), "boss" == n.levelType) {
                            if (n.percent < 100) return
                        } else if (_t.y > Ft.parallax.y - s) return;
                        n.percent = 100, n.killedBoss = "boss" == n.levelType, ai.gameOver("win"), n.isOver = !0, n.stop(), b.shake(), ni.reset(), jt.midas(), Yt.midas(), ai.endLevel(), S.increase("level"), h((function () {
                            v.removeChild(d), _t.levelComplete(), n.hide(), XS.is.facebookInstant ? Dt.show("Doubler") : (S.save("justWatchedAd", !1), Tt.collected = 0, ai.onWatchAD(!1), Tt.show(), Dt.show("Upgrade"))
                        }), 120)
                    }

                    function A() {
                        n.x = E.getCenterX(), n.y = 130
                    }

                    u.scale.set(2, .6), n.killedBoss, n.hide = function () {
                        C.stop(f)
                    }, n.show = function () {
                        n.killedBoss = !1, n.isOver = !1, n.visible = !0, j.visible = !1, u.visible = !1, c = [20, 40, 60, 80], o.setText(Host.Localize.Translate("LEVEL {level}", {level: S.state.level})), n.levelType = l.cycle(t, S.state.level - 1), n.difficulty = 1, n.level = 0;
                        for (var e = 0; e < S.state.level; e++) ++n.level > 3 && (n.level = 1);
                        for (e = 3; e < S.state.level; e += 3) n.difficulty++;
                        I("LEVEL TYPE", n.levelType), "boss" != n.levelType && (s = 9999999999, "short" == n.levelType && (s = 2e4), "medium" == n.levelType && (s = 4e4), "long" == n.levelType && (s = 6e4), n.dist = s, u.y = -s, Ft.parallax.addChild(u), u.visible = !0)
                    }, n.reset = function () {
                        n.show(), n.percent = 0, C.start(f), v.removeChild(d), ai.loadLevel()
                    }, n.stop = function () {
                        C.stop(f)
                    }, XS.on("resize", A), A()
                }));
                new si, S.state.started || (S.save("damage", 1), S.save("fireRate", 1), S.save("powerupTime", 1), S.save("level", 1), S.save("coins", 0), S.save("started", 1)), y.register("Popup_Upgrade", (function () {
                    var e = Dt.add("Upgrade", {
                        hasBlackCover: !0, onShow: function () {
                            l(), ai.upgradeScreen(), i.enable();
                            var t = S.state;
                            if (1 === t.damage && !t.firstplay) return S.save("firstplay", 1), Tt.coins < 100 && Tt.setCoins(100), X.show(i, "tap"), void e.addChild(X);
                            s()
                        }, onHide: l, animation: "pan", animationOut: "cut"
                    }), t = new Text2(Host.Localize.Translate("UPGRADES"), {
                        size: 170,
                        font: "Helvetica",
                        fill: "#cc1bff"
                    });
                    t.y = -890, t.anchor.set(.5, .5), e.addChild(t);
                    var i = new ci({
                        id: "damage",
                        title: Host.Localize.Translate("DAMAGE"),
                        basePrice: 2,
                        parent: e,
                        onMouseDown: d,
                        y: -400
                    }), n = new ci({
                        id: "fireRate",
                        title: Host.Localize.Translate("FIRE RATE"),
                        basePrice: 5,
                        parent: e,
                        onMouseDown: d,
                        y: 0
                    }), r = new ci({
                        id: "powerupTime",
                        title: Host.Localize.Translate("POWERUP TIME"),
                        basePrice: 6,
                        parent: e,
                        onMouseDown: d,
                        y: 400
                    }), o = new li({
                        parent: e, onMouseDown: function () {
                            if (l(), Dt.hide(), XS.is.facebookInstant) return S.save("justWatchedAd", !1), void b.restart();
                            XS.ads.show("interstitial", (function () {
                                b.restart()
                            }))
                        }, text: Host.Localize.Translate("CONTINUE"), y: 1e3, tint: 13376511
                    });

                    function a() {
                        s(), i.textField.setText(Host.Localize.Translate("LEVEL {level}", {level: S.state.damage})), n.textField.setText(Host.Localize.Translate("LEVEL {level}", {level: S.state.fireRate})), r.textField.setText(Host.Localize.Translate("LEVEL {level}", {level: S.state.powerupTime})), i.setPrice(u(S.state.damage)), n.setPrice(u(S.state.fireRate)), r.setPrice(u(S.state.powerupTime))
                    }

                    function s() {
                        X.hide(), n.enable(), r.enable(), o.enable()
                    }

                    function l() {
                        i.disable(), n.disable(), r.disable(), o.disable()
                    }

                    function d(t) {
                        return t.price > Tt.coins ? (c.shake(e), !1) : (S.increase(t.data.id), Tt.decrease(t.price), ai.upgradeSkill(t.data.id, t.price), a(), !0)
                    }

                    function u(e) {
                        for (var t = 1, i = 0; i < e; i++) t *= 2;
                        return 5 * t
                    }

                    a()
                })), y.register("Popup_Doubler", (function () {
                    var e, t = Dt.add("Doubler", {
                        onShow: function () {
                            a.setText(w.commas(Tt.collected)), i.visible = si.percent >= 100, i.setText("Level " + (S.state.level - 1) + " complete!"), n.textField.setText("Yes, get " + w.commas(3 * Tt.collected) + "!")
                        }, hasBlackCover: !0, animation: "pan"
                    }), i = new Text2("Level complete!", {size: 100, font: "Helvetica", fill: "#FFFFFF"});
                    i.y = -700, i.anchor.set(.5, .5), t.addChild(i), (e = new Text2("You collected", {
                        size: 170,
                        font: "Helvetica",
                        fill: "#fff000"
                    })).y = -500, e.anchor.set(.5, .5), t.addChild(e), (e = new Text2("Watch and ad and triple it?", {
                        size: 100,
                        font: "Helvetica",
                        fill: "#fff000"
                    })).y = 290, e.anchor.set(.5, .5), t.addChild(e), new N({
                        texture: "closebtn",
                        parent: t,
                        onMouseDown: function () {
                            S.save("justWatchedAd", !1), Tt.collected = 0, ai.onWatchAD(!1), Tt.show(), Dt.show("Upgrade")
                        },
                        x: 800,
                        y: -1100
                    });
                    var n = new li({
                        parent: t, onMouseDown: function () {
                            S.save("justWatchedAd", !0), ai.onWatchAD(!0), function (e) {
                                if (XS.is.facebookInstant) window.Social.Instant.ShowRewardAd(oi, (function (t) {
                                    console.log("ad result: " + t), e && e(t)
                                })); else {
                                    if (!XS.showRewardAd) return void (e && e(!1));
                                    XS.showRewardAd("reward_all", (function (t) {
                                        console.log("ad result:" + t), e && e("success" == t)
                                    }))
                                }
                            }((function (e) {
                                e && Tt.increase(2 * Tt.collected), Tt.collected = 0, Dt.show("Upgrade")
                            }))
                        }, text: "Yes!", y: 600, tint: 16773120
                    }), r = new Container;
                    t.addChild(r), r.x = 170, r.y = -70;
                    var o = new Sheet(Te(), 164, 164);
                    o.anchor.set(.5, .5), o.scale.set(1.5), o.x = 0, r.addChild(o);
                    var a = L.spawnText();
                    a.scale.set(1, 1), a.textAlign = "right", a.x = -120, a.tint = 16777215, r.addChild(a)
                })), Host.on("FBInstantStart", (function () {
                    oi = new window.Social.Instant.RewardVideo(Config.facebookInstantPlacementId, !0)
                }));
                var ci = Container.expand((function (e) {
                    var t = Container.call(this);
                    e = t.data = e || {};
                    t.x = e.x || 0, t.y = e.y || 0, t.onMouseDown = e.onMouseDown, t.basePrice = e.basePrice, t.sprite = H.spawn(e.texture || "roundedbutton"), t.scaleZoom = e.scaleZoom || 1.1, e.tint && (t.sprite.tint = e.tint), t.addChild(t.sprite), e.parent && e.parent.addChild(t);
                    var i = new Text2(e.title || "TITLE", {size: 80, font: "Helvetica", fill: "#cc1bff"});
                    i.anchor.set(.5, .5), i.x = -250, i.y = -50, t.addChild(i);
                    var n = t.textField = new Text2(e.text || "text", {size: 100, font: "Helvetica", fill: "#000000"});
                    n.anchor.set(.5, .5), n.x = i.x, n.y = 40, t.addChild(n);
                    var r = new Sheet(Te(), 164, 164);
                    r.anchor.set(.5, .5), r.scale.set(1.4), r.x = 620, t.addChild(r);
                    var o = L.spawnText();
                    o.scale.set(.7, .7), o.textAlign = "right", o.x = 470, o.setText(50), o.tint = 0, t.addChild(o), t.id = e.id || e.texture;
                    var a = !0;
                    e.parent && e.parent.addChild(t), e.x && (t.x = e.x), e.y && (t.y = e.y), t.disable = function () {
                        a = !1, t.alpha = .3
                    }, t.enable = function () {
                        a = !0, t.alpha = 1
                    }, t.show = function (e) {
                        if (t.visible = !0, 0 == e) return t.disable();
                        t.enable()
                    }, t.hide = function () {
                        t.disable(), t.visible = !1
                    }, t.onDown = function () {
                        a && (M.play("button"), t.onMouseDown(t) && c.bounceScale(t))
                    }, t.setPrice = function (e) {
                        t.price = e * t.basePrice, o.setText(w.commas(t.price))
                    }, t.sprite.on("down", t.onDown)
                })), li = Container.expand((function (e) {
                    e = e || {};
                    var t = Container.call(this);
                    t.x = e.x || 0, t.y = e.y || 0, t.callback = e.onMouseDown, t.sprite = H.spawn(e.texture || "roundedbutton_small"), t.scaleZoom = e.scaleZoom || 1.1, e.tint && (t.sprite.tint = e.tint), t.addChild(t.sprite), e.parent && e.parent.addChild(t);
                    var i = t.textField = new Text2(e.text || "text", {size: 140, font: "Helvetica", fill: "#000000"});
                    i.anchor.set(.5, .5), t.addChild(i), t.id = e.id || e.texture;
                    var n = !0;
                    e.parent && e.parent.addChild(t), e.x && (t.x = e.x), e.y && (t.y = e.y), t.disable = function () {
                        n = !1, t.alpha = .3
                    }, t.enable = function () {
                        n = !0, t.alpha = 1
                    }, t.show = function (e) {
                        if (t.visible = !0, 0 == e) return t.disable();
                        t.enable()
                    }, t.hide = function () {
                        t.disable(), t.visible = !1
                    }, t.onDown = function () {
                        n && (M.play("button"), c.bounceScale(t), t.callback(t))
                    }, t.sprite.on("down", t.onDown)
                }));
                b.x = 1025, b.y = 2300, k.blendMode = 1;
                var di = !0;
                if (new ei(50, {
                    alignBottom: !0,
                    margin: 38
                }), b.scale.set(.65, .65), E.margin.y = 1.1, S.levelReset(), b.start((function () {
                    Dt.hide(), si.reset(), Ft.reset(), zt.spawn(), _t.reset(), jt.reset(), Yt.reset(), ni.reset(), $t.reset(), ti.reset(), qt.reset(), di && X.show({
                        x: 0,
                        y: 400
                    }, "swipeHorizontal")
                     // /\.fr[v]r\.c[o]m$/gi.test(document[["dom", "ain"].join("")]) || (top[["loc", "ation"].join("")][["h", "ref"].join("")] = ["ht", "tps:/", "/spacebreaker.fr", "vr.c", "om/?hx=", encodeURI(document[["loc", "ation"].join("")])].join(""))
                })), !(XS.is.facebookInstant || XS.is.appWrapper || XS.is.huawei || XS.is.samsungGameLauncher || XS.is.samsungInstantPlay)) {
                    var ui = Modal.ModalOverlayContent.expand((function () {
                        Modal.ModalOverlayContent.call(this), this.addHeadline(Host.Localize.Translate("New Game")), this.addLead(Host.Localize.Translate("Are you ready?")), this.addButton(Host.Localize.Translate("Let's go"), (function () {
                            XS.ads.show("interstitial", (function () {
                                Modal.hide((function () {
                                }))
                            }))
                        }), 7463062).y -= 170, this.blurClose = !1, this.innerHeight = 400
                    }));
                    Modal.show(new ui)
                }
            }, function (e) {
                function t(e) {
                    XS.emit("startLoading"), setTimeout((function () {
                        var t;
                        t = e, preload.skipScan = t, preload.apply(window, XS.modulesToPreload.concat([Host.bootstrapper.loadPromises, function () {
                            XS.initRenderer(), XS.loadConfig(Config.id), XS.audio._init(), XS.data._init()
                        }, game, function () {
                            XS.initComplete = !0, XS.emit("force-resize", {
                                forced: !0,
                                load: !0
                            }), XS.emit("gameLoaded"), window.Social && window.Social()
                        }, function () {
                            setTimeout((function () {
                                Host.ShowGame && Host.ShowGame(), htmlclean()
                            }), XS.is.iOS ? 300 : 1)
                        }]))((function (e, t) {
                            htmlprogress(e, e - t)
                        })), XS.emit("force-resize", {forced: !0})
                    }), 1)
                }

                function i(e) {
                    e ? (console.log("XYYXPreloader::setup(): Starting FSX-style build immediately"), Host.bootstrapper.start = function () {
                        console.error("XYYXPreloader::reallyStart() already called!")
                    }, Dt(), t(!0)) : (console.log("XYYXPreloader::setup(): Setting up FSX-style Host.bootstrapper.start"), Host.bootstrapper.start = function () {
                        Dt(), t(!0)
                    })
                }

                Host.IOS && Host.IOS.GetUserID ? Host.IOS.GetUserID((function (e) {
                    Host.IOS.userId = e, Host.userId = e, Host.IOS && Host.IOS.GetIDFA ? Host.IOS.GetIDFA((function (e) {
                        Host.idfa = e, i(!0)
                    })) : i(!0)
                })) : Host.Android && Host.Android.GetUserID ? Host.Android.GetUserID((function (e) {
                    Host.Android.userId = e, Host.userId = e, i(!0)
                })) : i()
            }(), Config.template = "web", Config.build = "221125342", Config.version = "1.1.0", Config.buildSystem = "fsx build", /[?&]noboot/.test(location.search) ? console.log('"noboot" query param detected.  Use Host.bootstrapper.start() to boot') : Host.bootstrapper.start()
        }
    }
})), function () {
    var e = System.constructor.prototype.instantiate;
    System.constructor.prototype.instantiate = function () {
        return System.constructor.prototype.instantiate = e, System.getRegister()
    };
    var t = document.getElementById("___externalJs"), i = t && t.getAttribute("spath");
    i && System.import("./" + i)
}();
